[
   {0}/<C,PROP>rewrite/ => 0,
   {1}/<C,PROP>inference/ => 0,
   {2}/<C,PROP>match/ => 0,
   {3}/<C,PROP>matchall/ => 0,
   {4}/<C,PROP>matchscan/ => 0,
   {5}/<C,PROP>refine/ => 0,
   {6}/<C,PROP>classof/ => 0,
   {7}/<C,PROP>type/ => 0,
   {8}/<C,PROP>datatype/ => 0,
   {9}/<C,PROP>instantiate/ => 0,
   {10}/<C,PROP>lexeme/ => 0,
   {11}/<C,PROP>bitfield/ => 0,
   {12}/<C,PROP>begin/ => 0,
   {13}/<C,PROP>syntax/ => 0,
   {14}/<C,PROP>dataflow/ => 0,
   {15}/<C,PROP>module/ => 0,
   {16}/<C,PROP>signature/ => 0,
   {17}/<C,PROP>constraint/ => 0,
   {18}/<C,PROP>declare/ => 0,
   {19}/<C,PROP>procedure/ => 0,
   {20}/<C,PROP>fun/ => 0,
   {21}/<C,PROP>function/ => 0,
   {22}/<C,PROP>graphtype/ => 0,
   {23}/<C,PROP>graphrewrite/ => 0,
   {24}/<C,PROP>cutrewrite/ => 0,
   {25}/<C,PROP>failrewrite/ => 0,
   {26}/<C,PROP>attributegrammar/ => 0,
   {27}/<C>\(/ => 1,
   {28}/<C>\[/ => 2,
   {29}/<C>\{/ => 3,
   {30}/<C>\(\|/ => 4,
   {31}/<C>\[\|/ => 5,
   {32}/<C>\{\|/ => 6,
   {33}/<C>\.\(/ => 7,
   {34}/<C>\.\[/ => 8,
   {35}/<C>\.#(([0-9]+))/ => 9,
   {36}/<C>-\>#(([0-9]+))/ => 10,
   {37}/<C>#[\(\{\[]/ => 11,
   {38}/<C>[\)\}\]]/ => 12,
   {39}/<C>case/ => 13,
   {40}/<C>and/ => 13,
   {41}/<C>end/ => 13,
   {42}/<C>\.("([^\\"\n]|\\.)*")/ => 14,
   {43}/<C>#("([^\\"\n]|\\.)*")/ => 15,
   {44}/<C>#([\+\-])(([0-9]+))/ => 16,
   {45}/<C,PROP>\.\./ => 17,
   {46}/<C,PROP>\.\.\./ => 17,
   {47}/<C,PROP>\<-\>/ => 17,
   {48}/<C,PROP>::/ => 17,
   {49}/<C,PROP>&&/ => 17,
   {50}/<C,PROP>\|\|/ => 17,
   {51}/<C,PROP>\+\+/ => 17,
   {52}/<C,PROP>--/ => 17,
   {53}/<C,PROP>-\>/ => 17,
   {54}/<C,PROP>\<\</ => 17,
   {55}/<C,PROP>\>\>/ => 17,
   {56}/<C,PROP>\>=/ => 17,
   {57}/<C,PROP>\<=/ => 17,
   {58}/<C,PROP>\+=/ => 17,
   {59}/<C,PROP>-=/ => 17,
   {60}/<C,PROP>\*=/ => 17,
   {61}/<C,PROP>\/=/ => 17,
   {62}/<C,PROP>%=/ => 17,
   {63}/<C,PROP>==/ => 17,
   {64}/<C,PROP>!=/ => 17,
   {65}/<C,PROP>\<\<=/ => 17,
   {66}/<C,PROP>\>\>=/ => 17,
   {67}/<C,PROP>&=/ => 17,
   {68}/<C,PROP>\|=/ => 17,
   {69}/<C,PROP>\^=/ => 17,
   {70}/<C,PROP>=\>/ => 17,
   {71}/<C,PROP>\<-/ => 17,
   {72}/<C,PROP>\<=\>/ => 17,
   {73}/<C,PROP>:=/ => 17,
   {74}/<C,PROP>:-/ => 17,
   {75}/<C,PROP>\-\-\-\-\-+/ => 17,
   {76}/<C,PROP>(([0-9]+))/ => 18,
   {77}/<C,PROP>(((([0-9]+)\.([0-9]+)?|\.([0-9]+)))([eE]([\+\-])?([0-9]+))?)/ => 18,
   {78}/<C,PROP>('([^\\'\n]|\\.[0-9a-f]*)')/ => 18,
   {79}/<C,PROP>("([^\\"\n]|\\.)*")/ => 18,
   {80}/<C>(([\?\#\$]*(([a-zA-Z\$][a-zA-Z0-9_\$]*|[a-zA-Z_][a-zA-Z0-9_]+))[\'\?]*|##))/ => 19,
   {81}/<C>[\<\>\,\.\;\&\|\^\!\~\+\-\*\/\%\?\=\:\\]/ => 20,
   {82}/<C>^#[ \t]*include[ \t]*(\"|\<)[^\"\>\n]*\.[pP][^\\\/\n]*(\"|\>).*/ => 21,
   {83}/<C>[ \t\\\014]/ => 22,
   {84}/<C>(\/\/.*)?\n/ => 23,
   {85}/<C,PROP>^##.*\n/ => 24,
   {86}/<C>^#.*/ => 25,
   {87}/<C,PROP>`/ => 26,
   {88}/<PROP>[#_]/ => 27,
   {89}/<PROP>\(/ => 28,
   {90}/<PROP>\{/ => 29,
   {91}/<PROP>\[/ => 30,
   {92}/<PROP>\(\|/ => 31,
   {93}/<PROP>\{\|/ => 32,
   {94}/<PROP>\[\|/ => 33,
   {95}/<PROP>\.\(/ => 34,
   {96}/<PROP>\.\[/ => 35,
   {97}/<PROP>[\)\}\]]/ => 36,
   {98}/<PROP>\|\)/ => 37,
   {99}/<PROP>\|\}/ => 38,
   {100}/<PROP>\|\]/ => 39,
   {101}/<PROP>if/ => 40,
   {102}/<PROP>then/ => 40,
   {103}/<PROP>else/ => 40,
   {104}/<PROP>elsif/ => 40,
   {105}/<PROP>while/ => 40,
   {106}/<PROP>loop/ => 40,
   {107}/<PROP>is/ => 40,
   {108}/<PROP>class/ => 40,
   {109}/<PROP>unifiable/ => 40,
   {110}/<PROP>of/ => 40,
   {111}/<PROP>do/ => 40,
   {112}/<PROP>break/ => 40,
   {113}/<PROP>continue/ => 40,
   {114}/<PROP>goto/ => 40,
   {115}/<PROP>where/ => 40,
   {116}/<PROP>as/ => 40,
   {117}/<PROP>public/ => 40,
   {118}/<PROP>protected/ => 40,
   {119}/<PROP>private/ => 40,
   {120}/<PROP>const/ => 40,
   {121}/<PROP>extern/ => 40,
   {122}/<PROP>mutable/ => 40,
   {123}/<PROP>applicative/ => 40,
   {124}/<PROP>virtual/ => 40,
   {125}/<PROP>true/ => 40,
   {126}/<PROP>false/ => 40,
   {127}/<PROP>collectable/ => 40,
   {128}/<PROP>finalizable/ => 40,
   {129}/<PROP>printable/ => 40,
   {130}/<PROP>traced/ => 40,
   {131}/<PROP>persistent/ => 40,
   {132}/<PROP>treeparser/ => 40,
   {133}/<PROP>inline/ => 40,
   {134}/<PROP>with/ => 40,
   {135}/<PROP>switch/ => 40,
   {136}/<PROP>unsigned/ => 40,
   {137}/<PROP>signed/ => 40,
   {138}/<PROP>for/ => 40,
   {139}/<PROP>category/ => 40,
   {140}/<PROP>functor/ => 40,
   {141}/<PROP>feature/ => 40,
   {142}/<PROP>sharing/ => 40,
   {143}/<PROP>relation/ => 40,
   {144}/<PROP>view/ => 40,
   {145}/<PROP>inherited/ => 40,
   {146}/<PROP>return/ => 40,
   {147}/<PROP>synthesized/ => 40,
   {148}/<PROP>law/ => 40,
   {149}/<PROP>left:/ => 40,
   {150}/<PROP>right:/ => 40,
   {151}/<PROP>expect:/ => 40,
   {152}/<PROP>prec:/ => 40,
   {153}/<PROP>mapof/ => 40,
   {154}/<PROP>setof/ => 40,
   {155}/<PROP>bagof/ => 40,
   {156}/<PROP>multimapof/ => 40,
   {157}/<PROP>listof/ => 40,
   {158}/<PROP>priqueueof/ => 40,
   {159}/<PROP>queueof/ => 40,
   {160}/<PROP>dequeof/ => 40,
   {161}/<PROP>tupleof/ => 40,
   {162}/<PROP>forall/ => 40,
   {163}/<PROP>exists/ => 40,
   {164}/<PROP>dom/ => 40,
   {165}/<PROP>ran/ => 40,
   {166}/<PROP>arb/ => 40,
   {167}/<PROP>less/ => 40,
   {168}/<PROP>include/ => 40,
   {169}/<PROP>lfp/ => 40,
   {170}/<PROP>gfp/ => 40,
   {171}/<PROP>hom/ => 40,
   {172}/<PROP>implies:/ => 40,
   {173}/<PROP>xor:/ => 40,
   {174}/<PROP>equiv:/ => 40,
   {175}/<PROP>time:/ => 40,
   {176}/<PROP>space:/ => 40,
   {177}/<PROP>nodes:/ => 40,
   {178}/<PROP>edges:/ => 40,
   {179}/<PROP>index:/ => 40,
   {180}/<PROP>hash:/ => 40,
   {181}/<PROP>equality:/ => 40,
   {182}/<PROP>preorder:/ => 40,
   {183}/<PROP>postorder:/ => 40,
   {184}/<PROP>before:/ => 40,
   {185}/<PROP>topdown:/ => 40,
   {186}/<PROP>bottomup:/ => 40,
   {187}/<PROP>strategy:/ => 40,
   {188}/<PROP>order:/ => 40,
   {189}/<PROP>pragma:/ => 40,
   {190}/<PROP>case/ => 41,
   {191}/<PROP>and/ => 41,
   {192}/<PROP>end/ => 41,
   {193}/<PROP>\.("([^\\"\n]|\\.)*")/ => 42,
   {194}/<PROP>(([\?\#\$]*(([a-zA-Z\$][a-zA-Z0-9_\$]*|[a-zA-Z_][a-zA-Z0-9_]+))[\'\?]*|##))/ => 43,
   {195}/<PROP>#("([^\\"\n]|\\.)*")/ => 44,
   {196}/<PROP>#([\+\-])(([0-9]+))/