###############################################################################
#
#  Makefile for compiling Prop 2.3.x
#
###############################################################################

PROP        = ./prop
CC          = g++
CC_INCLUDE  = -I../include
COPTS       = -O6 -Wno-deprecated -pedantic
#COPTS      = -g3
LDOPTS      =
CFLAGS      = $(CC_INCLUDE) $(COPTS)
LDFLAGS     = $(LDOPTS) $(gcc-iostream-lib)

PROP_OPTS_BASIC = $(CC_INCLUDE) -strict -report -v2
PROP_OPTS   = $(PROP_OPTS_BASIC)

#PROP_OPTS_BASIC = -strict $(CC_INCLUDE) -save_space -report -v2
#PROP_OPTS  = $(PROP_OPTS_BASIC) -O14

#
#  These are the prop include files
#
PROP_H_SRC= \
	ir.ph ast.ph basics.ph parsegen.ph keywords.ph parser.ph \
	collection.ph setl-ast.ph setlgen.ph matchcom.ph \
	trs.ph timespace.ph env.ph funmap.ph metasyntax.ph \
	pat.ph list.ph grsgen.ph graphtype.ph graphedges.ph \
	aggen.ph datatype.ph rwmix.ph
#	dataflow.ph bitfield.ph wam.ph constraint.ph logicgen.ph

#
#  These are the prop source files
#
PROP_C_SRC= \
	persistgen.pcc gcgen.pcc printgen.pcc \
	matchcom.pcc matchgen.pcc infgen.pcc type.pcc \
	printing.pcc datagen.pcc codegen.pcc compiler.pcc indexing.pcc \
	ast.pcc constr.pcc parsegen.pcc lexeme.pcc lexer.pcc \
	trs.pcc trs2.pcc trs3.pcc \
	rwgen.pcc rwgen2.pcc rwgen3.pcc rwgen4.pcc rwgen5.pcc \
	lawgen.pcc parser-util.pcc parser.pcc setl-ast.pcc \
	documentation.pcc collection.pcc setlgen.pcc setltype.pcc \
	timespace.pcc env.pcc funmap.pcc metasyntax.pcc \
	pat.pcc grsgen.pcc selector.pcc \
	graphtype.pcc graphrep.pcc graphops.pcc graphreport.pcc \
	classdef.pcc prop-main.pcc \
	aggen.pcc datatype.pcc instance.pcc \
	visualize.pcc visual2.pcc rwmix.pcc
#	dataflow.pcc bitfield.pcc constraint.pcc logicgen.pcc wam.pcc
#   list.pcc
#
#  These are the normal .h files (not generated by prop)
#
NORMAL_H_SRC=   author.h automake.h classdef.h codegen.h compiler.h \
		config.h datagen.h functortab.h hashtab.h infgen.h labelgen.h \
		options.h rwgen.h textbuf.h type.h visualize.h
#
#  These are the normal .cc files (not generated by prop)
#
NORMAL_C_SRC= automake.cc frontend.cc functortab.cc \
	      hashtab.cc labelgen.cc options.cc \
	      patchlev.cc patenv.cc process.cc textbuf.cc

#
#  .h files generated by prop
#
GEN_H_SRC=$(PROP_H_SRC:.ph=.h)

#
#  .cc files generated by prop
#
GEN_C_SRC=$(PROP_C_SRC:.pcc=.cc)

#
#  all files generated by prop
#
GEN_SRC=	$(GEN_H_SRC) $(GEN_C_SRC)

#
#  all .h files
#
H_SRC= $(GEN_H_SRC) $(NORMAL_H_SRC)

#
#  all .cc files
#
C_SRC= $(GEN_C_SRC) $(NORMAL_C_SRC)

#
#  all files
#
SRC=	$(H_SRC) $(C_SRC)

#
#  all object files
#
OBJ =	$(C_SRC:.cc=.o)

#
#  How to build prop
#
prop:	$(SRC) $(OBJ) ../lib-src/libprop.a
	$(CC) $(OBJ) -o $@ $(LDFLAGS) ../lib-src/libprop.a

#
#  Relink prop
#
build-prop:
	$(CC) $(OBJ) -o prop $(LDFLAGS)
	strip $@
#
#  Regenerate source only
#
src:	$(SRC)

debug:	$(SRC) $(OBJ)
	$(CC) $(OBJ) -g -o prop $(LDFLAGS)

profile:	$(SRC) $(OBJ)
	$(CC) $(OBJ) -pg -g -o prop $(LDFLAGS)

tar:
	tar -cvf - [a-z]*.h [a-z]*.cc [a-z]*.[ply]* *.tex \
          banner testprop testprop2 Makefile README \
          | gzip >prop-2.1.tar.gz

#
#  Remove object files only
#
clean:
	rm -f *.o

#
#  Remove all object files and generated code
#
spotless: clean
	rm -f $(GEN_SRC)

depends1:
	touch depends1
depends2:
	touch depends2

classes:
	@awk 'BEGIN { printf "Number of classes = "; }' </dev/null
	@grep "^class " *.h | grep -v ";" | wc -l

test:	test1

test1:
	./testprop
test2:
	./testprop2

wc:
	wc [a-z]*.pcc [a-z]*.ph
genwc:
	wc $(GEN_SRC)

#
# Generate dependencies
#
depends:
	@echo Remaking prop dependency
	$(PROP) -M $(PROP_OPTS) $(PROP_C_SRC) $(PROP_H_SRC) >depends1 || rm -f depends1
	@echo Remaking g++ dependency
	$(CC) -MM $(CFLAGS) $(C_SRC) >depends2 || rm -f depends2

include depends1
include depends2

T%.cc:	T%.pcc
	$(PROP) $(PROP_OPTS_BASIC) $<
%.h:	%.ph
	$(PROP) $(PROP_OPTS) $<
%.cc:	%.pcc
	$(PROP) $(PROP_OPTS) $<
%.o:	%.cc
	$(CC) -c $(CFLAGS) $<

T%:	T%.cc
	$(CC) $@.cc -o $@ -O6 $(CFLAGS) $(LDFLAGS)
