[Syntax class PropParser]
Grammar (779 rules):
{0}	top	->	decl_list 
{1}	rewrite_	->	"rewrite" 
{2}	syntax_	->	"syntax" 
{3}	case_	->	"case" 
{4}	lexeme_	->	"lexeme" 
{5}	inference_	->	"inference" 
{6}	persistent_	->	"persistent" 
{7}	traced_	->	"traced" 
{8}	collectable_	->	"collectable" 
{9}	finalizable_	->	"finalizable" 
{10}	printable_	->	"printable" 
{11}	unifiable_	->	"unifiable" 
{12}	match_or_matchall	->	"match" 
{13}		| 	"match" '*' 
{14}		| 	"matchall" 
{15}		| 	"matchall" '*' 
{16}		| 	"matchscan" 
{17}		| 	"matchscan" '*' 
{18}	where_or_if	->	"if" 
{19}		| 	"where" 
{20}		| 	'|' 
{21}	implies	->	LONG_BAR 
{22}		| 	"=>" 
{23}	negate	->	'~' 
{24}		| 	'!' 
{25}	id	->	ID_TOK 
{26}	poly_datatype	->	POLY_DATATYPE 
{27}	cons	->	CONS_TOK 
{28}	id_or_cons	->	id 
{29}		| 	cons 
{30}	cons_or_string	->	id_or_cons 
{31}		| 	string 
{32}	cons_id	->	CONS_EXP 
{33}	string	->	STRING_TOK 
{34}	regexp	->	REGEXP_TOK 
{35}	quark	->	QUARK_TOK 
{36}	bigint	->	BIGINT_TOK 
{37}	meta_quote	->	META_QUOTE 
{38}	integer	->	INT_TOK 
{39}	real	->	REAL_TOK 
{40}	character	->	CHAR_TOK 
{41}	boolean	->	"false" 
{42}		| 	"true" 
{43}	complex_cons	->	cons 
{44}		| 	'#' '[' ']' 
{45}		| 	'#' '(' ')' 
{46}		| 	'#' '{' '}' 
{47}		| 	'#' '[' "..." ']' 
{48}		| 	'#' '(' "..." ')' 
{49}		| 	'#' '{' "..." '}' 
{50}		| 	"[|" "..." "|]" 
{51}		| 	"(|" "..." "|)" 
{52}		| 	"{|" "..." "|}" 
{53}	non_string_literal	->	integer 
{54}		| 	boolean 
{55}		| 	character 
{56}		| 	real 
{57}		| 	quark 
{58}		| 	bigint 
{59}	literal	->	non_string_literal 
{60}		| 	string 
{61}	top_pat	->	pat 
{62}		| 	top_pat_list2 
{63}	pat	->	simple_pat 
{64}		| 	logical_pat 
{65}	logical_pat	->	'!' pat 
{66}		| 	pat "&&" pat 
{67}		| 	pat "||" pat 
{68}		| 	pat "implies:" pat 
{69}		| 	pat "xor:" pat 
{70}		| 	pat "equiv:" pat 
{71}	simple_pat	->	prim_pat 
{72}		| 	aggr_pat 
{73}	prim_pat	->	id 
{74}		| 	id "as" pat 
{75}		| 	non_string_literal 
{76}		| 	string_pat 
{77}		| 	meta_quote 
{78}		| 	'_' 
{79}		| 	'(' ')' 
{80}		| 	'(' pat ')' 
{81}		| 	'(' pat_list2 ')' 
{82}		| 	'{' lab_pat_list '}' 
{83}		| 	'{' lab_pat_list "..." '}' 
{84}		| 	'(' pat ':' ty ')' 
{85}		| 	cons 
{86}		| 	cons simple_pat 
{87}		| 	"<<" cons_list ">>" pat 
{88}		| 	id simple_pat 
{89}	string_pat	->	regexp 
{90}		| 	string 
{91}		| 	lexeme_ "class" id 
{92}	cons_list	->	cons 
{93}		| 	cons ',' cons_list 
{94}	aggr_pat	->	'[' pat_list ']' 
{95}		| 	'[' pat_list "..." ']' 
{96}		| 	'#' '[' pat_list ']' 
{97}		| 	'#' '[' pat_list1 "..." pat ']' 
{98}		| 	'#' '{' pat_list '}' 
{99}		| 	'#' '{' pat_list1 "..." pat '}' 
{100}		| 	'#' '(' pat_list ')' 
{101}		| 	'#' '(' pat_list1 "..." pat ')' 
{102}		| 	"[|" "|]" 
{103}		| 	"(|" "|)" 
{104}		| 	"{|" "|}" 
{105}		| 	"[|" dots_opt pat_list1 dots_opt "|]" 
{106}		| 	"(|" dots_opt pat_list1 dots_opt "|)" 
{107}		| 	"{|" dots_opt pat_list1 dots_opt "|}" 
{108}		| 	"[|" '|' pat pat_opt '|' dots_opt pat_list1 dots_opt "|]" 
{109}		| 	"(|" '|' pat pat_opt '|' dots_opt pat_list1 dots_opt "|)" 
{110}		| 	"{|" '|' pat pat_opt '|' dots_opt pat_list1 dots_opt "|}" 
{111}		| 	".(" pat_list2 ')' 
{112}	dots_opt	->	
{113}		| 	"..." 
{114}	pat_opt	->	
{115}		| 	':' pat 
{116}	lab_pat	->	id '=' pat 
{117}		| 	id 
{118}	pat_list2	->	big_pat ',' big_pat 
{119}		| 	big_pat ',' pat_list2 
{120}	pat_list	->	
{121}		| 	pat_list1 
{122}	pat_list1	->	big_pat 
{123}		| 	pat_list2 
{124}	big_pat	->	pat 
{125}		| 	pat ':' ty 
{126}	top_pat_list2	->	pat ',' pat 
{127}		| 	pat ',' top_pat_list2 
{128}	lab_pat_list	->	
{129}		| 	lab_pat_list1 
{130}	lab_pat_list1	->	lab_pat 
{131}		| 	lab_pat ',' lab_pat_list1 
{132}	long_ty	->	ty1 
{133}		| 	long_ty "->" ty1 
{134}	ty1	->	"type" 
{135}		| 	ty 
{136}	ty	->	ty '=' exp 
{137}		| 	simple_ty 
{138}		| 	ty '*' 
{139}		| 	ty '&' 
{140}		| 	ty '[' ']' 
{141}		| 	ty '[' exp ']' 
{142}	return_ty	->	simple_ty1 
{143}		| 	return_ty '*' 
{144}		| 	return_ty '&' 
{145}		| 	return_ty '[' ']' 
{146}		| 	return_ty '[' exp ']' 
{147}	inherit_ty	->	id ty_args 
{148}	simple_ty1	->	"class" ty 
{149}		| 	"const" ty 
{150}		| 	"collectable" ty 
{151}		| 	"finalizable" ty 
{152}		| 	"unsigned" ty 
{153}		| 	"signed" ty 
{154}		| 	qualified_ty 
{155}		| 	'(' ')' 
{156}		| 	'(' ty ')' 
{157}		| 	'(' ty_list2 ')' 
{158}		| 	".[" ty_list2 ']' 
{159}		| 	setl_ty 
{160}	simple_ty	->	simple_ty1 
{161}		| 	labeled_ty 
{162}	labeled_ty	->	'{' lab_ty_list '}' 
{163}	qualified_ty	->	id_ty 
{164}		| 	qualified_ty "::" id_ty 
{165}	qual_id	->	id 
{166}		| 	id_ty "::" qual_id 
{167}	id_ty	->	id 
{168}		| 	id '<' ty_list '>' 
{169}	lab_ty	->	id ':' ty 
{170}	ty_args	->	
{171}		| 	'<' ty_list '>' 
{172}	ty_list	->	ty 
{173}		| 	ty_list2 
{174}	ty_list2	->	ty ',' ty 
{175}		| 	ty ',' ty_list2 
{176}	lab_ty_list	->	
{177}		| 	lab_ty 
{178}		| 	lab_ty_list2 
{179}	lab_ty_list2	->	lab_ty ',' lab_ty 
{180}		| 	lab_ty ',' lab_ty_list2 
{181}	exp	->	app_exp 
{182}		| 	exp '+' exp 
{183}		| 	exp '-' exp 
{184}		| 	exp '*' exp 
{185}		| 	exp '/' exp 
{186}		| 	exp '%' exp 
{187}		| 	exp '=' exp 
{188}		| 	exp ":=" exp 
{189}		| 	exp '<' exp 
{190}		| 	exp '>' exp 
{191}		| 	exp '|' exp 
{192}		| 	exp '&' exp 
{193}		| 	exp '^' exp 
{194}		| 	exp "+=" exp 
{195}		| 	exp "-=" exp 
{196}		| 	exp "*=" exp 
{197}		| 	exp "/=" exp 
{198}		| 	exp "%=" exp 
{199}		| 	exp "&=" exp 
{200}		| 	exp "|=" exp 
{201}		| 	exp "^=" exp 
{202}		| 	exp ">=" exp 
{203}		| 	exp "<=" exp 
{204}		| 	exp "==" exp 
{205}		| 	exp "!=" exp 
{206}		| 	exp "||" exp 
{207}		| 	exp "&&" exp 
{208}		| 	exp "<<" exp 
{209}		| 	exp ">>" exp 
{210}		| 	exp "<<=" exp 
{211}		| 	exp ">>=" exp 
{212}		| 	exp "++" 
{213}		| 	exp "--" 
{214}		| 	'-' exp 
{215}		| 	'!' exp 
{216}		| 	"++" exp 
{217}		| 	"--" exp 
{218}		| 	'&' exp 
{219}		| 	'~' exp 
{220}		| 	'*' exp 
{221}		| 	exp '?' exp ':' exp 
{222}		| 	setl_exp 
{223}	app_exp	->	simple_exp 
{224}		| 	app_exp simple_exp 
{225}	primitive_app_exp	->	primitive_exp 
{226}		| 	primitive_app_exp simple_exp 
{227}	primitive_exp	->	id 
{228}		| 	literal 
{229}		| 	cons 
{230}	simple_exp	->	primitive_exp 
{231}		| 	'(' ')' 
{232}		| 	'(' exp ')' 
{233}		| 	'(' exp_list2 ')' 
{234}		| 	tick '{' lab_exp_list '}' 
{235}		| 	list_exp 
{236}		| 	cons_exp 
{237}		| 	meta_exp 
{238}		| 	simple_exp '.' id 
{239}		| 	simple_exp '.' '#' integer 
{240}		| 	simple_exp '[' exp ']' 
{241}		| 	simple_exp "->" id 
{242}		| 	simple_exp "->" '#' integer 
{243}		| 	id "::" id 
{244}	tick	->	
{245}		| 	'\'' tick 
{246}	list_exp	->	'#' '[' exp_list ']' 
{247}		| 	'#' '(' exp_list ')' 
{248}		| 	'#' '{' exp_list '}' 
{249}		| 	'#' '[' exp_list "..." exp ']' 
{250}		| 	'#' '(' exp_list "..." exp ')' 
{251}		| 	'#' '{' exp_list "..." exp '}' 
{252}		| 	"[|" exp_list "|]" 
{253}		| 	"(|" exp_list "|)" 
{254}		| 	"{|" exp_list "|}" 
{255}		| 	".(" exp_list2 ')' 
{256}	cons_exp	->	cons_id tick '{' lab_exp_list '}' 
{257}		| 	cons_id tick '(' exp_list ')' '{' lab_exp_list '}' 
{258}		| 	cons_id tick '(' exp_list ')' '(' exp_list ')' 
{259}	meta_exp	->	meta_quote 
{260}	lab_exp	->	id '=' exp 
{261}	paren_exp	->	'(' exp ')' 
{262}	exp_list	->	
{263}		| 	exp 
{264}		| 	exp_list2 
{265}	exp_list2	->	exp ',' exp 
{266}		| 	exp ',' exp_list2 
{267}	lab_exp_list	->	
{268}		| 	lab_exp 
{269}		| 	lab_exp_list2 
{270}	lab_exp_list2	->	lab_exp ',' lab_exp 
{271}		| 	lab_exp ',' lab_exp_list2 
{272}	match_decl	->	match_or_matchall match_ty match_options match_exps <453> '{' case_or_bar_rules '}' 
{273}		| 	match_or_matchall match_ty match_options match_exps "of" <454> case_or_bar_rules "end" "match" ';' 
{274}	match_options	->	
{275}		| 	"while" 
{276}	match_ty	->	
{277}		| 	'[' ty ']' 
{278}	match_exps	->	match_exp 
{279}		| 	match_exp "and" match_exps 
{280}	match_exp	->	paren_exp 
{281}	case_or_bar_rules	->	case_rules 
{282}		| 	bar_rules 
{283}	case_rules	->	a_case_rule 
{284}		| 	a_case_rule case_rules 
{285}	bar_rules	->	a_bar_rule 
{286}		| 	a_bar_rule '|' bar_rules 
{287}	a_case_rule	->	rewrite_mode case_rule 
{288}	a_bar_rule	->	rewrite_mode bar_rule rewrite_mode 
{289}	case_rule	->	case_ top_pat <455> guard_exp cost ':' <456> decl_list 
{290}	guard_exp	->	
{291}		| 	where_or_if exp 
{292}	bar_rule	->	line_number id_or_cons "->" top_pat <457> guard_exp cost ':' bar_rule_action 
{293}		| 	line_number top_pat <458> guard_exp cost ':' bar_rule_action 
{294}	line_number	->	
{295}	bar_rule_action	->	brace_body 
{296}		| 	replacement_decl semi_opt 
{297}		| 	replacement_exp_decl semi_opt 
{298}		| 	return_exp semi_opt 
{299}		| 	compound_stmt 
{300}		| 	
{301}	replacement_exp_decl	->	replacement_exp 
{302}	return_exp	->	"return" replacement_exp 
{303}	semi_opt	->	
{304}		| 	';' 
{305}	replacement_exp	->	primitive_app_exp 
{306}		| 	list_exp 
{307}		| 	'(' exp ')' 
{308}	cost	->	
{309}		| 	'\\' exp 
{310}	brace_body	->	'{' <459> decl_list <460> '}' 
{311}	begin_end_body	->	"begin" <461> decl_list <462> "end" 
{312}	brace_body_opt	->	
{313}		| 	brace_body 
{314}	scope	->	"public" 
{315}		| 	"protected" 
{316}		| 	"private" 
{317}	scope_opt	->	
{318}		| 	scope 
{319}	decl	->	one_decl 
{320}		| 	ATTRIB_ID 
{321}		| 	"classof" id_or_cons 
{322}		| 	typeexp_decl 
{323}	one_decl	->	datatype_decl 
{324}		| 	type_decl 
{325}		| 	refine_decl 
{326}		| 	instantiate_decl 
{327}		| 	inference_class_decl 
{328}		| 	inference_decl 
{329}		| 	rewrite_class_decl 
{330}		| 	rewrite_decl 
{331}		| 	rewriting_decl 
{332}		| 	syntax_class_decl 
{333}		| 	syntax_decl 
{334}		| 	attribgram_class_decl 
{335}		| 	attribgram_decl 
{336}		| 	fun_decl 
{337}		| 	match_decl 
{338}		| 	exp_decl 
{339}		| 	replacement_decl ';' 
{340}		| 	lexeme_decl 
{341}		| 	compound_stmt 
{342}		| 	compound_def 
{343}		| 	graph_class_decl 
{344}		| 	graph_rewrite_decl 
{345}		| 	? ';' 
{346}	decl_list	->	
{347}		| 	<463> decl decl_list 
{348}	exp_decl	->	cons_exp 
{349}		| 	list_exp 
{350}		| 	quark 
{351}		| 	bigint 
{352}		| 	meta_exp 
{353}	typeexp_decl	->	poly_datatype '<' ty_list '>' 
{354}		| 	".[" ty_list2 ']' 
{355}	datatype_decl	->	"datatype" datatype_defs0 view_defs_opt law_defs_opt ty_defs_opt ';' 
{356}	datatype_defs0	->	
{357}		| 	datatype_defs 
{358}	datatype_defs	->	datatype_def 
{359}		| 	datatype_def "and" datatype_defs 
{360}	datatype_def	->	id tyvars inherit_list_opt qualifiers_opt '=' <464> switch_exp terms <465> datatype_body 
{361}		| 	id tyvars inherit_list_opt qualifiers_opt 
{362}	switch_exp	->	
{363}		| 	"match" paren_exp 
{364}	datatype_body	->	
{365}		| 	scope ':' brace_body 
{366}	tyvars	->	
{367}		| 	'<' var_list '>' 
{368}	var	->	id 
{369}	var_list0	->	
{370}		| 	var_list 
{371}	var_list	->	var 
{372}		| 	var ',' var_list 
{373}	terms	->	
{374}		| 	terms1 
{375}	terms1	->	term 
{376}		| 	term '|' terms1 
{377}	term	->	'_' inherit_list_opt opt_with 
{378}		| 	simple_term inherit_list_opt opt_with view_predicate 
{379}		| 	simple_term inherit_list_opt "=>" print_formats opt_with view_predicate 
{380}		| 	lexeme_ "class" id 
{381}	view_predicate	->	
{382}		| 	"if" app_exp 
{383}	opt_with	->	
{384}		| 	"with" brace_body 
{385}	simple_term	->	simple_term1 
{386}		| 	simple_term1 '!' 
{387}		| 	"view" exp "=>" simple_term 
{388}		| 	"virtual" simple_term 
{389}	simple_term1	->	id_or_cons 
{390}		| 	id_or_cons string 
{391}		| 	id_or_cons regexp 
{392}		| 	id_or_cons "<=>" string 
{393}		| 	string 
{394}		| 	cons_or_string opt_of ty 
{395}		| 	cons_or_string opt_of ty_list2 
{396}		| 	'#' '[' ']' 
{397}		| 	'#' '(' ')' 
{398}		| 	'#' '{' '}' 
{399}		| 	'#' '[' ty "..." ty ']' 
{400}		| 	'#' '(' ty "..." ty ')' 
{401}		| 	'#' '{' ty "..." ty '}' 
{402}		| 	"[|" ty "|]" 
{403}		| 	"(|" ty "|)" 
{404}		| 	"{|" ty "|}" 
{405}	opt_of	->	
{406}		| 	"of" 
{407}	print_formats	->	
{408}		| 	print_format print_formats 
{409}	print_format	->	integer 
{410}		| 	id 
{411}		| 	string 
{412}		| 	character 
{413}		| 	special_print_format 
{414}	special_print_format	->	'{' 
{415}		| 	'}' 
{416}		| 	'(' 
{417}		| 	')' 
{418}		| 	'[' 
{419}		| 	']' 
{420}		| 	'^' 
{421}		| 	'_' 
{422}		| 	'/' 
{423}	ty_defs_opt	->	
{424}		| 	"where" "type" type_defs 
{425}	type_decl	->	"type" type_defs ';' 
{426}	type_defs	->	type_def 
{427}		| 	type_def and_or_bar type_defs 
{428}	type_def	->	sharing_opt id tyvars '=' ty 
{429}	sharing_opt	->	
{430}		| 	"sharing" 
{431}	view_defs_opt	->	
{432}		| 	"type" "view" id view_defs 
{433}	view_defs	->	view_def 
{434}		| 	view_def '|' view_defs 
{435}	view_def	->	<466> simple_pat ':' app_exp selectors_opt 
{436}	selectors_opt	->	
{437}		| 	"and" selectors 
{438}	selectors	->	selector 
{439}		| 	selector "and" selectors 
{440}	selector	->	id '=' app_exp 
{441}	law_defs_opt	->	
{442}		| 	"law" law_defs 
{443}	law_defs	->	law_def 
{444}		| 	law_def and_or_bar law_defs 
{445}	and_or_bar	->	"and" 
{446}		| 	'|' 
{447}	law_def	->	invertible id <467> patvars guard_exp2 '=' pat 
{448}	invertible	->	"inline" 
{449}		| 	
{450}	guard_exp2	->	
{451}		| 	where_or_if paren_exp 
{452}	patvars	->	
{453}		| 	var_list 
{454}		| 	'(' var_list0 ')' 
{455}	refine_decl	->	"refine" refine_defs ';' 
{456}	refine_defs	->	refine_def 
{457}		| 	refine_def "and" refine_defs 
{458}	refine_def	->	refine_ty_list inherit_list_opt qualifiers_opt brace_body_opt 
{459}		| 	refine_cons_list inherit_list_opt brace_body_opt 
{460}		| 	printable_ printing_decls 
{461}		| 	persistent_ persistent_decls 
{462}		| 	"class" id_or_cons "::" id_or_cons '(' ')' brace_body 
{463}		| 	"class" id_or_cons "::" '~' id_or_cons '(' ')' brace_body 
{464}	refine_ty	->	id tyvars 
{465}	refine_ty_list	->	refine_ty 
{466}		| 	refine_ty ',' refine_ty_list 
{467}	refine_cons	->	complex_cons ty_args 
{468}	refine_cons_list	->	refine_cons 
{469}		| 	refine_cons ',' refine_cons_list 
{470}	printing_decls	->	printing_decl 
{471}		| 	printing_decl '|' printing_decls 
{472}	printing_decl	->	complex_cons ty_args "=>" print_formats 
{473}	persistent_decls	->	persistent_decl 
{474}		| 	persistent_decl '|' persistent_decls 
{475}	persistent_decl	->	id ty_args "=>" pid 
{476}	pid	->	string 
{477}	inherit_list_opt	->	
{478}		| 	':' inherit_list 
{479}	inherit_list	->	inherit 
{480}		| 	inherit ',' inherit_list 
{481}	inherit	->	qualifiers scope_opt inherit_ty 
{482}	qualifiers_opt	->	
{483}		| 	'!' qualifiers_opt 
{484}		| 	"::" qualifiers 
{485}	qualifiers	->	
{486}		| 	qualifier qualifiers 
{487}	qualifier	->	printable_ 
{488}		| 	collectable_ 
{489}		| 	lexeme_ 
{490}		| 	finalizable_ 
{491}		| 	rewrite_ 
{492}		| 	persistent_ 
{493}		| 	traced_ 
{494}		| 	unifiable_ 
{495}		| 	"relation" 
{496}		| 	"virtual" 
{497}		| 	"const" 
{498}		| 	"applicative" 
{499}		| 	"treeparser" 
{500}		| 	"view" 
{501}		| 	"bitfield" 
{502}		| 	"inline" 
{503}		| 	"extern" 
{504}	instantiate_decl	->	"instantiate" extern_opt "datatype" ty_list ';' 
{505}	extern_opt	->	
{506}		| 	"extern" 
{507}	inference_class_decl	->	inference_ "class" id inherit_list_opt qualifiers_opt brace_body ';' 
{508}	inference_decl	->	inference_ id '{' inference_rules '}' ';' 
{509}	inference_rules	->	
{510}		| 	inference_rule inference_rules 
{511}	inference_rule	->	<468> antecedents LONG_BAR conclusions ';' 
{512}	antecedents	->	
{513}		| 	antecedents2 
{514}	antecedents2	->	antecedent 
{515}		| 	antecedent "and" antecedents2 
{516}	antecedent	->	simple_antecedent 
{517}		| 	"match" simple_antecedent 
{518}		| 	'~' simple_antecedent 
{519}	simple_antecedent	->	pat 
{520}		| 	pat where_or_if <469> exp 
{521}	conclusions	->	conclusion 
{522}		| 	conclusion "and" conclusions 
{523}	conclusion	->	primitive_app_exp 
{524}		| 	'~' primitive_app_exp 
{525}		| 	brace_body 
{526}	syntax_class_decl	->	syntax_ "class" id inherit_list_opt qualifiers_opt brace_body ';' 
{527}	syntax_decl	->	syntax_ id <470> '{' prec_rules expect_ <471> bnf_rules '}' ';' 
{528}	prec_rules	->	
{529}		| 	prec_rule prec_rules 
{530}	prec_rule	->	"left:" integer production ';' 
{531}		| 	"right:" integer production ';' 
{532}	expect_	->	
{533}		| 	"expect:" integer ';' 
{534}		| 	"expect:" '_' ';' 
{535}	bnf_rules	->	
{536}		| 	bnf_rule bnf_rules 
{537}	bnf_rule	->	line_number id ty_opt ':' alt_productions ';' 
{538}	attribgram_class_decl	->	"attributegrammar" "class" id inherit_list_opt qualifiers_opt brace_body ';' 
{539}	attribgram_decl	->	"attributegrammar" id <472> '{' prec_rules expect_ <473> bnf_rules '}' ';' 
{540}	lexeme_decl	->	lexeme_ lexeme_rules ';' 
{541}		| 	lexeme_ "class" lexeme_class_rules ';' 
{542}	lexeme_rules	->	lexeme_rule 
{543}		| 	lexeme_rule and_or_bar lexeme_rules 
{544}	lexeme_rule	->	id '=' string_pat 
{545}	lexeme_class_rules	->	lexeme_class_rule 
{546}		| 	lexeme_class_rule "and" lexeme_class_rules 
{547}	lexeme_class_rule	->	id '=' terms 
{548}	ty_opt	->	
{549}		| 	ty 
{550}	alt_productions	->	production 
{551}		| 	production '|' alt_productions 
{552}	production	->	<474> a_production 
{553}	a_production	->	
{554}		| 	<475> symbol a_production 
{555}	symbol	->	id 
{556}		| 	cons 
{557}		| 	character 
{558}		| 	string 
{559}		| 	regexp 
{560}		| 	paren_exp 
{561}		| 	brace_body 
{562}		| 	'?' 
{563}		| 	"prec:" cons 
{564}	rewrite_class_decl	->	rewrite_ "class" id '(' protocols ')' inherit_list_opt qualifiers_opt brace_body ';' 
{565}	protocols_opt	->	
{566}		| 	'(' protocols ')' 
{567}	protocols	->	protocol 
{568}		| 	protocol ',' protocols 
{569}	protocol	->	ty inherited_opt synthesized_opt 
{570}	inherited_opt	->	
{571}		| 	"inherited" ty 
{572}	synthesized_opt	->	
{573}		| 	"synthesized" ty 
{574}		| 	':' ty 
{575}	rewrite_decl	->	rewrite_ id <476> '{' rewrite_indexings case_or_bar_rules '}' ';' 
{576}	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" '(' protocols ')' qualifiers_opt <477> '{' rewrite_indexings case_or_bar_rules '}' 
{577}		| 	rewrite_ paren_exp opt_dest "type" '(' protocols ')' qualifiers_opt <478> "of" rewrite_indexings case_or_bar_rules "end" "rewrite" ';' 
{578}	rewrite_indexings	->	"index:" rewrite_indices ';' 
{579}		| 	
{580}	rewrite_indices	->	rewrite_index 
{581}		| 	rewrite_index ',' rewrite_indices 
{582}	rewrite_index	->	simple_ty '=' id_or_cons 
{583}		| 	simple_ty '=' "extern" id_or_cons 
{584}	opt_dest	->	
{585}		| 	"=>" exp 
{586}	replacement_decl	->	rewrite_ paren_exp 
{587}		| 	"cutrewrite" paren_exp 
{588}		| 	"cutrewrite" 
{589}		| 	"failrewrite" 
{590}	rewrite_mode	->	
{591}		| 	"topdown:" 
{592}		| 	"bottomup:" 
{593}		| 	"before:" 
{594}		| 	"preorder:" 
{595}		| 	"postorder:" 
{596}	fun_decl	->	"fun" fun_rules_list ';' 
{597}	fun_rules_list	->	this_fun_rules 
{598}		| 	this_fun_rules "and" fun_rules_list 
{599}	this_fun_rules	->	<479> fun_rules 
{600}	fun_rules	->	fun_rule 
{601}		| 	fun_rule '|' fun_rules 
{602}	fun_rule_head	->	qual_id top_pat 
{603}	fun_rule	->	fun_rule_head ':' return_ty where_or_if exp ':' fun_action 
{604}		| 	fun_rule_head where_or_if exp ':' fun_action 
{605}		| 	fun_rule_head ':' return_ty ':' fun_action 
{606}		| 	fun_rule_head ':' fun_action 
{607}	fun_action	->	brace_body 
{608}		| 	return_exp 
{609}	def	->	id ':' ty ';' 
{610}		| 	id ':' ty ":=" exp ';' 
{611}		| 	datatype_decl 
{612}		| 	type_decl 
{613}		| 	compound_def 
{614}	compound_def	->	function_def 
{615}		| 	module_def 
{616}		| 	signature_def 
{617}	function_def	->	"function" cons_or_string '(' fun_args ')' "return" ty "is" defs "begin" stmt_list "end" ';' 
{618}		| 	"procedure" cons_or_string '(' fun_args ')' "is" defs "begin" stmt_list "end" ';' 
{619}	fun_args	->	
{620}		| 	fun_args1 
{621}	fun_args1	->	fun_arg 
{622}		| 	fun_arg ',' fun_args 
{623}	fun_arg	->	id ':' ty 
{624}	module_def	->	"module" cons_or_string module_args module_sig "is" "begin" defs "end" ';' 
{625}	module_args	->	
{626}		| 	'(' labeled_sigs ')' 
{627}	labeled_sigs	->	labeled_sig 
{628}		| 	labeled_sig ',' labeled_sigs 
{629}	labeled_sig	->	id ':' sig 
{630}	module_sig	->	
{631}		| 	':' sig 
{632}	signature_def	->	"signature" cons_or_string module_args "is" sig ';' 
{633}	sig	->	id 
{634}		| 	sig '(' sigs ')' 
{635}		| 	sig '.' id 
{636}		| 	"begin" defs "end" 
{637}	sigs	->	sig 
{638}		| 	sig ',' sigs 
{639}	defs	->	
{640}		| 	def defs 
{641}	stmt	->	exp ":=" exp ';' 
{642}		| 	"while" exp "loop" stmt_list "end" "loop" ';' 
{643}		| 	"if" exp "then" stmt_list else_clause ';' 
{644}		| 	"forall" generator_list "loop" stmt_list "end" "loop" ';' 
{645}		| 	"return" exp ';' 
{646}		| 	match_decl 
{647}		| 	rewriting_decl 
{648}		| 	replacement_decl ';' 
{649}		| 	compound_stmt 
{650}	else_clause	->	"end" "if" 
{651}		| 	"else" stmt_list "end" "if" 
{652}		| 	"elsif" exp "then" stmt_list else_clause 
{653}	stmt_list	->	stmt 
{654}		| 	stmt stmt_list 
{655}	compound_stmt	->	"begin" stmt_list "end" ';' 
{656}		| 	"declare" defs "begin" stmt_list "end" ';' 
{657}	generator_list	->	generator 
{658}		| 	generator ',' generator_list 
{659}	generator	->	pat guard_exp "<-" exp 
{660}	setl_ty	->	"listof" '<' ty '>' 
{661}		| 	"tupleof" '<' ty_list2 '>' 
{662}		| 	"setof" '<' ty '>' 
{663}		| 	"bagof" '<' ty '>' 
{664}		| 	"mapof" '<' ty ',' ty '>' 
{665}		| 	"multimapof" '<' ty ',' ty '>' 
{666}		| 	"queueof" '<' ty '>' 
{667}		| 	"priqueueof" '<' ty '>' 
{668}		| 	"dequeof" '<' ty '>' 
{669}	setl_exp	->	"arb" exp 
{670}		| 	"dom" exp 
{671}		| 	"ran" exp 
{672}		| 	exp "with" exp 
{673}		| 	exp "less" exp 
{674}		| 	exp "with" ":=" exp 
{675}		| 	exp "less" ":=" exp 
{676}		| 	set_comprehension 
{677}	set_comprehension	->	"setof" '{' exp ':' generator_list guard_exp3 '}' 
{678}	guard_exp3	->	
{679}		| 	"where" exp 
{680}	complexity	->	id_or_cons 
{681}		| 	'(' complexity ')' 
{682}		| 	complexity '+' complexity 
{683}		| 	complexity '*' complexity 
{684}		| 	complexity '/' complexity 
{685}		| 	complexity '^' complexity 
{686}		| 	integer 
{687}		| 	real 
{688}		| 	id_or_cons complexity 
{689}	graph_class_decl	->	"graphtype" id inherit_list_opt qualifiers_opt '(' <480> node_spec <481> edge_spec ')' brace_body ';' 
{690}	node_spec	->	
{691}		| 	"nodes:" node_defs 
{692}	node_defs	->	node_def 
{693}		| 	node_def "and" node_defs 
{694}		| 	node_def '|' node_defs 
{695}	node_def	->	id 
{696}		| 	id opt_of ty hashfun eqfun 
{697}	hashfun	->	
{698}		| 	"hash:" id 
{699}	eqfun	->	
{700}		| 	"equality:" id 
{701}	edge_spec	->	
{702}		| 	"edges:" edge_defs 
{703}	edge_defs	->	edge_def 
{704}		| 	edge_def "and" edge_defs 
{705}		| 	edge_def '|' edge_defs 
{706}	edge_def	->	id opt_of node "->" node indexing 
{707}		| 	id opt_of node "<->" node indexing 
{708}		| 	id opt_of node "<=>" node indexing 
{709}		| 	id opt_of node "<=>" '*' node indexing 
{710}	node	->	id 
{711}	indexing	->	
{712}		| 	"index:" index_types 
{713}	index_types	->	index_type 
{714}		| 	index_type index_types 
{715}		| 	index_type ',' index_types 
{716}	index_type	->	"dom" 
{717}		| 	"ran" 
{718}		| 	"dom" "->" "ran" 
{719}		| 	"dom" "<-" "ran" 
{720}		| 	"ran" "->" "dom" 
{721}		| 	"dom" "<->" "ran" 
{722}	graph_rewrite_decl	->	"graphrewrite" id '(' fun_args ')' '{' grs_sections '}' 
{723}		| 	"graphrewrite" id '(' fun_args ')' '=' "begin" grs_sections "end" "graphrewrite" ';' 
{724}	grs_sections	->	grs_data_declarations grs_index_declarations grs_strata 
{725}	grs_data_declarations	->	
{726}	grs_index_declarations	->	
{727}	grs_strata	->	grs_stratum 
{728}	grs_stratum	->	grs_rules 
{729}	grs_rules	->	
{730}		| 	grs_rule grs_rules 
{731}	grs_rule	->	grs_pat implies grs_conclusions ';' 
{732}	grs_pat	->	grs_simple_pat 
{733}		| 	"if" '(' exp ')' 
{734}		| 	"forall" id '.' grs_simple_pat 
{735}		| 	grs_pat ',' grs_pat 
{736}		| 	grs_pat "and" grs_pat 
{737}		| 	grs_pat "||" grs_pat 
{738}		| 	'(' grs_pat ')' 
{739}	grs_simple_pat	->	id_or_cons '(' pat_list1 ')' 
{740}		| 	negate id_or_cons '(' pat_list1 ')' 
{741}	grs_conclusions	->	grs_conclusion 
{742}		| 	grs_conclusion "and" grs_conclusions 
{743}		| 	grs_conclusion ',' grs_conclusions 
{744}	grs_conclusion	->	id_or_cons '(' exp_list ')' 
{745}		| 	negate id_or_cons '(' exp_list ')' 
{746}		| 	'+' exp 
{747}		| 	'-' exp 
{748}		| 	brace_body 
{749}	<453>	->	 
{750}	<454>	->	 
{751}	<455>	->	 
{752}	<456>	->	 
{753}	<457>	->	 
{754}	<458>	->	 
{755}	<459>	->	 
{756}	<460>	->	 
{757}	<461>	->	 
{758}	<462>	->	 
{759}	<463>	->	 
{760}	<464>	->	 
{761}	<465>	->	 
{762}	<466>	->	 
{763}	<467>	->	 
{764}	<468>	->	 
{765}	<469>	->	 
{766}	<470>	->	 
{767}	<471>	->	 
{768}	<472>	->	 
{769}	<473>	->	 
{770}	<474>	->	 
{771}	<475>	->	 
{772}	<476>	->	 
{773}	<477>	->	 
{774}	<478>	->	 
{775}	<479>	->	 
{776}	<480>	->	 
{777}	<481>	->	 
{778}	<start>	->	top $ 


States (1464):
<0>

<1>	<start>	->	. top $ 
	<463>	->	. 	{ "graphrewrite" "graphtype" "declare" "signature" "module" "procedure" "function" "fun" "failrewrite" "cutrewrite" "attributegrammar" "instantiate" "refine" "datatype" ? "classof" ATTRIB_ID "begin" ".[" "type" ".(" "{|" "(|" "[|" '#' META_QUOTE BIGINT_TOK QUARK_TOK CONS_EXP POLY_DATATYPE "matchscan" "matchall" "match" "inference" "lexeme" "syntax" "rewrite" }
	decl_list	->	. 	{ $ }

	             top	goto state <2>
	       decl_list	goto state <3>
	           <463>	goto state <4>
	       "rewrite"	reduce using rule {759} (<463>)
	        "syntax"	reduce using rule {759} (<463>)
	        "lexeme"	reduce using rule {759} (<463>)
	     "inference"	reduce using rule {759} (<463>)
	         "match"	reduce using rule {759} (<463>)
	      "matchall"	reduce using rule {759} (<463>)
	     "matchscan"	reduce using rule {759} (<463>)
	   POLY_DATATYPE	reduce using rule {759} (<463>)
	        CONS_EXP	reduce using rule {759} (<463>)
	       QUARK_TOK	reduce using rule {759} (<463>)
	      BIGINT_TOK	reduce using rule {759} (<463>)
	      META_QUOTE	reduce using rule {759} (<463>)
	             '#'	reduce using rule {759} (<463>)
	            "[|"	reduce using rule {759} (<463>)
	            "(|"	reduce using rule {759} (<463>)
	            "{|"	reduce using rule {759} (<463>)
	            ".("	reduce using rule {759} (<463>)
	          "type"	reduce using rule {759} (<463>)
	            ".["	reduce using rule {759} (<463>)
	         "begin"	reduce using rule {759} (<463>)
	       ATTRIB_ID	reduce using rule {759} (<463>)
	       "classof"	reduce using rule {759} (<463>)
	               ?	reduce using rule {759} (<463>)
	      "datatype"	reduce using rule {759} (<463>)
	        "refine"	reduce using rule {759} (<463>)
	   "instantiate"	reduce using rule {759} (<463>)
	"attributegrammar"	reduce using rule {759} (<463>)
	    "cutrewrite"	reduce using rule {759} (<463>)
	   "failrewrite"	reduce using rule {759} (<463>)
	           "fun"	reduce using rule {759} (<463>)
	      "function"	reduce using rule {759} (<463>)
	     "procedure"	reduce using rule {759} (<463>)
	        "module"	reduce using rule {759} (<463>)
	     "signature"	reduce using rule {759} (<463>)
	       "declare"	reduce using rule {759} (<463>)
	     "graphtype"	reduce using rule {759} (<463>)
	  "graphrewrite"	reduce using rule {759} (<463>)
	               $	reduce using rule {346} (decl_list)

<2>	<start>	->	top . $ 

	               $	shift, and goto state <5>

<3>	top	->	decl_list . 

	       <default>	reduce using rule {0} (top)

<4>	decl_list	->	<463> . decl decl_list 

	       "rewrite"	shift, and goto state <6>
	        "syntax"	shift, and goto state <7>
	        "lexeme"	shift, and goto state <8>
	     "inference"	shift, and goto state <9>
	         "match"	shift, and goto state <10>
	      "matchall"	shift, and goto state <11>
	     "matchscan"	shift, and goto state <12>
	   POLY_DATATYPE	shift, and goto state <13>
	        CONS_EXP	shift, and goto state <14>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	             '#'	shift, and goto state <18>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	          "type"	shift, and goto state <23>
	            ".["	shift, and goto state <24>
	         "begin"	shift, and goto state <25>
	       ATTRIB_ID	shift, and goto state <26>
	       "classof"	shift, and goto state <27>
	               ?	shift, and goto state <28>
	      "datatype"	shift, and goto state <29>
	        "refine"	shift, and goto state <30>
	   "instantiate"	shift, and goto state <31>
	"attributegrammar"	shift, and goto state <32>
	    "cutrewrite"	shift, and goto state <33>
	   "failrewrite"	shift, and goto state <34>
	           "fun"	shift, and goto state <35>
	      "function"	shift, and goto state <36>
	     "procedure"	shift, and goto state <37>
	        "module"	shift, and goto state <38>
	     "signature"	shift, and goto state <39>
	       "declare"	shift, and goto state <40>
	     "graphtype"	shift, and goto state <41>
	  "graphrewrite"	shift, and goto state <42>
	        rewrite_	goto state <43>
	         syntax_	goto state <44>
	         lexeme_	goto state <45>
	      inference_	goto state <46>
	match_or_matchall	goto state <47>
	   poly_datatype	goto state <48>
	         cons_id	goto state <49>
	           quark	goto state <50>
	          bigint	goto state <51>
	      meta_quote	goto state <52>
	        list_exp	goto state <53>
	        cons_exp	goto state <54>
	        meta_exp	goto state <55>
	      match_decl	goto state <56>
	            decl	goto state <57>
	        one_decl	goto state <58>
	        exp_decl	goto state <59>
	    typeexp_decl	goto state <60>
	   datatype_decl	goto state <61>
	       type_decl	goto state <62>
	     refine_decl	goto state <63>
	instantiate_decl	goto state <64>
	inference_class_decl	goto state <65>
	  inference_decl	goto state <66>
	syntax_class_decl	goto state <67>
	     syntax_decl	goto state <68>
	attribgram_class_decl	goto state <69>
	 attribgram_decl	goto state <70>
	     lexeme_decl	goto state <71>
	rewrite_class_decl	goto state <72>
	    rewrite_decl	goto state <73>
	  rewriting_decl	goto state <74>
	replacement_decl	goto state <75>
	        fun_decl	goto state <76>
	    compound_def	goto state <77>
	    function_def	goto state <78>
	      module_def	goto state <79>
	   signature_def	goto state <80>
	   compound_stmt	goto state <81>
	graph_class_decl	goto state <82>
	graph_rewrite_decl	goto state <83>

<5>	<start>	->	top $ . 

	       <default>	reduce using rule {778} (<start>) and accept

<6>	rewrite_	->	"rewrite" . 

	       <default>	reduce using rule {1} (rewrite_)

<7>	syntax_	->	"syntax" . 

	       <default>	reduce using rule {2} (syntax_)

<8>	lexeme_	->	"lexeme" . 

	       <default>	reduce using rule {4} (lexeme_)

<9>	inference_	->	"inference" . 

	       <default>	reduce using rule {5} (inference_)

<10>	match_or_matchall	->	"match" . 	{ "while" '(' '[' }
	match_or_matchall	->	"match" . '*' 

	             '*'	shift, and goto state <84>
	       <default>	reduce using rule {12} (match_or_matchall)

<11>	match_or_matchall	->	"matchall" . '*' 
	match_or_matchall	->	"matchall" . 	{ "while" '(' '[' }

	             '*'	shift, and goto state <85>
	       <default>	reduce using rule {14} (match_or_matchall)

<12>	match_or_matchall	->	"matchscan" . 	{ "while" '(' '[' }
	match_or_matchall	->	"matchscan" . '*' 

	             '*'	shift, and goto state <86>
	       <default>	reduce using rule {16} (match_or_matchall)

<13>	poly_datatype	->	POLY_DATATYPE . 

	       <default>	reduce using rule {26} (poly_datatype)

<14>	cons_id	->	CONS_EXP . 

	       <default>	reduce using rule {32} (cons_id)

<15>	quark	->	QUARK_TOK . 

	       <default>	reduce using rule {35} (quark)

<16>	bigint	->	BIGINT_TOK . 

	       <default>	reduce using rule {36} (bigint)

<17>	meta_quote	->	META_QUOTE . 

	       <default>	reduce using rule {37} (meta_quote)

<18>	list_exp	->	'#' . '(' exp_list "..." exp ')' 
	list_exp	->	'#' . '{' exp_list "..." exp '}' 
	list_exp	->	'#' . '[' exp_list ']' 
	list_exp	->	'#' . '(' exp_list ')' 
	list_exp	->	'#' . '{' exp_list '}' 
	list_exp	->	'#' . '[' exp_list "..." exp ']' 

	             '['	shift, and goto state <87>
	             '('	shift, and goto state <88>
	             '{'	shift, and goto state <89>

<19>	exp_list	->	. 	{ "|]" }
	list_exp	->	"[|" . exp_list "|]" 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <122>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        exp_list	goto state <130>
	       exp_list2	goto state <131>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	            "|]"	reduce using rule {262} (exp_list)
	             '{'	reduce using rule {244} (tick)

<20>	exp_list	->	. 	{ "|)" }
	list_exp	->	"(|" . exp_list "|)" 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <122>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        exp_list	goto state <134>
	       exp_list2	goto state <131>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	            "|)"	reduce using rule {262} (exp_list)
	             '{'	reduce using rule {244} (tick)

<21>	exp_list	->	. 	{ "|}" }
	list_exp	->	"{|" . exp_list "|}" 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <122>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        exp_list	goto state <135>
	       exp_list2	goto state <131>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	            "|}"	reduce using rule {262} (exp_list)
	             '{'	reduce using rule {244} (tick)

<22>	list_exp	->	".(" . exp_list2 ')' 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <136>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	       exp_list2	goto state <137>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<23>	sharing_opt	->	. 	{ ID_TOK }
	type_decl	->	"type" . type_defs ';' 

	       "sharing"	shift, and goto state <138>
	       type_defs	goto state <139>
	        type_def	goto state <140>
	     sharing_opt	goto state <141>
	       <default>	reduce using rule {429} (sharing_opt)

<24>	typeexp_decl	->	".[" . ty_list2 ']' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <161>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	        ty_list2	goto state <167>
	         setl_ty	goto state <168>

<25>	compound_stmt	->	"begin" . stmt_list "end" ';' 
	tick	->	. 	{ '{' }

	       "rewrite"	shift, and goto state <6>
	         "match"	shift, and goto state <10>
	             '*'	shift, and goto state <90>
	      "matchall"	shift, and goto state <11>
	     "matchscan"	shift, and goto state <12>
	            "if"	shift, and goto state <169>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "while"	shift, and goto state <170>
	        "return"	shift, and goto state <171>
	         "begin"	shift, and goto state <25>
	    "cutrewrite"	shift, and goto state <33>
	   "failrewrite"	shift, and goto state <34>
	        "forall"	shift, and goto state <172>
	       "declare"	shift, and goto state <40>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	        rewrite_	goto state <173>
	match_or_matchall	goto state <47>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <174>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	      match_decl	goto state <175>
	  rewriting_decl	goto state <176>
	replacement_decl	goto state <177>
	            stmt	goto state <178>
	       stmt_list	goto state <179>
	   compound_stmt	goto state <180>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<26>	decl	->	ATTRIB_ID . 

	       <default>	reduce using rule {320} (decl)

<27>	decl	->	"classof" . id_or_cons 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <183>

<28>	one_decl	->	? . ';' 

	             ';'	shift, and goto state <184>

<29>	datatype_decl	->	"datatype" . datatype_defs0 view_defs_opt law_defs_opt ty_defs_opt ';' 
	datatype_defs0	->	. 	{ "law" ';' "type" "where" }

	          ID_TOK	shift, and goto state <93>
	              id	goto state <185>
	  datatype_defs0	goto state <186>
	   datatype_defs	goto state <187>
	    datatype_def	goto state <188>
	       <default>	reduce using rule {356} (datatype_defs0)

<30>	refine_decl	->	"refine" . refine_defs ';' 

	    "persistent"	shift, and goto state <189>
	     "printable"	shift, and goto state <190>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	             '#'	shift, and goto state <191>
	            "[|"	shift, and goto state <192>
	            "(|"	shift, and goto state <193>
	            "{|"	shift, and goto state <194>
	         "class"	shift, and goto state <195>
	     persistent_	goto state <196>
	      printable_	goto state <197>
	              id	goto state <198>
	            cons	goto state <199>
	    complex_cons	goto state <200>
	     refine_defs	goto state <201>
	      refine_def	goto state <202>
	       refine_ty	goto state <203>
	  refine_ty_list	goto state <204>
	     refine_cons	goto state <205>
	refine_cons_list	goto state <206>

<31>	instantiate_decl	->	"instantiate" . extern_opt "datatype" ty_list ';' 
	extern_opt	->	. 	{ "datatype" }

	        "extern"	shift, and goto state <207>
	      extern_opt	goto state <208>
	       <default>	reduce using rule {505} (extern_opt)

<32>	attribgram_decl	->	"attributegrammar" . id <472> '{' prec_rules expect_ <473> bnf_rules '}' ';' 
	attribgram_class_decl	->	"attributegrammar" . "class" id inherit_list_opt qualifiers_opt brace_body ';' 

	          ID_TOK	shift, and goto state <93>
	         "class"	shift, and goto state <209>
	              id	goto state <210>

<33>	replacement_decl	->	"cutrewrite" . paren_exp 
	replacement_decl	->	"cutrewrite" . 	{ "postorder:" "preorder:" "before:" "bottomup:" "topdown:" ';' "end" '}' '|' }

	             '('	shift, and goto state <211>
	       paren_exp	goto state <212>
	       <default>	reduce using rule {588} (replacement_decl)

<34>	replacement_decl	->	"failrewrite" . 

	       <default>	reduce using rule {589} (replacement_decl)

<35>	<479>	->	. 	{ ID_TOK }
	fun_decl	->	"fun" . fun_rules_list ';' 

	  fun_rules_list	goto state <213>
	  this_fun_rules	goto state <214>
	           <479>	goto state <215>
	       <default>	reduce using rule {775} (<479>)

<36>	function_def	->	"function" . cons_or_string '(' fun_args ')' "return" ty "is" defs "begin" stmt_list "end" ';' 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <216>
	  cons_or_string	goto state <217>
	          string	goto state <218>

<37>	function_def	->	"procedure" . cons_or_string '(' fun_args ')' "is" defs "begin" stmt_list "end" ';' 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <216>
	  cons_or_string	goto state <219>
	          string	goto state <218>

<38>	module_def	->	"module" . cons_or_string module_args module_sig "is" "begin" defs "end" ';' 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <216>
	  cons_or_string	goto state <220>
	          string	goto state <218>

<39>	signature_def	->	"signature" . cons_or_string module_args "is" sig ';' 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <216>
	  cons_or_string	goto state <221>
	          string	goto state <218>

<40>	compound_stmt	->	"declare" . defs "begin" stmt_list "end" ';' 
	defs	->	. 	{ "begin" }

	          ID_TOK	shift, and goto state <93>
	          "type"	shift, and goto state <23>
	      "datatype"	shift, and goto state <29>
	      "function"	shift, and goto state <36>
	     "procedure"	shift, and goto state <37>
	        "module"	shift, and goto state <38>
	     "signature"	shift, and goto state <39>
	              id	goto state <222>
	   datatype_decl	goto state <223>
	       type_decl	goto state <224>
	             def	goto state <225>
	    compound_def	goto state <226>
	    function_def	goto state <78>
	      module_def	goto state <79>
	   signature_def	goto state <80>
	            defs	goto state <227>
	       <default>	reduce using rule {639} (defs)

<41>	graph_class_decl	->	"graphtype" . id inherit_list_opt qualifiers_opt '(' <480> node_spec <481> edge_spec ')' brace_body ';' 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <228>

<42>	graph_rewrite_decl	->	"graphrewrite" . id '(' fun_args ')' '=' "begin" grs_sections "end" "graphrewrite" ';' 
	graph_rewrite_decl	->	"graphrewrite" . id '(' fun_args ')' '{' grs_sections '}' 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <229>

<43>	replacement_decl	->	rewrite_ . paren_exp 
	rewriting_decl	->	rewrite_ . paren_exp opt_dest "type" '(' protocols ')' qualifiers_opt <478> "of" rewrite_indexings case_or_bar_rules "end" "rewrite" ';' 
	rewrite_decl	->	rewrite_ . id <476> '{' rewrite_indexings case_or_bar_rules '}' ';' 
	rewriting_decl	->	rewrite_ . paren_exp opt_dest "type" '(' protocols ')' qualifiers_opt <477> '{' rewrite_indexings case_or_bar_rules '}' 
	rewrite_class_decl	->	rewrite_ . "class" id '(' protocols ')' inherit_list_opt qualifiers_opt brace_body ';' 

	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <211>
	         "class"	shift, and goto state <230>
	              id	goto state <231>
	       paren_exp	goto state <232>

<44>	syntax_class_decl	->	syntax_ . "class" id inherit_list_opt qualifiers_opt brace_body ';' 
	syntax_decl	->	syntax_ . id <470> '{' prec_rules expect_ <471> bnf_rules '}' ';' 

	          ID_TOK	shift, and goto state <93>
	         "class"	shift, and goto state <233>
	              id	goto state <234>

<45>	lexeme_decl	->	lexeme_ . lexeme_rules ';' 
	lexeme_decl	->	lexeme_ . "class" lexeme_class_rules ';' 

	          ID_TOK	shift, and goto state <93>
	         "class"	shift, and goto state <235>
	              id	goto state <236>
	    lexeme_rules	goto state <237>
	     lexeme_rule	goto state <238>

<46>	inference_class_decl	->	inference_ . "class" id inherit_list_opt qualifiers_opt brace_body ';' 
	inference_decl	->	inference_ . id '{' inference_rules '}' ';' 

	          ID_TOK	shift, and goto state <93>
	         "class"	shift, and goto state <239>
	              id	goto state <240>

<47>	match_decl	->	match_or_matchall . match_ty match_options match_exps "of" <454> case_or_bar_rules "end" "match" ';' 
	match_ty	->	. 	{ "while" '(' }
	match_decl	->	match_or_matchall . match_ty match_options match_exps <453> '{' case_or_bar_rules '}' 

	             '['	shift, and goto state <241>
	        match_ty	goto state <242>
	       <default>	reduce using rule {276} (match_ty)

<48>	typeexp_decl	->	poly_datatype . '<' ty_list '>' 

	             '<'	shift, and goto state <243>

<49>	cons_exp	->	cons_id . tick '{' lab_exp_list '}' 
	cons_exp	->	cons_id . tick '(' exp_list ')' '{' lab_exp_list '}' 
	cons_exp	->	cons_id . tick '(' exp_list ')' '(' exp_list ')' 
	tick	->	. 	{ '{' '(' }

	            '\''	shift, and goto state <106>
	            tick	goto state <244>
	       <default>	reduce using rule {244} (tick)

<50>	exp_decl	->	quark . 

	       <default>	reduce using rule {350} (exp_decl)

<51>	exp_decl	->	bigint . 

	       <default>	reduce using rule {351} (exp_decl)

<52>	meta_exp	->	meta_quote . 

	       <default>	reduce using rule {259} (meta_exp)

<53>	exp_decl	->	list_exp . 

	       <default>	reduce using rule {349} (exp_decl)

<54>	exp_decl	->	cons_exp . 

	       <default>	reduce using rule {348} (exp_decl)

<55>	exp_decl	->	meta_exp . 

	       <default>	reduce using rule {352} (exp_decl)

<56>	one_decl	->	match_decl . 

	       <default>	reduce using rule {337} (one_decl)

<57>	<463>	->	. 	{ "graphrewrite" "graphtype" "declare" "signature" "module" "procedure" "function" "fun" "failrewrite" "cutrewrite" "attributegrammar" "instantiate" "refine" "datatype" ? "classof" ATTRIB_ID "begin" ".[" "type" ".(" "{|" "(|" "[|" '#' META_QUOTE BIGINT_TOK QUARK_TOK CONS_EXP POLY_DATATYPE "matchscan" "matchall" "match" "inference" "lexeme" "syntax" "rewrite" }
	decl_list	->	. 	{ $ "postorder:" "preorder:" "before:" "bottomup:" "topdown:" "end" '}' "case" }
	decl_list	->	<463> decl . decl_list 

	       decl_list	goto state <245>
	           <463>	goto state <4>
	       "rewrite"	reduce using rule {759} (<463>)
	        "syntax"	reduce using rule {759} (<463>)
	        "lexeme"	reduce using rule {759} (<463>)
	     "inference"	reduce using rule {759} (<463>)
	         "match"	reduce using rule {759} (<463>)
	      "matchall"	reduce using rule {759} (<463>)
	     "matchscan"	reduce using rule {759} (<463>)
	   POLY_DATATYPE	reduce using rule {759} (<463>)
	        CONS_EXP	reduce using rule {759} (<463>)
	       QUARK_TOK	reduce using rule {759} (<463>)
	      BIGINT_TOK	reduce using rule {759} (<463>)
	      META_QUOTE	reduce using rule {759} (<463>)
	             '#'	reduce using rule {759} (<463>)
	            "[|"	reduce using rule {759} (<463>)
	            "(|"	reduce using rule {759} (<463>)
	            "{|"	reduce using rule {759} (<463>)
	            ".("	reduce using rule {759} (<463>)
	          "type"	reduce using rule {759} (<463>)
	            ".["	reduce using rule {759} (<463>)
	         "begin"	reduce using rule {759} (<463>)
	       ATTRIB_ID	reduce using rule {759} (<463>)
	       "classof"	reduce using rule {759} (<463>)
	               ?	reduce using rule {759} (<463>)
	      "datatype"	reduce using rule {759} (<463>)
	        "refine"	reduce using rule {759} (<463>)
	   "instantiate"	reduce using rule {759} (<463>)
	"attributegrammar"	reduce using rule {759} (<463>)
	    "cutrewrite"	reduce using rule {759} (<463>)
	   "failrewrite"	reduce using rule {759} (<463>)
	           "fun"	reduce using rule {759} (<463>)
	      "function"	reduce using rule {759} (<463>)
	     "procedure"	reduce using rule {759} (<463>)
	        "module"	reduce using rule {759} (<463>)
	     "signature"	reduce using rule {759} (<463>)
	       "declare"	reduce using rule {759} (<463>)
	     "graphtype"	reduce using rule {759} (<463>)
	  "graphrewrite"	reduce using rule {759} (<463>)
	          "case"	reduce using rule {346} (decl_list)
	             '}'	reduce using rule {346} (decl_list)
	           "end"	reduce using rule {346} (decl_list)
	      "topdown:"	reduce using rule {346} (decl_list)
	     "bottomup:"	reduce using rule {346} (decl_list)
	       "before:"	reduce using rule {346} (decl_list)
	     "preorder:"	reduce using rule {346} (decl_list)
	    "postorder:"	reduce using rule {346} (decl_list)
	               $	reduce using rule {346} (decl_list)

<58>	decl	->	one_decl . 

	       <default>	reduce using rule {319} (decl)

<59>	one_decl	->	exp_decl . 

	       <default>	reduce using rule {338} (one_decl)

<60>	decl	->	typeexp_decl . 

	       <default>	reduce using rule {322} (decl)

<61>	one_decl	->	datatype_decl . 

	       <default>	reduce using rule {323} (one_decl)

<62>	one_decl	->	type_decl . 

	       <default>	reduce using rule {324} (one_decl)

<63>	one_decl	->	refine_decl . 

	       <default>	reduce using rule {325} (one_decl)

<64>	one_decl	->	instantiate_decl . 

	       <default>	reduce using rule {326} (one_decl)

<65>	one_decl	->	inference_class_decl . 

	       <default>	reduce using rule {327} (one_decl)

<66>	one_decl	->	inference_decl . 

	       <default>	reduce using rule {328} (one_decl)

<67>	one_decl	->	syntax_class_decl . 

	       <default>	reduce using rule {332} (one_decl)

<68>	one_decl	->	syntax_decl . 

	       <default>	reduce using rule {333} (one_decl)

<69>	one_decl	->	attribgram_class_decl . 

	       <default>	reduce using rule {334} (one_decl)

<70>	one_decl	->	attribgram_decl . 

	       <default>	reduce using rule {335} (one_decl)

<71>	one_decl	->	lexeme_decl . 

	       <default>	reduce using rule {340} (one_decl)

<72>	one_decl	->	rewrite_class_decl . 

	       <default>	reduce using rule {329} (one_decl)

<73>	one_decl	->	rewrite_decl . 

	       <default>	reduce using rule {330} (one_decl)

<74>	one_decl	->	rewriting_decl . 

	       <default>	reduce using rule {331} (one_decl)

<75>	one_decl	->	replacement_decl . ';' 

	             ';'	shift, and goto state <246>

<76>	one_decl	->	fun_decl . 

	       <default>	reduce using rule {336} (one_decl)

<77>	one_decl	->	compound_def . 

	       <default>	reduce using rule {342} (one_decl)

<78>	compound_def	->	function_def . 

	       <default>	reduce using rule {614} (compound_def)

<79>	compound_def	->	module_def . 

	       <default>	reduce using rule {615} (compound_def)

<80>	compound_def	->	signature_def . 

	       <default>	reduce using rule {616} (compound_def)

<81>	one_decl	->	compound_stmt . 

	       <default>	reduce using rule {341} (one_decl)

<82>	one_decl	->	graph_class_decl . 

	       <default>	reduce using rule {343} (one_decl)

<83>	one_decl	->	graph_rewrite_decl . 

	       <default>	reduce using rule {344} (one_decl)

<84>	match_or_matchall	->	"match" '*' . 

	       <default>	reduce using rule {13} (match_or_matchall)

<85>	match_or_matchall	->	"matchall" '*' . 

	       <default>	reduce using rule {15} (match_or_matchall)

<86>	match_or_matchall	->	"matchscan" '*' . 

	       <default>	reduce using rule {17} (match_or_matchall)

<87>	exp_list	->	. 	{ "..." ']' }
	tick	->	. 	{ '{' }
	list_exp	->	'#' '[' . exp_list ']' 
	list_exp	->	'#' '[' . exp_list "..." exp ']' 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <122>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        exp_list	goto state <247>
	       exp_list2	goto state <131>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	             ']'	reduce using rule {262} (exp_list)
	           "..."	reduce using rule {262} (exp_list)
	             '{'	reduce using rule {244} (tick)

<88>	exp_list	->	. 	{ "..." ')' }
	list_exp	->	'#' '(' . exp_list "..." exp ')' 
	tick	->	. 	{ '{' }
	list_exp	->	'#' '(' . exp_list ')' 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <122>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        exp_list	goto state <248>
	       exp_list2	goto state <131>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	             ')'	reduce using rule {262} (exp_list)
	           "..."	reduce using rule {262} (exp_list)
	             '{'	reduce using rule {244} (tick)

<89>	exp_list	->	. 	{ "..." '}' }
	list_exp	->	'#' '{' . exp_list "..." exp '}' 
	tick	->	. 	{ '{' }
	list_exp	->	'#' '{' . exp_list '}' 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <122>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        exp_list	goto state <249>
	       exp_list2	goto state <131>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	             '}'	reduce using rule {262} (exp_list)
	           "..."	reduce using rule {262} (exp_list)
	             '{'	reduce using rule {244} (tick)

<90>	tick	->	. 	{ '{' }
	exp	->	'*' . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <250>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<91>	tick	->	. 	{ '{' }
	exp	->	'~' . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <251>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<92>	tick	->	. 	{ '{' }
	exp	->	'!' . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <252>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<93>	id	->	ID_TOK . 

	       <default>	reduce using rule {25} (id)

<94>	cons	->	CONS_TOK . 

	       <default>	reduce using rule {27} (cons)

<95>	string	->	STRING_TOK . 

	       <default>	reduce using rule {33} (string)

<96>	integer	->	INT_TOK . 

	       <default>	reduce using rule {38} (integer)

<97>	real	->	REAL_TOK . 

	       <default>	reduce using rule {39} (real)

<98>	character	->	CHAR_TOK . 

	       <default>	reduce using rule {40} (character)

<99>	boolean	->	"false" . 

	       <default>	reduce using rule {41} (boolean)

<100>	boolean	->	"true" . 

	       <default>	reduce using rule {42} (boolean)

<101>	tick	->	. 	{ '{' }
	simple_exp	->	'(' . exp_list2 ')' 
	simple_exp	->	'(' . ')' 
	simple_exp	->	'(' . exp ')' 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	             ')'	shift, and goto state <253>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <254>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	       exp_list2	goto state <255>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<102>	tick	->	. 	{ '{' }
	exp	->	'&' . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <256>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<103>	tick	->	. 	{ '{' }
	exp	->	'-' . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <257>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<104>	tick	->	. 	{ '{' }
	exp	->	"++" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <258>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<105>	tick	->	. 	{ '{' }
	exp	->	"--" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <259>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<106>	tick	->	. 	{ '{' '(' }
	tick	->	'\'' . tick 

	            '\''	shift, and goto state <106>
	            tick	goto state <260>
	       <default>	reduce using rule {244} (tick)

<107>	set_comprehension	->	"setof" . '{' exp ':' generator_list guard_exp3 '}' 

	             '{'	shift, and goto state <261>

<108>	setl_exp	->	"arb" . exp 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <262>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<109>	setl_exp	->	"dom" . exp 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <263>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<110>	setl_exp	->	"ran" . exp 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <264>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<111>	simple_exp	->	id . "::" id 
	primitive_exp	->	id . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "postorder:" "preorder:" "before:" "bottomup:" "topdown:" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' "end" '\'' '.' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" "->" '=' ".(" ',' ">>" "<<" ':' "||" "&&" "|}" "{|" "|)" "(|" "|]" "[|" "..." '}' '{' ')' '(' ']' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK STRING_TOK CONS_EXP CONS_TOK ID_TOK '!' "=>" LONG_BAR '|' "where" "if" '*' }

	            "::"	shift, and goto state <265>
	       <default>	reduce using rule {227} (primitive_exp)

<112>	primitive_exp	->	cons . 

	       <default>	reduce using rule {229} (primitive_exp)

<113>	literal	->	string . 

	       <default>	reduce using rule {60} (literal)

<114>	non_string_literal	->	quark . 

	       <default>	reduce using rule {57} (non_string_literal)

<115>	non_string_literal	->	bigint . 

	       <default>	reduce using rule {58} (non_string_literal)

<116>	non_string_literal	->	integer . 

	       <default>	reduce using rule {53} (non_string_literal)

<117>	non_string_literal	->	real . 

	       <default>	reduce using rule {56} (non_string_literal)

<118>	non_string_literal	->	character . 

	       <default>	reduce using rule {55} (non_string_literal)

<119>	non_string_literal	->	boolean . 

	       <default>	reduce using rule {54} (non_string_literal)

<120>	literal	->	non_string_literal . 

	       <default>	reduce using rule {59} (literal)

<121>	primitive_exp	->	literal . 

	       <default>	reduce using rule {228} (primitive_exp)

<122>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp_list	->	exp . 	{ "|}" "|)" "|]" "..." '}' ')' ']' }
	exp_list2	->	exp . ',' exp 
	exp_list2	->	exp . ',' exp_list2 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             ','	shift, and goto state <272>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {263} (exp_list)

<123>	tick	->	. 	{ '{' }
	app_exp	->	app_exp . simple_exp 
	exp	->	app_exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	            '\''	shift, and goto state <106>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <302>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	             '{'	reduce using rule {244} (tick)
	             '*'	reduce using rule {181} (exp)
	            "if"	reduce using rule {181} (exp)
	         "where"	reduce using rule {181} (exp)
	             '|'	reduce using rule {181} (exp)
	        LONG_BAR	reduce using rule {181} (exp)
	            "=>"	reduce using rule {181} (exp)
	             '!'	reduce using rule {181} (exp)
	             '['	reduce using rule {181} (exp)
	             ']'	reduce using rule {181} (exp)
	             ')'	reduce using rule {181} (exp)
	             '}'	reduce using rule {181} (exp)
	           "..."	reduce using rule {181} (exp)
	            "|]"	reduce using rule {181} (exp)
	            "|)"	reduce using rule {181} (exp)
	            "|}"	reduce using rule {181} (exp)
	            "&&"	reduce using rule {181} (exp)
	            "||"	reduce using rule {181} (exp)
	             ':'	reduce using rule {181} (exp)
	            "<<"	reduce using rule {181} (exp)
	            ">>"	reduce using rule {181} (exp)
	             ','	reduce using rule {181} (exp)
	             '='	reduce using rule {181} (exp)
	          "type"	reduce using rule {181} (exp)
	             '&'	reduce using rule {181} (exp)
	             '<'	reduce using rule {181} (exp)
	             '>'	reduce using rule {181} (exp)
	             '+'	reduce using rule {181} (exp)
	             '-'	reduce using rule {181} (exp)
	             '/'	reduce using rule {181} (exp)
	             '%'	reduce using rule {181} (exp)
	            ":="	reduce using rule {181} (exp)
	             '^'	reduce using rule {181} (exp)
	            "+="	reduce using rule {181} (exp)
	            "-="	reduce using rule {181} (exp)
	            "*="	reduce using rule {181} (exp)
	            "/="	reduce using rule {181} (exp)
	            "%="	reduce using rule {181} (exp)
	            "&="	reduce using rule {181} (exp)
	            "|="	reduce using rule {181} (exp)
	            "^="	reduce using rule {181} (exp)
	            ">="	reduce using rule {181} (exp)
	            "<="	reduce using rule {181} (exp)
	            "=="	reduce using rule {181} (exp)
	            "!="	reduce using rule {181} (exp)
	           "<<="	reduce using rule {181} (exp)
	           ">>="	reduce using rule {181} (exp)
	            "++"	reduce using rule {181} (exp)
	            "--"	reduce using rule {181} (exp)
	             '?'	reduce using rule {181} (exp)
	             ';'	reduce using rule {181} (exp)
	           "and"	reduce using rule {181} (exp)
	            '\\'	reduce using rule {181} (exp)
	        "public"	reduce using rule {181} (exp)
	     "protected"	reduce using rule {181} (exp)
	       "private"	reduce using rule {181} (exp)
	          "with"	reduce using rule {181} (exp)
	           "law"	reduce using rule {181} (exp)
	     "inherited"	reduce using rule {181} (exp)
	   "synthesized"	reduce using rule {181} (exp)
	            "is"	reduce using rule {181} (exp)
	          "loop"	reduce using rule {181} (exp)
	          "then"	reduce using rule {181} (exp)
	            "<-"	reduce using rule {181} (exp)
	          "less"	reduce using rule {181} (exp)
	         "hash:"	reduce using rule {181} (exp)
	     "equality:"	reduce using rule {181} (exp)
	        "edges:"	reduce using rule {181} (exp)

<124>	simple_exp	->	primitive_exp . 

	       <default>	reduce using rule {230} (simple_exp)

<125>	simple_exp	->	simple_exp . "->" '#' integer 
	simple_exp	->	simple_exp . '.' id 
	simple_exp	->	simple_exp . '.' '#' integer 
	simple_exp	->	simple_exp . '[' exp ']' 
	simple_exp	->	simple_exp . "->" id 
	app_exp	->	simple_exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '\'' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ".(" ',' ">>" "<<" ':' "||" "&&" "|}" "{|" "|)" "(|" "|]" "[|" "..." '}' '{' ')' '(' ']' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK STRING_TOK CONS_EXP CONS_TOK ID_TOK '!' "=>" LONG_BAR '|' "where" "if" '*' }

	shift/reduce conflict with item {712} app_exp -> simple_exp . and '[' defaulted to shift.
	             '['	shift, and goto state <303>
	            "->"	shift, and goto state <304>
	             '.'	shift, and goto state <305>
	       <default>	reduce using rule {223} (app_exp)

<126>	simple_exp	->	tick . '{' lab_exp_list '}' 

	             '{'	shift, and goto state <306>

<127>	simple_exp	->	list_exp . 

	       <default>	reduce using rule {235} (simple_exp)

<128>	simple_exp	->	cons_exp . 

	       <default>	reduce using rule {236} (simple_exp)

<129>	simple_exp	->	meta_exp . 

	       <default>	reduce using rule {237} (simple_exp)

<130>	list_exp	->	"[|" exp_list . "|]" 

	            "|]"	shift, and goto state <307>

<131>	exp_list	->	exp_list2 . 

	       <default>	reduce using rule {264} (exp_list)

<132>	exp	->	setl_exp . 

	       <default>	reduce using rule {222} (exp)

<133>	setl_exp	->	set_comprehension . 

	       <default>	reduce using rule {676} (setl_exp)

<134>	list_exp	->	"(|" exp_list . "|)" 

	            "|)"	shift, and goto state <308>

<135>	list_exp	->	"{|" exp_list . "|}" 

	            "|}"	shift, and goto state <309>

<136>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp_list2	->	exp . ',' exp 
	exp_list2	->	exp . ',' exp_list2 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             ','	shift, and goto state <272>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>

<137>	list_exp	->	".(" exp_list2 . ')' 

	             ')'	shift, and goto state <310>

<138>	sharing_opt	->	"sharing" . 

	       <default>	reduce using rule {430} (sharing_opt)

<139>	type_decl	->	"type" type_defs . ';' 

	             ';'	shift, and goto state <311>

<140>	type_defs	->	type_def . and_or_bar type_defs 
	type_defs	->	type_def . 	{ ';' }

	             '|'	shift, and goto state <312>
	           "and"	shift, and goto state <313>
	      and_or_bar	goto state <314>
	       <default>	reduce using rule {426} (type_defs)

<141>	type_def	->	sharing_opt . id tyvars '=' ty 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <315>

<142>	simple_ty1	->	"collectable" . ty 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <316>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<143>	simple_ty1	->	"finalizable" . ty 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <317>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<144>	simple_ty1	->	'(' . ty ')' 
	simple_ty1	->	'(' . ty_list2 ')' 
	simple_ty1	->	'(' . ')' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             ')'	shift, and goto state <318>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <319>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	        ty_list2	goto state <320>
	         setl_ty	goto state <168>

<145>	lab_ty_list	->	. 	{ '}' }
	labeled_ty	->	'{' . lab_ty_list '}' 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <321>
	          lab_ty	goto state <322>
	     lab_ty_list	goto state <323>
	    lab_ty_list2	goto state <324>
	       <default>	reduce using rule {176} (lab_ty_list)

<146>	simple_ty1	->	"class" . ty 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <325>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<147>	simple_ty1	->	"const" . ty 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <326>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<148>	simple_ty1	->	"unsigned" . ty 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <327>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<149>	simple_ty1	->	"signed" . ty 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <328>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<150>	simple_ty1	->	".[" . ty_list2 ']' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <161>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	        ty_list2	goto state <329>
	         setl_ty	goto state <168>

<151>	setl_ty	->	"listof" . '<' ty '>' 

	             '<'	shift, and goto state <330>

<152>	setl_ty	->	"tupleof" . '<' ty_list2 '>' 

	             '<'	shift, and goto state <331>

<153>	setl_ty	->	"setof" . '<' ty '>' 

	             '<'	shift, and goto state <332>

<154>	setl_ty	->	"bagof" . '<' ty '>' 

	             '<'	shift, and goto state <333>

<155>	setl_ty	->	"mapof" . '<' ty ',' ty '>' 

	             '<'	shift, and goto state <334>

<156>	setl_ty	->	"multimapof" . '<' ty ',' ty '>' 

	             '<'	shift, and goto state <335>

<157>	setl_ty	->	"queueof" . '<' ty '>' 

	             '<'	shift, and goto state <336>

<158>	setl_ty	->	"priqueueof" . '<' ty '>' 

	             '<'	shift, and goto state <337>

<159>	setl_ty	->	"dequeof" . '<' ty '>' 

	             '<'	shift, and goto state <338>

<160>	id_ty	->	id . 	{ "edges:" "equality:" "hash:" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" "and" ';' ":=" '>' "::" '&' "type" '=' ',' ':' "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" '|' "where" "if" '*' }
	id_ty	->	id . '<' ty_list '>' 

	             '<'	shift, and goto state <339>
	       <default>	reduce using rule {167} (id_ty)

<161>	ty_list2	->	ty . ',' ty 
	ty_list2	->	ty . ',' ty_list2 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             ','	shift, and goto state <342>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>

<162>	simple_ty	->	simple_ty1 . 

	       <default>	reduce using rule {160} (simple_ty)

<163>	ty	->	simple_ty . 

	       <default>	reduce using rule {137} (ty)

<164>	simple_ty	->	labeled_ty . 

	       <default>	reduce using rule {161} (simple_ty)

<165>	qualified_ty	->	qualified_ty . "::" id_ty 
	simple_ty1	->	qualified_ty . 	{ "edges:" "equality:" "hash:" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" "and" ';' ":=" '>' '&' "type" '=' ',' ':' "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" '|' "where" "if" '*' }

	            "::"	shift, and goto state <345>
	       <default>	reduce using rule {154} (simple_ty1)

<166>	qualified_ty	->	id_ty . 

	       <default>	reduce using rule {163} (qualified_ty)

<167>	typeexp_decl	->	".[" ty_list2 . ']' 

	             ']'	shift, and goto state <346>

<168>	simple_ty1	->	setl_ty . 

	       <default>	reduce using rule {159} (simple_ty1)

<169>	stmt	->	"if" . exp "then" stmt_list else_clause ';' 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <347>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<170>	stmt	->	"while" . exp "loop" stmt_list "end" "loop" ';' 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <348>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<171>	stmt	->	"return" . exp ';' 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <349>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<172>	stmt	->	"forall" . generator_list "loop" stmt_list "end" "loop" ';' 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <369>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	  generator_list	goto state <375>
	       generator	goto state <376>

<173>	replacement_decl	->	rewrite_ . paren_exp 
	rewriting_decl	->	rewrite_ . paren_exp opt_dest "type" '(' protocols ')' qualifiers_opt <478> "of" rewrite_indexings case_or_bar_rules "end" "rewrite" ';' 
	rewriting_decl	->	rewrite_ . paren_exp opt_dest "type" '(' protocols ')' qualifiers_opt <477> '{' rewrite_indexings case_or_bar_rules '}' 

	             '('	shift, and goto state <211>
	       paren_exp	goto state <232>

<174>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	stmt	->	exp . ":=" exp ';' 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <377>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>

<175>	stmt	->	match_decl . 

	       <default>	reduce using rule {646} (stmt)

<176>	stmt	->	rewriting_decl . 

	       <default>	reduce using rule {647} (stmt)

<177>	stmt	->	replacement_decl . ';' 

	             ';'	shift, and goto state <378>

<178>	stmt_list	->	stmt . 	{ "elsif" "else" "end" }
	stmt_list	->	stmt . stmt_list 
	tick	->	. 	{ '{' }

	       "rewrite"	shift, and goto state <6>
	         "match"	shift, and goto state <10>
	             '*'	shift, and goto state <90>
	      "matchall"	shift, and goto state <11>
	     "matchscan"	shift, and goto state <12>
	            "if"	shift, and goto state <169>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "while"	shift, and goto state <170>
	        "return"	shift, and goto state <171>
	         "begin"	shift, and goto state <25>
	    "cutrewrite"	shift, and goto state <33>
	   "failrewrite"	shift, and goto state <34>
	        "forall"	shift, and goto state <172>
	       "declare"	shift, and goto state <40>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	        rewrite_	goto state <173>
	match_or_matchall	goto state <47>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <174>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	      match_decl	goto state <175>
	  rewriting_decl	goto state <176>
	replacement_decl	goto state <177>
	            stmt	goto state <178>
	       stmt_list	goto state <379>
	   compound_stmt	goto state <180>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	           "end"	reduce using rule {653} (stmt_list)
	          "else"	reduce using rule {653} (stmt_list)
	         "elsif"	reduce using rule {653} (stmt_list)
	             '{'	reduce using rule {244} (tick)

<179>	compound_stmt	->	"begin" stmt_list . "end" ';' 

	           "end"	shift, and goto state <380>

<180>	stmt	->	compound_stmt . 

	       <default>	reduce using rule {649} (stmt)

<181>	id_or_cons	->	id . 

	       <default>	reduce using rule {28} (id_or_cons)

<182>	id_or_cons	->	cons . 

	       <default>	reduce using rule {29} (id_or_cons)

<183>	decl	->	"classof" id_or_cons . 

	       <default>	reduce using rule {321} (decl)

<184>	one_decl	->	? ';' . 

	       <default>	reduce using rule {345} (one_decl)

<185>	tyvars	->	. 	{ "law" "and" ';' "::" "type" '=' ':' '!' "where" }
	datatype_def	->	id . tyvars inherit_list_opt qualifiers_opt '=' <464> switch_exp terms <465> datatype_body 
	datatype_def	->	id . tyvars inherit_list_opt qualifiers_opt 

	             '<'	shift, and goto state <381>
	          tyvars	goto state <382>
	       <default>	reduce using rule {366} (tyvars)

<186>	view_defs_opt	->	. 	{ "law" ';' "where" }
	datatype_decl	->	"datatype" datatype_defs0 . view_defs_opt law_defs_opt ty_defs_opt ';' 

	          "type"	shift, and goto state <383>
	   view_defs_opt	goto state <384>
	       <default>	reduce using rule {431} (view_defs_opt)

<187>	datatype_defs0	->	datatype_defs . 

	       <default>	reduce using rule {357} (datatype_defs0)

<188>	datatype_defs	->	datatype_def . 	{ "law" ';' "type" "where" }
	datatype_defs	->	datatype_def . "and" datatype_defs 

	           "and"	shift, and goto state <385>
	       <default>	reduce using rule {358} (datatype_defs)

<189>	persistent_	->	"persistent" . 

	       <default>	reduce using rule {6} (persistent_)

<190>	printable_	->	"printable" . 

	       <default>	reduce using rule {10} (printable_)

<191>	complex_cons	->	'#' . '(' ')' 
	complex_cons	->	'#' . '{' '}' 
	complex_cons	->	'#' . '[' "..." ']' 
	complex_cons	->	'#' . '(' "..." ')' 
	complex_cons	->	'#' . '{' "..." '}' 
	complex_cons	->	'#' . '[' ']' 

	             '['	shift, and goto state <386>
	             '('	shift, and goto state <387>
	             '{'	shift, and goto state <388>

<192>	complex_cons	->	"[|" . "..." "|]" 

	           "..."	shift, and goto state <389>

<193>	complex_cons	->	"(|" . "..." "|)" 

	           "..."	shift, and goto state <390>

<194>	complex_cons	->	"{|" . "..." "|}" 

	           "..."	shift, and goto state <391>

<195>	refine_def	->	"class" . id_or_cons "::" id_or_cons '(' ')' brace_body 
	refine_def	->	"class" . id_or_cons "::" '~' id_or_cons '(' ')' brace_body 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <392>

<196>	refine_def	->	persistent_ . persistent_decls 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <393>
	persistent_decls	goto state <394>
	 persistent_decl	goto state <395>

<197>	refine_def	->	printable_ . printing_decls 

	        CONS_TOK	shift, and goto state <94>
	             '#'	shift, and goto state <191>
	            "[|"	shift, and goto state <192>
	            "(|"	shift, and goto state <193>
	            "{|"	shift, and goto state <194>
	            cons	goto state <199>
	    complex_cons	goto state <396>
	  printing_decls	goto state <397>
	   printing_decl	goto state <398>

<198>	refine_ty	->	id . tyvars 
	tyvars	->	. 	{ "and" ';' "::" ',' ':' '{' '!' }

	             '<'	shift, and goto state <381>
	          tyvars	goto state <399>
	       <default>	reduce using rule {366} (tyvars)

<199>	complex_cons	->	cons . 

	       <default>	reduce using rule {43} (complex_cons)

<200>	refine_cons	->	complex_cons . ty_args 
	ty_args	->	. 	{ "and" ';' ',' ':' '{' }

	             '<'	shift, and goto state <400>
	         ty_args	goto state <401>
	       <default>	reduce using rule {170} (ty_args)

<201>	refine_decl	->	"refine" refine_defs . ';' 

	             ';'	shift, and goto state <402>

<202>	refine_defs	->	refine_def . 	{ ';' }
	refine_defs	->	refine_def . "and" refine_defs 

	           "and"	shift, and goto state <403>
	       <default>	reduce using rule {456} (refine_defs)

<203>	refine_ty_list	->	refine_ty . ',' refine_ty_list 
	refine_ty_list	->	refine_ty . 	{ "and" ';' "::" ':' '{' '!' }

	             ','	shift, and goto state <404>
	       <default>	reduce using rule {465} (refine_ty_list)

<204>	inherit_list_opt	->	. 	{ "and" ';' "::" '{' '!' }
	refine_def	->	refine_ty_list . inherit_list_opt qualifiers_opt brace_body_opt 

	             ':'	shift, and goto state <405>
	inherit_list_opt	goto state <406>
	       <default>	reduce using rule {477} (inherit_list_opt)

<205>	refine_cons_list	->	refine_cons . 	{ "and" ';' ':' '{' }
	refine_cons_list	->	refine_cons . ',' refine_cons_list 

	             ','	shift, and goto state <407>
	       <default>	reduce using rule {468} (refine_cons_list)

<206>	inherit_list_opt	->	. 	{ "and" ';' '{' }
	refine_def	->	refine_cons_list . inherit_list_opt brace_body_opt 

	             ':'	shift, and goto state <405>
	inherit_list_opt	goto state <408>
	       <default>	reduce using rule {477} (inherit_list_opt)

<207>	extern_opt	->	"extern" . 

	       <default>	reduce using rule {506} (extern_opt)

<208>	instantiate_decl	->	"instantiate" extern_opt . "datatype" ty_list ';' 

	      "datatype"	shift, and goto state <409>

<209>	attribgram_class_decl	->	"attributegrammar" "class" . id inherit_list_opt qualifiers_opt brace_body ';' 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <410>

<210>	<472>	->	. 	{ '{' }
	attribgram_decl	->	"attributegrammar" id . <472> '{' prec_rules expect_ <473> bnf_rules '}' ';' 

	           <472>	goto state <411>
	       <default>	reduce using rule {768} (<472>)

<211>	paren_exp	->	'(' . exp ')' 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <412>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<212>	replacement_decl	->	"cutrewrite" paren_exp . 

	       <default>	reduce using rule {587} (replacement_decl)

<213>	fun_decl	->	"fun" fun_rules_list . ';' 

	             ';'	shift, and goto state <413>

<214>	fun_rules_list	->	this_fun_rules . 	{ ';' }
	fun_rules_list	->	this_fun_rules . "and" fun_rules_list 

	           "and"	shift, and goto state <414>
	       <default>	reduce using rule {597} (fun_rules_list)

<215>	this_fun_rules	->	<479> . fun_rules 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <415>
	         qual_id	goto state <416>
	           id_ty	goto state <417>
	       fun_rules	goto state <418>
	   fun_rule_head	goto state <419>
	        fun_rule	goto state <420>

<216>	cons_or_string	->	id_or_cons . 

	       <default>	reduce using rule {30} (cons_or_string)

<217>	function_def	->	"function" cons_or_string . '(' fun_args ')' "return" ty "is" defs "begin" stmt_list "end" ';' 

	             '('	shift, and goto state <421>

<218>	cons_or_string	->	string . 

	       <default>	reduce using rule {31} (cons_or_string)

<219>	function_def	->	"procedure" cons_or_string . '(' fun_args ')' "is" defs "begin" stmt_list "end" ';' 

	             '('	shift, and goto state <422>

<220>	module_args	->	. 	{ "is" ':' }
	module_def	->	"module" cons_or_string . module_args module_sig "is" "begin" defs "end" ';' 

	             '('	shift, and goto state <423>
	     module_args	goto state <424>
	       <default>	reduce using rule {625} (module_args)

<221>	module_args	->	. 	{ "is" }
	signature_def	->	"signature" cons_or_string . module_args "is" sig ';' 

	             '('	shift, and goto state <423>
	     module_args	goto state <425>
	       <default>	reduce using rule {625} (module_args)

<222>	def	->	id . ':' ty ":=" exp ';' 
	def	->	id . ':' ty ';' 

	             ':'	shift, and goto state <426>

<223>	def	->	datatype_decl . 

	       <default>	reduce using rule {611} (def)

<224>	def	->	type_decl . 

	       <default>	reduce using rule {612} (def)

<225>	defs	->	. 	{ "begin" "end" }
	defs	->	def . defs 

	          ID_TOK	shift, and goto state <93>
	          "type"	shift, and goto state <23>
	      "datatype"	shift, and goto state <29>
	      "function"	shift, and goto state <36>
	     "procedure"	shift, and goto state <37>
	        "module"	shift, and goto state <38>
	     "signature"	shift, and goto state <39>
	              id	goto state <222>
	   datatype_decl	goto state <223>
	       type_decl	goto state <224>
	             def	goto state <225>
	    compound_def	goto state <226>
	    function_def	goto state <78>
	      module_def	goto state <79>
	   signature_def	goto state <80>
	            defs	goto state <427>
	       <default>	reduce using rule {639} (defs)

<226>	def	->	compound_def . 

	       <default>	reduce using rule {613} (def)

<227>	compound_stmt	->	"declare" defs . "begin" stmt_list "end" ';' 

	         "begin"	shift, and goto state <428>

<228>	graph_class_decl	->	"graphtype" id . inherit_list_opt qualifiers_opt '(' <480> node_spec <481> edge_spec ')' brace_body ';' 
	inherit_list_opt	->	. 	{ "::" '(' '!' }

	             ':'	shift, and goto state <405>
	inherit_list_opt	goto state <429>
	       <default>	reduce using rule {477} (inherit_list_opt)

<229>	graph_rewrite_decl	->	"graphrewrite" id . '(' fun_args ')' '=' "begin" grs_sections "end" "graphrewrite" ';' 
	graph_rewrite_decl	->	"graphrewrite" id . '(' fun_args ')' '{' grs_sections '}' 

	             '('	shift, and goto state <430>

<230>	rewrite_class_decl	->	rewrite_ "class" . id '(' protocols ')' inherit_list_opt qualifiers_opt brace_body ';' 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <431>

<231>	<476>	->	. 	{ '{' }
	rewrite_decl	->	rewrite_ id . <476> '{' rewrite_indexings case_or_bar_rules '}' ';' 

	           <476>	goto state <432>
	       <default>	reduce using rule {772} (<476>)

<232>	opt_dest	->	. 	{ "type" }
	replacement_decl	->	rewrite_ paren_exp . 	{ ';' }
	rewriting_decl	->	rewrite_ paren_exp . opt_dest "type" '(' protocols ')' qualifiers_opt <478> "of" rewrite_indexings case_or_bar_rules "end" "rewrite" ';' 
	rewriting_decl	->	rewrite_ paren_exp . opt_dest "type" '(' protocols ')' qualifiers_opt <477> '{' rewrite_indexings case_or_bar_rules '}' 

	            "=>"	shift, and goto state <433>
	        opt_dest	goto state <434>
	          "type"	reduce using rule {584} (opt_dest)
	             ';'	reduce using rule {586} (replacement_decl)

<233>	syntax_class_decl	->	syntax_ "class" . id inherit_list_opt qualifiers_opt brace_body ';' 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <435>

<234>	<470>	->	. 	{ '{' }
	syntax_decl	->	syntax_ id . <470> '{' prec_rules expect_ <471> bnf_rules '}' ';' 

	           <470>	goto state <436>
	       <default>	reduce using rule {766} (<470>)

<235>	lexeme_decl	->	lexeme_ "class" . lexeme_class_rules ';' 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <437>
	lexeme_class_rules	goto state <438>
	lexeme_class_rule	goto state <439>

<236>	lexeme_rule	->	id . '=' string_pat 

	             '='	shift, and goto state <440>

<237>	lexeme_decl	->	lexeme_ lexeme_rules . ';' 

	             ';'	shift, and goto state <441>

<238>	lexeme_rules	->	lexeme_rule . 	{ ';' }
	lexeme_rules	->	lexeme_rule . and_or_bar lexeme_rules 

	             '|'	shift, and goto state <312>
	           "and"	shift, and goto state <313>
	      and_or_bar	goto state <442>
	       <default>	reduce using rule {542} (lexeme_rules)

<239>	inference_class_decl	->	inference_ "class" . id inherit_list_opt qualifiers_opt brace_body ';' 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <443>

<240>	inference_decl	->	inference_ id . '{' inference_rules '}' ';' 

	             '{'	shift, and goto state <444>

<241>	match_ty	->	'[' . ty ']' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <445>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<242>	match_decl	->	match_or_matchall match_ty . match_options match_exps <453> '{' case_or_bar_rules '}' 
	match_decl	->	match_or_matchall match_ty . match_options match_exps "of" <454> case_or_bar_rules "end" "match" ';' 
	match_options	->	. 	{ '(' }

	         "while"	shift, and goto state <446>
	   match_options	goto state <447>
	       <default>	reduce using rule {274} (match_options)

<243>	typeexp_decl	->	poly_datatype '<' . ty_list '>' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <448>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         ty_list	goto state <449>
	        ty_list2	goto state <450>
	         setl_ty	goto state <168>

<244>	cons_exp	->	cons_id tick . '{' lab_exp_list '}' 
	cons_exp	->	cons_id tick . '(' exp_list ')' '{' lab_exp_list '}' 
	cons_exp	->	cons_id tick . '(' exp_list ')' '(' exp_list ')' 

	             '('	shift, and goto state <451>
	             '{'	shift, and goto state <452>

<245>	decl_list	->	<463> decl decl_list . 

	       <default>	reduce using rule {347} (decl_list)

<246>	one_decl	->	replacement_decl ';' . 

	       <default>	reduce using rule {339} (one_decl)

<247>	list_exp	->	'#' '[' exp_list . "..." exp ']' 
	list_exp	->	'#' '[' exp_list . ']' 

	             ']'	shift, and goto state <453>
	           "..."	shift, and goto state <454>

<248>	list_exp	->	'#' '(' exp_list . "..." exp ')' 
	list_exp	->	'#' '(' exp_list . ')' 

	             ')'	shift, and goto state <455>
	           "..."	shift, and goto state <456>

<249>	list_exp	->	'#' '{' exp_list . "..." exp '}' 
	list_exp	->	'#' '{' exp_list . '}' 

	             '}'	shift, and goto state <457>
	           "..."	shift, and goto state <458>

<250>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	'*' exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {702} exp -> '*' exp . and "less" resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and "with" resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and '?' resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and "--" resolved as shift.
	shift/reduce conflict with item {702} exp -> '*' exp . and "++" resolved as shift.
	shift/reduce conflict with item {702} exp -> '*' exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and "==" resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and "<=" resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and ">=" resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and '^' resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and '%' resolved as reduce(left).
	shift/reduce conflict with item {702} exp -> '*' exp . and '/' resolved as reduce(left).
	shift/reduce conflict with item {702} exp -> '*' exp . and '-' resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and '+' resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and '>' resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and '<' resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and '&' resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and '=' resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and ">>" resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and "<<" resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and "||" resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and '|' resolved as reduce.
	shift/reduce conflict with item {702} exp -> '*' exp . and '*' resolved as reduce(left).
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	       <default>	reduce using rule {220} (exp)

<251>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	'~' exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {699} exp -> '~' exp . and "less" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and "with" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and '?' resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and "--" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and "++" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and "==" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and "<=" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and ">=" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and '^' resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and '%' resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and '/' resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and '-' resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and '+' resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and '>' resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and '<' resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and '&' resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and '=' resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and ">>" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and "<<" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and "||" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and '|' resolved as reduce.
	shift/reduce conflict with item {699} exp -> '~' exp . and '*' resolved as reduce.
	       <default>	reduce using rule {219} (exp)

<252>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	'!' exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {687} exp -> '!' exp . and "less" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and "with" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and '?' resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and "--" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and "++" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and "==" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and "<=" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and ">=" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and '^' resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and '%' resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and '/' resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and '-' resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and '+' resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and '>' resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and '<' resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and '&' resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and '=' resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and ">>" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and "<<" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and "||" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and '|' resolved as reduce.
	shift/reduce conflict with item {687} exp -> '!' exp . and '*' resolved as reduce.
	       <default>	reduce using rule {215} (exp)

<253>	simple_exp	->	'(' ')' . 

	       <default>	reduce using rule {231} (simple_exp)

<254>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp_list2	->	exp . ',' exp 
	exp_list2	->	exp . ',' exp_list2 
	exp	->	exp . '?' exp ':' exp 
	simple_exp	->	'(' exp . ')' 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	             ')'	shift, and goto state <459>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             ','	shift, and goto state <272>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>

<255>	simple_exp	->	'(' exp_list2 . ')' 

	             ')'	shift, and goto state <460>

<256>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	'&' exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {696} exp -> '&' exp . and "less" resolved as shift.
	shift/reduce conflict with item {696} exp -> '&' exp . and "with" resolved as shift.
	shift/reduce conflict with item {696} exp -> '&' exp . and '?' resolved as reduce.
	shift/reduce conflict with item {696} exp -> '&' exp . and "--" resolved as shift.
	shift/reduce conflict with item {696} exp -> '&' exp . and "++" resolved as shift.
	shift/reduce conflict with item {696} exp -> '&' exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {696} exp -> '&' exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {696} exp -> '&' exp . and "!=" resolved as shift.
	shift/reduce conflict with item {696} exp -> '&' exp . and "==" resolved as shift.
	shift/reduce conflict with item {696} exp -> '&' exp . and "<=" resolved as shift.
	shift/reduce conflict with item {696} exp -> '&' exp . and ">=" resolved as shift.
	shift/reduce conflict with item {696} exp -> '&' exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {696} exp -> '&' exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {696} exp -> '&' exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {696} exp -> '&' exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {696} exp -> '&' exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {696} exp -> '&' exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {696} exp -> '&' exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {696} exp -> '&' exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {696} exp -> '&' exp . and '^' resolved as reduce.
	shift/reduce conflict with item {696} exp -> '&' exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {696} exp -> '&' exp . and '%' resolved as shift.
	shift/reduce conflict with item {696} exp -> '&' exp . and '/' resolved as shift.
	shift/reduce conflict with item {696} exp -> '&' exp . and '-' resolved as shift.
	shift/reduce conflict with item {696} exp -> '&' exp . and '+' resolved as shift.
	shift/reduce conflict with item {696} exp -> '&' exp . and '>' resolved as shift.
	shift/reduce conflict with item {696} exp -> '&' exp . and '<' resolved as shift.
	shift/reduce conflict with item {696} exp -> '&' exp . and '&' resolved as reduce(left).
	shift/reduce conflict with item {696} exp -> '&' exp . and '=' resolved as reduce.
	shift/reduce conflict with item {696} exp -> '&' exp . and ">>" resolved as shift.
	shift/reduce conflict with item {696} exp -> '&' exp . and "<<" resolved as shift.
	shift/reduce conflict with item {696} exp -> '&' exp . and "||" resolved as reduce.
	shift/reduce conflict with item {696} exp -> '&' exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {696} exp -> '&' exp . and '|' resolved as reduce.
	shift/reduce conflict with item {696} exp -> '&' exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {218} (exp)

<257>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	'-' exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {684} exp -> '-' exp . and "less" resolved as reduce(left).
	shift/reduce conflict with item {684} exp -> '-' exp . and "with" resolved as reduce(left).
	shift/reduce conflict with item {684} exp -> '-' exp . and '?' resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and "--" resolved as shift.
	shift/reduce conflict with item {684} exp -> '-' exp . and "++" resolved as shift.
	shift/reduce conflict with item {684} exp -> '-' exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and "==" resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and "<=" resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and ">=" resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and '^' resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and '%' resolved as shift.
	shift/reduce conflict with item {684} exp -> '-' exp . and '/' resolved as shift.
	shift/reduce conflict with item {684} exp -> '-' exp . and '-' resolved as reduce(left).
	shift/reduce conflict with item {684} exp -> '-' exp . and '+' resolved as reduce(left).
	shift/reduce conflict with item {684} exp -> '-' exp . and '>' resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and '<' resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and '&' resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and '=' resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and ">>" resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and "<<" resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and "||" resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and '|' resolved as reduce.
	shift/reduce conflict with item {684} exp -> '-' exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	       <default>	reduce using rule {214} (exp)

<258>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	"++" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {690} exp -> "++" exp . and "less" resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and "with" resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and "--" resolved as reduce(left).
	shift/reduce conflict with item {690} exp -> "++" exp . and "++" resolved as reduce(left).
	shift/reduce conflict with item {690} exp -> "++" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and "==" resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and "<=" resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and ">=" resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and '^' resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and '%' resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and '/' resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and '-' resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and '+' resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and '>' resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and '<' resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and '&' resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and '=' resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and ">>" resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and "<<" resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and '|' resolved as reduce.
	shift/reduce conflict with item {690} exp -> "++" exp . and '*' resolved as reduce.
	       <default>	reduce using rule {216} (exp)

<259>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	"--" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {693} exp -> "--" exp . and "less" resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and "with" resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and "--" resolved as reduce(left).
	shift/reduce conflict with item {693} exp -> "--" exp . and "++" resolved as reduce(left).
	shift/reduce conflict with item {693} exp -> "--" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and "==" resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and "<=" resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and ">=" resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and '^' resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and '%' resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and '/' resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and '-' resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and '+' resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and '>' resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and '<' resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and '&' resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and '=' resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and ">>" resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and "<<" resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and '|' resolved as reduce.
	shift/reduce conflict with item {693} exp -> "--" exp . and '*' resolved as reduce.
	       <default>	reduce using rule {217} (exp)

<260>	tick	->	'\'' tick . 

	       <default>	reduce using rule {245} (tick)

<261>	set_comprehension	->	"setof" '{' . exp ':' generator_list guard_exp3 '}' 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <461>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<262>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	setl_exp	->	"arb" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and "less" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and "with" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and "--" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and "++" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and "==" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and "<=" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and ">=" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and '^' resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and '%' resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and '/' resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and '-' resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and '+' resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and '>' resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and '<' resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and '&' resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and '=' resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and ">>" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and "<<" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and '|' resolved as reduce.
	shift/reduce conflict with item {2204} setl_exp -> "arb" exp . and '*' resolved as reduce.
	       <default>	reduce using rule {669} (setl_exp)

<263>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	setl_exp	->	"dom" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and "less" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and "with" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and "--" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and "++" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and "==" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and "<=" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and ">=" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and '^' resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and '%' resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and '/' resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and '-' resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and '+' resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and '>' resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and '<' resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and '&' resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and '=' resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and ">>" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and "<<" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and '|' resolved as reduce.
	shift/reduce conflict with item {2207} setl_exp -> "dom" exp . and '*' resolved as reduce.
	       <default>	reduce using rule {670} (setl_exp)

<264>	setl_exp	->	"ran" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and "less" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and "with" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and "--" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and "++" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and "==" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and "<=" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and ">=" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and '^' resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and '%' resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and '/' resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and '-' resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and '+' resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and '>' resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and '<' resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and '&' resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and '=' resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and ">>" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and "<<" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and '|' resolved as reduce.
	shift/reduce conflict with item {2210} setl_exp -> "ran" exp . and '*' resolved as reduce.
	       <default>	reduce using rule {671} (setl_exp)

<265>	simple_exp	->	id "::" . id 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <462>

<266>	tick	->	. 	{ '{' }
	exp	->	exp '*' . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <463>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<267>	tick	->	. 	{ '{' }
	exp	->	exp '|' . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <464>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<268>	tick	->	. 	{ '{' }
	exp	->	exp "&&" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <465>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<269>	tick	->	. 	{ '{' }
	exp	->	exp "||" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <466>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<270>	tick	->	. 	{ '{' }
	exp	->	exp "<<" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <467>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<271>	tick	->	. 	{ '{' }
	exp	->	exp ">>" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <468>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<272>	exp_list2	->	exp ',' . exp 
	exp_list2	->	exp ',' . exp_list2 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <469>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	       exp_list2	goto state <470>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<273>	tick	->	. 	{ '{' }
	exp	->	exp '=' . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <471>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<274>	tick	->	. 	{ '{' }
	exp	->	exp '&' . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <472>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<275>	tick	->	. 	{ '{' }
	exp	->	exp '<' . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <473>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<276>	tick	->	. 	{ '{' }
	exp	->	exp '>' . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <474>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<277>	tick	->	. 	{ '{' }
	exp	->	exp '+' . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <475>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<278>	tick	->	. 	{ '{' }
	exp	->	exp '-' . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <476>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<279>	tick	->	. 	{ '{' }
	exp	->	exp '/' . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <477>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<280>	tick	->	. 	{ '{' }
	exp	->	exp '%' . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <478>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<281>	tick	->	. 	{ '{' }
	exp	->	exp ":=" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <479>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<282>	tick	->	. 	{ '{' }
	exp	->	exp '^' . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <480>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<283>	tick	->	. 	{ '{' }
	exp	->	exp "+=" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <481>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<284>	tick	->	. 	{ '{' }
	exp	->	exp "-=" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <482>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<285>	tick	->	. 	{ '{' }
	exp	->	exp "*=" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <483>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<286>	tick	->	. 	{ '{' }
	exp	->	exp "/=" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <484>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<287>	tick	->	. 	{ '{' }
	exp	->	exp "%=" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <485>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<288>	tick	->	. 	{ '{' }
	exp	->	exp "&=" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <486>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<289>	tick	->	. 	{ '{' }
	exp	->	exp "|=" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <487>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<290>	tick	->	. 	{ '{' }
	exp	->	exp "^=" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <488>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<291>	tick	->	. 	{ '{' }
	exp	->	exp ">=" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <489>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<292>	tick	->	. 	{ '{' }
	exp	->	exp "<=" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <490>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<293>	tick	->	. 	{ '{' }
	exp	->	exp "==" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <491>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<294>	tick	->	. 	{ '{' }
	exp	->	exp "!=" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <492>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<295>	tick	->	. 	{ '{' }
	exp	->	exp "<<=" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <493>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<296>	tick	->	. 	{ '{' }
	exp	->	exp ">>=" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <494>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<297>	exp	->	exp "++" . 

	       <default>	reduce using rule {212} (exp)

<298>	exp	->	exp "--" . 

	       <default>	reduce using rule {213} (exp)

<299>	tick	->	. 	{ '{' }
	exp	->	exp '?' . exp ':' exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <495>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<300>	setl_exp	->	exp "with" . exp 
	setl_exp	->	exp "with" . ":=" exp 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            ":="	shift, and goto state <496>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <497>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<301>	setl_exp	->	exp "less" . exp 
	setl_exp	->	exp "less" . ":=" exp 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            ":="	shift, and goto state <498>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <499>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<302>	simple_exp	->	simple_exp . "->" '#' integer 
	simple_exp	->	simple_exp . '.' id 
	simple_exp	->	simple_exp . '.' '#' integer 
	simple_exp	->	simple_exp . '[' exp ']' 
	simple_exp	->	simple_exp . "->" id 
	app_exp	->	app_exp simple_exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '\'' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ".(" ',' ">>" "<<" ':' "||" "&&" "|}" "{|" "|)" "(|" "|]" "[|" "..." '}' '{' ')' '(' ']' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK STRING_TOK CONS_EXP CONS_TOK ID_TOK '!' "=>" LONG_BAR '|' "where" "if" '*' }

	shift/reduce conflict with item {715} app_exp -> app_exp simple_exp . and '[' defaulted to shift.
	             '['	shift, and goto state <303>
	            "->"	shift, and goto state <304>
	             '.'	shift, and goto state <305>
	       <default>	reduce using rule {224} (app_exp)

<303>	tick	->	. 	{ '{' }
	simple_exp	->	simple_exp '[' . exp ']' 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <500>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<304>	simple_exp	->	simple_exp "->" . '#' integer 
	simple_exp	->	simple_exp "->" . id 

	          ID_TOK	shift, and goto state <93>
	             '#'	shift, and goto state <501>
	              id	goto state <502>

<305>	simple_exp	->	simple_exp '.' . id 
	simple_exp	->	simple_exp '.' . '#' integer 

	          ID_TOK	shift, and goto state <93>
	             '#'	shift, and goto state <503>
	              id	goto state <504>

<306>	lab_exp_list	->	. 	{ '}' }
	simple_exp	->	tick '{' . lab_exp_list '}' 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <505>
	         lab_exp	goto state <506>
	    lab_exp_list	goto state <507>
	   lab_exp_list2	goto state <508>
	       <default>	reduce using rule {267} (lab_exp_list)

<307>	list_exp	->	"[|" exp_list "|]" . 

	       <default>	reduce using rule {252} (list_exp)

<308>	list_exp	->	"(|" exp_list "|)" . 

	       <default>	reduce using rule {253} (list_exp)

<309>	list_exp	->	"{|" exp_list "|}" . 

	       <default>	reduce using rule {254} (list_exp)

<310>	list_exp	->	".(" exp_list2 ')' . 

	       <default>	reduce using rule {255} (list_exp)

<311>	type_decl	->	"type" type_defs ';' . 

	       <default>	reduce using rule {425} (type_decl)

<312>	and_or_bar	->	'|' . 

	       <default>	reduce using rule {446} (and_or_bar)

<313>	and_or_bar	->	"and" . 

	       <default>	reduce using rule {445} (and_or_bar)

<314>	type_defs	->	type_def and_or_bar . type_defs 
	sharing_opt	->	. 	{ ID_TOK }

	       "sharing"	shift, and goto state <138>
	       type_defs	goto state <509>
	        type_def	goto state <140>
	     sharing_opt	goto state <141>
	       <default>	reduce using rule {429} (sharing_opt)

<315>	type_def	->	sharing_opt id . tyvars '=' ty 
	tyvars	->	. 	{ '=' }

	             '<'	shift, and goto state <381>
	          tyvars	goto state <510>
	       <default>	reduce using rule {366} (tyvars)

<316>	simple_ty1	->	"collectable" ty . 	{ "edges:" "equality:" "hash:" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" "and" ';' ":=" '>' '&' "type" '=' ',' ':' "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" '|' "where" "if" '*' }
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	shift/reduce conflict with item {464} simple_ty1 -> "collectable" ty . and '&' resolved as reduce.
	shift/reduce conflict with item {464} simple_ty1 -> "collectable" ty . and '=' resolved as reduce.
	shift/reduce conflict with item {464} simple_ty1 -> "collectable" ty . and '[' resolved as reduce.
	shift/reduce conflict with item {464} simple_ty1 -> "collectable" ty . and '*' resolved as reduce.
	       <default>	reduce using rule {150} (simple_ty1)

<317>	simple_ty1	->	"finalizable" ty . 	{ "edges:" "equality:" "hash:" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" "and" ';' ":=" '>' '&' "type" '=' ',' ':' "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" '|' "where" "if" '*' }
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	shift/reduce conflict with item {467} simple_ty1 -> "finalizable" ty . and '&' resolved as reduce.
	shift/reduce conflict with item {467} simple_ty1 -> "finalizable" ty . and '=' resolved as reduce.
	shift/reduce conflict with item {467} simple_ty1 -> "finalizable" ty . and '[' resolved as reduce.
	shift/reduce conflict with item {467} simple_ty1 -> "finalizable" ty . and '*' resolved as reduce.
	       <default>	reduce using rule {151} (simple_ty1)

<318>	simple_ty1	->	'(' ')' . 

	       <default>	reduce using rule {155} (simple_ty1)

<319>	ty_list2	->	ty . ',' ty 
	ty_list2	->	ty . ',' ty_list2 
	simple_ty1	->	'(' ty . ')' 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             ')'	shift, and goto state <511>
	             ','	shift, and goto state <342>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>

<320>	simple_ty1	->	'(' ty_list2 . ')' 

	             ')'	shift, and goto state <512>

<321>	lab_ty	->	id . ':' ty 

	             ':'	shift, and goto state <513>

<322>	lab_ty_list2	->	lab_ty . ',' lab_ty 
	lab_ty_list2	->	lab_ty . ',' lab_ty_list2 
	lab_ty_list	->	lab_ty . 	{ '}' }

	             ','	shift, and goto state <514>
	       <default>	reduce using rule {177} (lab_ty_list)

<323>	labeled_ty	->	'{' lab_ty_list . '}' 

	             '}'	shift, and goto state <515>

<324>	lab_ty_list	->	lab_ty_list2 . 

	       <default>	reduce using rule {178} (lab_ty_list)

<325>	simple_ty1	->	"class" ty . 	{ "edges:" "equality:" "hash:" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" "and" ';' ":=" '>' '&' "type" '=' ',' ':' "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" '|' "where" "if" '*' }
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	shift/reduce conflict with item {458} simple_ty1 -> "class" ty . and '&' resolved as reduce.
	shift/reduce conflict with item {458} simple_ty1 -> "class" ty . and '=' resolved as reduce.
	shift/reduce conflict with item {458} simple_ty1 -> "class" ty . and '[' resolved as reduce.
	shift/reduce conflict with item {458} simple_ty1 -> "class" ty . and '*' resolved as reduce.
	       <default>	reduce using rule {148} (simple_ty1)

<326>	simple_ty1	->	"const" ty . 	{ "edges:" "equality:" "hash:" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" "and" ';' ":=" '>' '&' "type" '=' ',' ':' "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" '|' "where" "if" '*' }
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	shift/reduce conflict with item {461} simple_ty1 -> "const" ty . and '&' resolved as reduce.
	shift/reduce conflict with item {461} simple_ty1 -> "const" ty . and '=' resolved as reduce.
	shift/reduce conflict with item {461} simple_ty1 -> "const" ty . and '[' resolved as reduce.
	shift/reduce conflict with item {461} simple_ty1 -> "const" ty . and '*' resolved as reduce.
	       <default>	reduce using rule {149} (simple_ty1)

<327>	simple_ty1	->	"unsigned" ty . 	{ "edges:" "equality:" "hash:" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" "and" ';' ":=" '>' '&' "type" '=' ',' ':' "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" '|' "where" "if" '*' }
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	shift/reduce conflict with item {470} simple_ty1 -> "unsigned" ty . and '&' resolved as reduce.
	shift/reduce conflict with item {470} simple_ty1 -> "unsigned" ty . and '=' resolved as reduce.
	shift/reduce conflict with item {470} simple_ty1 -> "unsigned" ty . and '[' resolved as reduce.
	shift/reduce conflict with item {470} simple_ty1 -> "unsigned" ty . and '*' resolved as reduce.
	       <default>	reduce using rule {152} (simple_ty1)

<328>	simple_ty1	->	"signed" ty . 	{ "edges:" "equality:" "hash:" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" "and" ';' ":=" '>' '&' "type" '=' ',' ':' "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" '|' "where" "if" '*' }
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	shift/reduce conflict with item {473} simple_ty1 -> "signed" ty . and '&' resolved as reduce.
	shift/reduce conflict with item {473} simple_ty1 -> "signed" ty . and '=' resolved as reduce.
	shift/reduce conflict with item {473} simple_ty1 -> "signed" ty . and '[' resolved as reduce.
	shift/reduce conflict with item {473} simple_ty1 -> "signed" ty . and '*' resolved as reduce.
	       <default>	reduce using rule {153} (simple_ty1)

<329>	simple_ty1	->	".[" ty_list2 . ']' 

	             ']'	shift, and goto state <516>

<330>	setl_ty	->	"listof" '<' . ty '>' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <517>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<331>	setl_ty	->	"tupleof" '<' . ty_list2 '>' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <161>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	        ty_list2	goto state <518>
	         setl_ty	goto state <168>

<332>	setl_ty	->	"setof" '<' . ty '>' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <519>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<333>	setl_ty	->	"bagof" '<' . ty '>' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <520>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<334>	setl_ty	->	"mapof" '<' . ty ',' ty '>' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <521>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<335>	setl_ty	->	"multimapof" '<' . ty ',' ty '>' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <522>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<336>	setl_ty	->	"queueof" '<' . ty '>' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <523>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<337>	setl_ty	->	"priqueueof" '<' . ty '>' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <524>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<338>	setl_ty	->	"dequeof" '<' . ty '>' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <525>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<339>	id_ty	->	id '<' . ty_list '>' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <448>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         ty_list	goto state <526>
	        ty_list2	goto state <450>
	         setl_ty	goto state <168>

<340>	ty	->	ty '*' . 

	       <default>	reduce using rule {138} (ty)

<341>	tick	->	. 	{ '{' }
	ty	->	ty '[' . ']' 
	ty	->	ty '[' . exp ']' 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             ']'	shift, and goto state <527>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <528>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<342>	ty_list2	->	ty ',' . ty 
	ty_list2	->	ty ',' . ty_list2 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <529>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	        ty_list2	goto state <530>
	         setl_ty	goto state <168>

<343>	tick	->	. 	{ '{' }
	ty	->	ty '=' . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <531>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<344>	ty	->	ty '&' . 

	       <default>	reduce using rule {139} (ty)

<345>	qualified_ty	->	qualified_ty "::" . id_ty 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <160>
	           id_ty	goto state <532>

<346>	typeexp_decl	->	".[" ty_list2 ']' . 

	       <default>	reduce using rule {354} (typeexp_decl)

<347>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	stmt	->	"if" exp . "then" stmt_list else_clause ';' 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "then"	shift, and goto state <533>
	          "less"	shift, and goto state <301>

<348>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	stmt	->	"while" exp . "loop" stmt_list "end" "loop" ';' 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "loop"	shift, and goto state <534>
	          "less"	shift, and goto state <301>

<349>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	stmt	->	"return" exp . ';' 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	             ';'	shift, and goto state <535>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>

<350>	logical_pat	->	'!' . pat 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <536>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>

<351>	regexp	->	REGEXP_TOK . 

	       <default>	reduce using rule {34} (regexp)

<352>	aggr_pat	->	'#' . '[' pat_list ']' 
	aggr_pat	->	'#' . '[' pat_list1 "..." pat ']' 
	aggr_pat	->	'#' . '{' pat_list '}' 
	aggr_pat	->	'#' . '{' pat_list1 "..." pat '}' 
	aggr_pat	->	'#' . '(' pat_list ')' 
	aggr_pat	->	'#' . '(' pat_list1 "..." pat ')' 

	             '['	shift, and goto state <537>
	             '('	shift, and goto state <538>
	             '{'	shift, and goto state <539>

<353>	pat_list	->	. 	{ "..." ']' }
	aggr_pat	->	'[' . pat_list ']' 
	aggr_pat	->	'[' . pat_list "..." ']' 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <540>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	       pat_list2	goto state <541>
	        pat_list	goto state <542>
	       pat_list1	goto state <543>
	         big_pat	goto state <544>
	       <default>	reduce using rule {120} (pat_list)

<354>	prim_pat	->	'(' . ')' 
	prim_pat	->	'(' . pat ')' 
	prim_pat	->	'(' . pat_list2 ')' 
	prim_pat	->	'(' . pat ':' ty ')' 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             ')'	shift, and goto state <545>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <546>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	       pat_list2	goto state <547>
	         big_pat	goto state <548>

<355>	lab_pat_list	->	. 	{ "..." '}' }
	prim_pat	->	'{' . lab_pat_list '}' 
	prim_pat	->	'{' . lab_pat_list "..." '}' 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <549>
	         lab_pat	goto state <550>
	    lab_pat_list	goto state <551>
	   lab_pat_list1	goto state <552>
	       <default>	reduce using rule {128} (lab_pat_list)

<356>	dots_opt	->	. 	{ ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '!' "lexeme" }
	aggr_pat	->	"[|" . '|' pat pat_opt '|' dots_opt pat_list1 dots_opt "|]" 
	aggr_pat	->	"[|" . "|]" 
	aggr_pat	->	"[|" . dots_opt pat_list1 dots_opt "|]" 

	             '|'	shift, and goto state <553>
	           "..."	shift, and goto state <554>
	            "|]"	shift, and goto state <555>
	        dots_opt	goto state <556>
	       <default>	reduce using rule {112} (dots_opt)

<357>	dots_opt	->	. 	{ ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '!' "lexeme" }
	aggr_pat	->	"(|" . '|' pat pat_opt '|' dots_opt pat_list1 dots_opt "|)" 
	aggr_pat	->	"(|" . "|)" 
	aggr_pat	->	"(|" . dots_opt pat_list1 dots_opt "|)" 

	             '|'	shift, and goto state <557>
	           "..."	shift, and goto state <554>
	            "|)"	shift, and goto state <558>
	        dots_opt	goto state <559>
	       <default>	reduce using rule {112} (dots_opt)

<358>	dots_opt	->	. 	{ ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '!' "lexeme" }
	aggr_pat	->	"{|" . '|' pat pat_opt '|' dots_opt pat_list1 dots_opt "|}" 
	aggr_pat	->	"{|" . "|}" 
	aggr_pat	->	"{|" . dots_opt pat_list1 dots_opt "|}" 

	             '|'	shift, and goto state <560>
	           "..."	shift, and goto state <554>
	            "|}"	shift, and goto state <561>
	        dots_opt	goto state <562>
	       <default>	reduce using rule {112} (dots_opt)

<359>	prim_pat	->	'_' . 

	       <default>	reduce using rule {78} (prim_pat)

<360>	prim_pat	->	"<<" . cons_list ">>" pat 

	        CONS_TOK	shift, and goto state <94>
	            cons	goto state <563>
	       cons_list	goto state <564>

<361>	aggr_pat	->	".(" . pat_list2 ')' 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <540>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	       pat_list2	goto state <565>
	         big_pat	goto state <548>

<362>	string_pat	->	lexeme_ . "class" id 

	         "class"	shift, and goto state <566>

<363>	prim_pat	->	id . simple_pat 
	prim_pat	->	id . 	{ "<-" '\\' "and" ';' ',' ':' "equiv:" "xor:" "implies:" "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' LONG_BAR '|' "where" "if" }
	prim_pat	->	id . "as" pat 

	        "lexeme"	shift, and goto state <8>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	            "as"	shift, and goto state <567>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	      simple_pat	goto state <568>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	       <default>	reduce using rule {73} (prim_pat)

<364>	prim_pat	->	cons . simple_pat 
	prim_pat	->	cons . 	{ "<-" '\\' "and" ';' ',' ':' "equiv:" "xor:" "implies:" "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' LONG_BAR '|' "where" "if" }

	        "lexeme"	shift, and goto state <8>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	      simple_pat	goto state <569>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	       <default>	reduce using rule {85} (prim_pat)

<365>	string_pat	->	string . 

	       <default>	reduce using rule {90} (string_pat)

<366>	string_pat	->	regexp . 

	       <default>	reduce using rule {89} (string_pat)

<367>	prim_pat	->	meta_quote . 

	       <default>	reduce using rule {77} (prim_pat)

<368>	prim_pat	->	non_string_literal . 

	       <default>	reduce using rule {75} (prim_pat)

<369>	generator	->	pat . guard_exp "<-" exp 
	guard_exp	->	. 	{ "<-" }
	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	logical_pat	->	pat . "&&" pat 

	            "if"	shift, and goto state <570>
	         "where"	shift, and goto state <571>
	             '|'	shift, and goto state <572>
	            "&&"	shift, and goto state <573>
	            "||"	shift, and goto state <574>
	      "implies:"	shift, and goto state <575>
	          "xor:"	shift, and goto state <576>
	        "equiv:"	shift, and goto state <577>
	     where_or_if	goto state <578>
	       guard_exp	goto state <579>
	       <default>	reduce using rule {290} (guard_exp)

<370>	pat	->	logical_pat . 

	       <default>	reduce using rule {64} (pat)

<371>	pat	->	simple_pat . 

	       <default>	reduce using rule {63} (pat)

<372>	simple_pat	->	prim_pat . 

	       <default>	reduce using rule {71} (simple_pat)

<373>	prim_pat	->	string_pat . 

	       <default>	reduce using rule {76} (prim_pat)

<374>	simple_pat	->	aggr_pat . 

	       <default>	reduce using rule {72} (simple_pat)

<375>	stmt	->	"forall" generator_list . "loop" stmt_list "end" "loop" ';' 

	          "loop"	shift, and goto state <580>

<376>	generator_list	->	generator . ',' generator_list 
	generator_list	->	generator . 	{ "loop" '}' "where" }

	             ','	shift, and goto state <581>
	       <default>	reduce using rule {657} (generator_list)

<377>	stmt	->	exp ":=" . exp ';' 
	tick	->	. 	{ '{' }
	exp	->	exp ":=" . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <582>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<378>	stmt	->	replacement_decl ';' . 

	       <default>	reduce using rule {648} (stmt)

<379>	stmt_list	->	stmt stmt_list . 

	       <default>	reduce using rule {654} (stmt_list)

<380>	compound_stmt	->	"begin" stmt_list "end" . ';' 

	             ';'	shift, and goto state <583>

<381>	tyvars	->	'<' . var_list '>' 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <584>
	             var	goto state <585>
	        var_list	goto state <586>

<382>	inherit_list_opt	->	. 	{ "law" "and" ';' "::" "type" '=' '!' "where" }
	datatype_def	->	id tyvars . inherit_list_opt qualifiers_opt 
	datatype_def	->	id tyvars . inherit_list_opt qualifiers_opt '=' <464> switch_exp terms <465> datatype_body 

	             ':'	shift, and goto state <405>
	inherit_list_opt	goto state <587>
	       <default>	reduce using rule {477} (inherit_list_opt)

<383>	view_defs_opt	->	"type" . "view" id view_defs 

	          "view"	shift, and goto state <588>

<384>	law_defs_opt	->	. 	{ ';' "where" }
	datatype_decl	->	"datatype" datatype_defs0 view_defs_opt . law_defs_opt ty_defs_opt ';' 

	           "law"	shift, and goto state <589>
	    law_defs_opt	goto state <590>
	       <default>	reduce using rule {441} (law_defs_opt)

<385>	datatype_defs	->	datatype_def "and" . datatype_defs 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <185>
	   datatype_defs	goto state <591>
	    datatype_def	goto state <188>

<386>	complex_cons	->	'#' '[' . "..." ']' 
	complex_cons	->	'#' '[' . ']' 

	             ']'	shift, and goto state <592>
	           "..."	shift, and goto state <593>

<387>	complex_cons	->	'#' '(' . ')' 
	complex_cons	->	'#' '(' . "..." ')' 

	             ')'	shift, and goto state <594>
	           "..."	shift, and goto state <595>

<388>	complex_cons	->	'#' '{' . '}' 
	complex_cons	->	'#' '{' . "..." '}' 

	             '}'	shift, and goto state <596>
	           "..."	shift, and goto state <597>

<389>	complex_cons	->	"[|" "..." . "|]" 

	            "|]"	shift, and goto state <598>

<390>	complex_cons	->	"(|" "..." . "|)" 

	            "|)"	shift, and goto state <599>

<391>	complex_cons	->	"{|" "..." . "|}" 

	            "|}"	shift, and goto state <600>

<392>	refine_def	->	"class" id_or_cons . "::" id_or_cons '(' ')' brace_body 
	refine_def	->	"class" id_or_cons . "::" '~' id_or_cons '(' ')' brace_body 

	            "::"	shift, and goto state <601>

<393>	persistent_decl	->	id . ty_args "=>" pid 
	ty_args	->	. 	{ "=>" }

	             '<'	shift, and goto state <400>
	         ty_args	goto state <602>
	       <default>	reduce using rule {170} (ty_args)

<394>	refine_def	->	persistent_ persistent_decls . 

	       <default>	reduce using rule {461} (refine_def)

<395>	persistent_decls	->	persistent_decl . 	{ "and" ';' }
	persistent_decls	->	persistent_decl . '|' persistent_decls 

	             '|'	shift, and goto state <603>
	       <default>	reduce using rule {473} (persistent_decls)

<396>	printing_decl	->	complex_cons . ty_args "=>" print_formats 
	ty_args	->	. 	{ "=>" }

	             '<'	shift, and goto state <400>
	         ty_args	goto state <604>
	       <default>	reduce using rule {170} (ty_args)

<397>	refine_def	->	printable_ printing_decls . 

	       <default>	reduce using rule {460} (refine_def)

<398>	printing_decls	->	printing_decl . 	{ "and" ';' }
	printing_decls	->	printing_decl . '|' printing_decls 

	             '|'	shift, and goto state <605>
	       <default>	reduce using rule {470} (printing_decls)

<399>	refine_ty	->	id tyvars . 

	       <default>	reduce using rule {464} (refine_ty)

<400>	ty_args	->	'<' . ty_list '>' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <448>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         ty_list	goto state <606>
	        ty_list2	goto state <450>
	         setl_ty	goto state <168>

<401>	refine_cons	->	complex_cons ty_args . 

	       <default>	reduce using rule {467} (refine_cons)

<402>	refine_decl	->	"refine" refine_defs ';' . 

	       <default>	reduce using rule {455} (refine_decl)

<403>	refine_defs	->	refine_def "and" . refine_defs 

	    "persistent"	shift, and goto state <189>
	     "printable"	shift, and goto state <190>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	             '#'	shift, and goto state <191>
	            "[|"	shift, and goto state <192>
	            "(|"	shift, and goto state <193>
	            "{|"	shift, and goto state <194>
	         "class"	shift, and goto state <195>
	     persistent_	goto state <196>
	      printable_	goto state <197>
	              id	goto state <198>
	            cons	goto state <199>
	    complex_cons	goto state <200>
	     refine_defs	goto state <607>
	      refine_def	goto state <202>
	       refine_ty	goto state <203>
	  refine_ty_list	goto state <204>
	     refine_cons	goto state <205>
	refine_cons_list	goto state <206>

<404>	refine_ty_list	->	refine_ty ',' . refine_ty_list 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <198>
	       refine_ty	goto state <203>
	  refine_ty_list	goto state <608>

<405>	inherit_list_opt	->	':' . inherit_list 
	qualifiers	->	. 	{ "private" "protected" "public" ID_TOK }

	       "rewrite"	shift, and goto state <6>
	        "lexeme"	shift, and goto state <8>
	    "persistent"	shift, and goto state <189>
	        "traced"	shift, and goto state <609>
	   "collectable"	shift, and goto state <610>
	   "finalizable"	shift, and goto state <611>
	     "printable"	shift, and goto state <190>
	     "unifiable"	shift, and goto state <612>
	         "const"	shift, and goto state <613>
	          "view"	shift, and goto state <614>
	       "virtual"	shift, and goto state <615>
	        "inline"	shift, and goto state <616>
	      "relation"	shift, and goto state <617>
	   "applicative"	shift, and goto state <618>
	    "treeparser"	shift, and goto state <619>
	      "bitfield"	shift, and goto state <620>
	        "extern"	shift, and goto state <621>
	        rewrite_	goto state <622>
	         lexeme_	goto state <623>
	     persistent_	goto state <624>
	         traced_	goto state <625>
	    collectable_	goto state <626>
	    finalizable_	goto state <627>
	      printable_	goto state <628>
	      unifiable_	goto state <629>
	    inherit_list	goto state <630>
	         inherit	goto state <631>
	      qualifiers	goto state <632>
	       qualifier	goto state <633>
	       <default>	reduce using rule {485} (qualifiers)

<406>	qualifiers_opt	->	. 	{ "and" ';' '{' }
	refine_def	->	refine_ty_list inherit_list_opt . qualifiers_opt brace_body_opt 

	             '!'	shift, and goto state <634>
	            "::"	shift, and goto state <635>
	  qualifiers_opt	goto state <636>
	       <default>	reduce using rule {482} (qualifiers_opt)

<407>	refine_cons_list	->	refine_cons ',' . refine_cons_list 

	        CONS_TOK	shift, and goto state <94>
	             '#'	shift, and goto state <191>
	            "[|"	shift, and goto state <192>
	            "(|"	shift, and goto state <193>
	            "{|"	shift, and goto state <194>
	            cons	goto state <199>
	    complex_cons	goto state <200>
	     refine_cons	goto state <205>
	refine_cons_list	goto state <637>

<408>	refine_def	->	refine_cons_list inherit_list_opt . brace_body_opt 
	brace_body_opt	->	. 	{ "and" ';' }

	             '{'	shift, and goto state <638>
	      brace_body	goto state <639>
	  brace_body_opt	goto state <640>
	       <default>	reduce using rule {312} (brace_body_opt)

<409>	instantiate_decl	->	"instantiate" extern_opt "datatype" . ty_list ';' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <448>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         ty_list	goto state <641>
	        ty_list2	goto state <450>
	         setl_ty	goto state <168>

<410>	attribgram_class_decl	->	"attributegrammar" "class" id . inherit_list_opt qualifiers_opt brace_body ';' 
	inherit_list_opt	->	. 	{ "::" '{' '!' }

	             ':'	shift, and goto state <405>
	inherit_list_opt	goto state <642>
	       <default>	reduce using rule {477} (inherit_list_opt)

<411>	attribgram_decl	->	"attributegrammar" id <472> . '{' prec_rules expect_ <473> bnf_rules '}' ';' 

	             '{'	shift, and goto state <643>

<412>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	paren_exp	->	'(' exp . ')' 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	             ')'	shift, and goto state <644>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>

<413>	fun_decl	->	"fun" fun_rules_list ';' . 

	       <default>	reduce using rule {596} (fun_decl)

<414>	<479>	->	. 	{ ID_TOK }
	fun_rules_list	->	this_fun_rules "and" . fun_rules_list 

	  fun_rules_list	goto state <645>
	  this_fun_rules	goto state <214>
	           <479>	goto state <215>
	       <default>	reduce using rule {775} (<479>)

<415>	id_ty	->	id . 	{ "::" }
	id_ty	->	id . '<' ty_list '>' 
	qual_id	->	id . 	{ ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '!' "lexeme" }

	             '<'	shift, and goto state <339>
	            "::"	reduce using rule {167} (id_ty)
	        "lexeme"	reduce using rule {165} (qual_id)
	             '!'	reduce using rule {165} (qual_id)
	          ID_TOK	reduce using rule {165} (qual_id)
	        CONS_TOK	reduce using rule {165} (qual_id)
	      STRING_TOK	reduce using rule {165} (qual_id)
	      REGEXP_TOK	reduce using rule {165} (qual_id)
	       QUARK_TOK	reduce using rule {165} (qual_id)
	      BIGINT_TOK	reduce using rule {165} (qual_id)
	      META_QUOTE	reduce using rule {165} (qual_id)
	         INT_TOK	reduce using rule {165} (qual_id)
	        REAL_TOK	reduce using rule {165} (qual_id)
	        CHAR_TOK	reduce using rule {165} (qual_id)
	         "false"	reduce using rule {165} (qual_id)
	          "true"	reduce using rule {165} (qual_id)
	             '#'	reduce using rule {165} (qual_id)
	             '['	reduce using rule {165} (qual_id)
	             '('	reduce using rule {165} (qual_id)
	             '{'	reduce using rule {165} (qual_id)
	            "[|"	reduce using rule {165} (qual_id)
	            "(|"	reduce using rule {165} (qual_id)
	            "{|"	reduce using rule {165} (qual_id)
	             '_'	reduce using rule {165} (qual_id)
	            "<<"	reduce using rule {165} (qual_id)
	            ".("	reduce using rule {165} (qual_id)

<416>	fun_rule_head	->	qual_id . top_pat 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	         top_pat	goto state <646>
	             pat	goto state <647>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	   top_pat_list2	goto state <648>

<417>	qual_id	->	id_ty . "::" qual_id 

	            "::"	shift, and goto state <649>

<418>	this_fun_rules	->	<479> fun_rules . 

	       <default>	reduce using rule {599} (this_fun_rules)

<419>	fun_rule	->	fun_rule_head . where_or_if exp ':' fun_action 
	fun_rule	->	fun_rule_head . ':' return_ty ':' fun_action 
	fun_rule	->	fun_rule_head . ':' fun_action 
	fun_rule	->	fun_rule_head . ':' return_ty where_or_if exp ':' fun_action 

	            "if"	shift, and goto state <570>
	         "where"	shift, and goto state <571>
	             '|'	shift, and goto state <572>
	             ':'	shift, and goto state <650>
	     where_or_if	goto state <651>

<420>	fun_rules	->	fun_rule . 	{ "and" ';' }
	fun_rules	->	fun_rule . '|' fun_rules 

	             '|'	shift, and goto state <652>
	       <default>	reduce using rule {600} (fun_rules)

<421>	fun_args	->	. 	{ ')' }
	function_def	->	"function" cons_or_string '(' . fun_args ')' "return" ty "is" defs "begin" stmt_list "end" ';' 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <653>
	        fun_args	goto state <654>
	       fun_args1	goto state <655>
	         fun_arg	goto state <656>
	       <default>	reduce using rule {619} (fun_args)

<422>	function_def	->	"procedure" cons_or_string '(' . fun_args ')' "is" defs "begin" stmt_list "end" ';' 
	fun_args	->	. 	{ ')' }

	          ID_TOK	shift, and goto state <93>
	              id	goto state <653>
	        fun_args	goto state <657>
	       fun_args1	goto state <655>
	         fun_arg	goto state <656>
	       <default>	reduce using rule {619} (fun_args)

<423>	module_args	->	'(' . labeled_sigs ')' 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <658>
	    labeled_sigs	goto state <659>
	     labeled_sig	goto state <660>

<424>	module_sig	->	. 	{ "is" }
	module_def	->	"module" cons_or_string module_args . module_sig "is" "begin" defs "end" ';' 

	             ':'	shift, and goto state <661>
	      module_sig	goto state <662>
	       <default>	reduce using rule {630} (module_sig)

<425>	signature_def	->	"signature" cons_or_string module_args . "is" sig ';' 

	            "is"	shift, and goto state <663>

<426>	def	->	id ':' . ty ":=" exp ';' 
	def	->	id ':' . ty ';' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <664>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<427>	defs	->	def defs . 

	       <default>	reduce using rule {640} (defs)

<428>	compound_stmt	->	"declare" defs "begin" . stmt_list "end" ';' 
	tick	->	. 	{ '{' }

	       "rewrite"	shift, and goto state <6>
	         "match"	shift, and goto state <10>
	             '*'	shift, and goto state <90>
	      "matchall"	shift, and goto state <11>
	     "matchscan"	shift, and goto state <12>
	            "if"	shift, and goto state <169>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "while"	shift, and goto state <170>
	        "return"	shift, and goto state <171>
	         "begin"	shift, and goto state <25>
	    "cutrewrite"	shift, and goto state <33>
	   "failrewrite"	shift, and goto state <34>
	        "forall"	shift, and goto state <172>
	       "declare"	shift, and goto state <40>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	        rewrite_	goto state <173>
	match_or_matchall	goto state <47>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <174>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	      match_decl	goto state <175>
	  rewriting_decl	goto state <176>
	replacement_decl	goto state <177>
	            stmt	goto state <178>
	       stmt_list	goto state <665>
	   compound_stmt	goto state <180>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<429>	graph_class_decl	->	"graphtype" id inherit_list_opt . qualifiers_opt '(' <480> node_spec <481> edge_spec ')' brace_body ';' 
	qualifiers_opt	->	. 	{ '(' }

	             '!'	shift, and goto state <634>
	            "::"	shift, and goto state <635>
	  qualifiers_opt	goto state <666>
	       <default>	reduce using rule {482} (qualifiers_opt)

<430>	graph_rewrite_decl	->	"graphrewrite" id '(' . fun_args ')' '=' "begin" grs_sections "end" "graphrewrite" ';' 
	graph_rewrite_decl	->	"graphrewrite" id '(' . fun_args ')' '{' grs_sections '}' 
	fun_args	->	. 	{ ')' }

	          ID_TOK	shift, and goto state <93>
	              id	goto state <653>
	        fun_args	goto state <667>
	       fun_args1	goto state <655>
	         fun_arg	goto state <656>
	       <default>	reduce using rule {619} (fun_args)

<431>	rewrite_class_decl	->	rewrite_ "class" id . '(' protocols ')' inherit_list_opt qualifiers_opt brace_body ';' 

	             '('	shift, and goto state <668>

<432>	rewrite_decl	->	rewrite_ id <476> . '{' rewrite_indexings case_or_bar_rules '}' ';' 

	             '{'	shift, and goto state <669>

<433>	opt_dest	->	"=>" . exp 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <670>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<434>	rewriting_decl	->	rewrite_ paren_exp opt_dest . "type" '(' protocols ')' qualifiers_opt <477> '{' rewrite_indexings case_or_bar_rules '}' 
	rewriting_decl	->	rewrite_ paren_exp opt_dest . "type" '(' protocols ')' qualifiers_opt <478> "of" rewrite_indexings case_or_bar_rules "end" "rewrite" ';' 

	          "type"	shift, and goto state <671>

<435>	syntax_class_decl	->	syntax_ "class" id . inherit_list_opt qualifiers_opt brace_body ';' 
	inherit_list_opt	->	. 	{ "::" '{' '!' }

	             ':'	shift, and goto state <405>
	inherit_list_opt	goto state <672>
	       <default>	reduce using rule {477} (inherit_list_opt)

<436>	syntax_decl	->	syntax_ id <470> . '{' prec_rules expect_ <471> bnf_rules '}' ';' 

	             '{'	shift, and goto state <673>

<437>	lexeme_class_rule	->	id . '=' terms 

	             '='	shift, and goto state <674>

<438>	lexeme_decl	->	lexeme_ "class" lexeme_class_rules . ';' 

	             ';'	shift, and goto state <675>

<439>	lexeme_class_rules	->	lexeme_class_rule . 	{ ';' }
	lexeme_class_rules	->	lexeme_class_rule . "and" lexeme_class_rules 

	           "and"	shift, and goto state <676>
	       <default>	reduce using rule {545} (lexeme_class_rules)

<440>	lexeme_rule	->	id '=' . string_pat 

	        "lexeme"	shift, and goto state <8>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	         lexeme_	goto state <362>
	          string	goto state <365>
	          regexp	goto state <366>
	      string_pat	goto state <677>

<441>	lexeme_decl	->	lexeme_ lexeme_rules ';' . 

	       <default>	reduce using rule {540} (lexeme_decl)

<442>	lexeme_rules	->	lexeme_rule and_or_bar . lexeme_rules 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <236>
	    lexeme_rules	goto state <678>
	     lexeme_rule	goto state <238>

<443>	inference_class_decl	->	inference_ "class" id . inherit_list_opt qualifiers_opt brace_body ';' 
	inherit_list_opt	->	. 	{ "::" '{' '!' }

	             ':'	shift, and goto state <405>
	inherit_list_opt	goto state <679>
	       <default>	reduce using rule {477} (inherit_list_opt)

<444>	<468>	->	. 	{ ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '!' '~' LONG_BAR "match" "lexeme" }
	inference_decl	->	inference_ id '{' . inference_rules '}' ';' 
	inference_rules	->	. 	{ '}' }

	 inference_rules	goto state <680>
	  inference_rule	goto state <681>
	           <468>	goto state <682>
	        "lexeme"	reduce using rule {764} (<468>)
	         "match"	reduce using rule {764} (<468>)
	        LONG_BAR	reduce using rule {764} (<468>)
	             '~'	reduce using rule {764} (<468>)
	             '!'	reduce using rule {764} (<468>)
	          ID_TOK	reduce using rule {764} (<468>)
	        CONS_TOK	reduce using rule {764} (<468>)
	      STRING_TOK	reduce using rule {764} (<468>)
	      REGEXP_TOK	reduce using rule {764} (<468>)
	       QUARK_TOK	reduce using rule {764} (<468>)
	      BIGINT_TOK	reduce using rule {764} (<468>)
	      META_QUOTE	reduce using rule {764} (<468>)
	         INT_TOK	reduce using rule {764} (<468>)
	        REAL_TOK	reduce using rule {764} (<468>)
	        CHAR_TOK	reduce using rule {764} (<468>)
	         "false"	reduce using rule {764} (<468>)
	          "true"	reduce using rule {764} (<468>)
	             '#'	reduce using rule {764} (<468>)
	             '['	reduce using rule {764} (<468>)
	             '('	reduce using rule {764} (<468>)
	             '{'	reduce using rule {764} (<468>)
	            "[|"	reduce using rule {764} (<468>)
	            "(|"	reduce using rule {764} (<468>)
	            "{|"	reduce using rule {764} (<468>)
	             '_'	reduce using rule {764} (<468>)
	            "<<"	reduce using rule {764} (<468>)
	            ".("	reduce using rule {764} (<468>)
	             '}'	reduce using rule {509} (inference_rules)

<445>	match_ty	->	'[' ty . ']' 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             ']'	shift, and goto state <683>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>

<446>	match_options	->	"while" . 

	       <default>	reduce using rule {275} (match_options)

<447>	match_decl	->	match_or_matchall match_ty match_options . match_exps <453> '{' case_or_bar_rules '}' 
	match_decl	->	match_or_matchall match_ty match_options . match_exps "of" <454> case_or_bar_rules "end" "match" ';' 

	             '('	shift, and goto state <211>
	       paren_exp	goto state <684>
	      match_exps	goto state <685>
	       match_exp	goto state <686>

<448>	ty_list	->	ty . 	{ ';' '>' }
	ty_list2	->	ty . ',' ty 
	ty_list2	->	ty . ',' ty_list2 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             ','	shift, and goto state <342>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	       <default>	reduce using rule {172} (ty_list)

<449>	typeexp_decl	->	poly_datatype '<' ty_list . '>' 

	             '>'	shift, and goto state <687>

<450>	ty_list	->	ty_list2 . 

	       <default>	reduce using rule {173} (ty_list)

<451>	exp_list	->	. 	{ ')' }
	cons_exp	->	cons_id tick '(' . exp_list ')' '{' lab_exp_list '}' 
	cons_exp	->	cons_id tick '(' . exp_list ')' '(' exp_list ')' 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <122>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        exp_list	goto state <688>
	       exp_list2	goto state <131>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	             ')'	reduce using rule {262} (exp_list)
	             '{'	reduce using rule {244} (tick)

<452>	lab_exp_list	->	. 	{ '}' }
	cons_exp	->	cons_id tick '{' . lab_exp_list '}' 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <505>
	         lab_exp	goto state <506>
	    lab_exp_list	goto state <689>
	   lab_exp_list2	goto state <508>
	       <default>	reduce using rule {267} (lab_exp_list)

<453>	list_exp	->	'#' '[' exp_list ']' . 

	       <default>	reduce using rule {246} (list_exp)

<454>	list_exp	->	'#' '[' exp_list "..." . exp ']' 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <690>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<455>	list_exp	->	'#' '(' exp_list ')' . 

	       <default>	reduce using rule {247} (list_exp)

<456>	list_exp	->	'#' '(' exp_list "..." . exp ')' 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <691>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<457>	list_exp	->	'#' '{' exp_list '}' . 

	       <default>	reduce using rule {248} (list_exp)

<458>	list_exp	->	'#' '{' exp_list "..." . exp '}' 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <692>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<459>	simple_exp	->	'(' exp ')' . 

	       <default>	reduce using rule {232} (simple_exp)

<460>	simple_exp	->	'(' exp_list2 ')' . 

	       <default>	reduce using rule {233} (simple_exp)

<461>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	set_comprehension	->	"setof" '{' exp . ':' generator_list guard_exp3 '}' 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	             ':'	shift, and goto state <693>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>

<462>	simple_exp	->	id "::" id . 

	       <default>	reduce using rule {243} (simple_exp)

<463>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp '*' exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {567} exp -> exp '*' exp . and "less" resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and "with" resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and '?' resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and "--" resolved as shift.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and "++" resolved as shift.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and "==" resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and "<=" resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and ">=" resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and '^' resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and '%' resolved as reduce(left).
	shift/reduce conflict with item {567} exp -> exp '*' exp . and '/' resolved as reduce(left).
	shift/reduce conflict with item {567} exp -> exp '*' exp . and '-' resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and '+' resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and '>' resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and '<' resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and '&' resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and '=' resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and ">>" resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and "<<" resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and "||" resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and '|' resolved as reduce.
	shift/reduce conflict with item {567} exp -> exp '*' exp . and '*' resolved as reduce(left).
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	       <default>	reduce using rule {184} (exp)

<464>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp '|' exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {595} exp -> exp '|' exp . and "less" resolved as shift.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and "with" resolved as shift.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and '?' resolved as reduce.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and "--" resolved as shift.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and "++" resolved as shift.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and "!=" resolved as shift.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and "==" resolved as shift.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and "<=" resolved as shift.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and ">=" resolved as shift.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and '^' resolved as shift.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and '%' resolved as shift.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and '/' resolved as shift.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and '-' resolved as shift.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and '+' resolved as shift.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and '>' resolved as shift.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and '<' resolved as shift.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and '&' resolved as shift.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and '=' resolved as reduce.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and ">>" resolved as shift.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and "<<" resolved as shift.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and "||" resolved as reduce.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {595} exp -> exp '|' exp . and '|' resolved as reduce(left).
	shift/reduce conflict with item {595} exp -> exp '|' exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	             '^'	shift, and goto state <282>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {191} (exp)

<465>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp "&&" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {659} exp -> exp "&&" exp . and "less" resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and "with" resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and "--" resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and "++" resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and ">>=" resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and "<<=" resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and "!=" resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and "==" resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and "<=" resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and ">=" resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and "^=" resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and "|=" resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and "&=" resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and "%=" resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and "/=" resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and "*=" resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and "-=" resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and "+=" resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and '^' resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and ":=" resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and '%' resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and '/' resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and '-' resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and '+' resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and '>' resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and '<' resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and '&' resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and '=' resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and ">>" resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and "<<" resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and "&&" resolved as reduce(left).
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and '|' resolved as shift.
	shift/reduce conflict with item {659} exp -> exp "&&" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {207} (exp)

<466>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp "||" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {655} exp -> exp "||" exp . and "less" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and "with" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and "--" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and "++" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and ">>=" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and "<<=" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and "!=" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and "==" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and "<=" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and ">=" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and "^=" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and "|=" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and "&=" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and "%=" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and "/=" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and "*=" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and "-=" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and "+=" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and '^' resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and ":=" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and '%' resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and '/' resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and '-' resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and '+' resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and '>' resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and '<' resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and '&' resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and '=' resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and ">>" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and "<<" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and "||" resolved as reduce(left).
	shift/reduce conflict with item {655} exp -> exp "||" exp . and "&&" resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and '|' resolved as shift.
	shift/reduce conflict with item {655} exp -> exp "||" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {206} (exp)

<467>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp "<<" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {663} exp -> exp "<<" exp . and "less" resolved as shift.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and "with" resolved as shift.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and "--" resolved as shift.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and "++" resolved as shift.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and "==" resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and "<=" resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and ">=" resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and '^' resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and '%' resolved as shift.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and '/' resolved as shift.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and '-' resolved as shift.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and '+' resolved as shift.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and '>' resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and '<' resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and '&' resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and '=' resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and ">>" resolved as reduce(left).
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and "<<" resolved as reduce(left).
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and '|' resolved as reduce.
	shift/reduce conflict with item {663} exp -> exp "<<" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {208} (exp)

<468>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp ">>" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {667} exp -> exp ">>" exp . and "less" resolved as shift.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and "with" resolved as shift.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and "--" resolved as shift.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and "++" resolved as shift.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and "==" resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and "<=" resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and ">=" resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and '^' resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and '%' resolved as shift.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and '/' resolved as shift.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and '-' resolved as shift.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and '+' resolved as shift.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and '>' resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and '<' resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and '&' resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and '=' resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and ">>" resolved as reduce(left).
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and "<<" resolved as reduce(left).
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and '|' resolved as reduce.
	shift/reduce conflict with item {667} exp -> exp ">>" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {209} (exp)

<469>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp_list2	->	exp . ',' exp 
	exp_list2	->	exp ',' exp . 	{ "|}" "|)" "|]" "..." '}' ')' ']' }
	exp_list2	->	exp . ',' exp_list2 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             ','	shift, and goto state <272>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {265} (exp_list2)

<470>	exp_list2	->	exp ',' exp_list2 . 

	       <default>	reduce using rule {266} (exp_list2)

<471>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp '=' exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {579} exp -> exp '=' exp . and "less" resolved as shift.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and "with" resolved as shift.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and '?' resolved as reduce.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and "--" resolved as shift.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and "++" resolved as shift.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and "!=" resolved as shift.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and "==" resolved as shift.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and "<=" resolved as shift.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and ">=" resolved as shift.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and "%=" resolved as shift(right).
	shift/reduce conflict with item {579} exp -> exp '=' exp . and "/=" resolved as shift(right).
	shift/reduce conflict with item {579} exp -> exp '=' exp . and "*=" resolved as shift(right).
	shift/reduce conflict with item {579} exp -> exp '=' exp . and "-=" resolved as shift(right).
	shift/reduce conflict with item {579} exp -> exp '=' exp . and "+=" resolved as shift(right).
	shift/reduce conflict with item {579} exp -> exp '=' exp . and '^' resolved as shift.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and ":=" resolved as shift(right).
	shift/reduce conflict with item {579} exp -> exp '=' exp . and '%' resolved as shift.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and '/' resolved as shift.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and '-' resolved as shift.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and '+' resolved as shift.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and '>' resolved as shift.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and '<' resolved as shift.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and '&' resolved as shift.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and '=' resolved as shift(right).
	shift/reduce conflict with item {579} exp -> exp '=' exp . and ">>" resolved as shift.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and "<<" resolved as shift.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and "||" resolved as reduce.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and '|' resolved as shift.
	shift/reduce conflict with item {579} exp -> exp '=' exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {187} (exp)

<472>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp '&' exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {599} exp -> exp '&' exp . and "less" resolved as shift.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and "with" resolved as shift.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and '?' resolved as reduce.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and "--" resolved as shift.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and "++" resolved as shift.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and "!=" resolved as shift.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and "==" resolved as shift.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and "<=" resolved as shift.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and ">=" resolved as shift.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and '^' resolved as reduce.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and '%' resolved as shift.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and '/' resolved as shift.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and '-' resolved as shift.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and '+' resolved as shift.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and '>' resolved as shift.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and '<' resolved as shift.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and '&' resolved as reduce(left).
	shift/reduce conflict with item {599} exp -> exp '&' exp . and '=' resolved as reduce.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and ">>" resolved as shift.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and "<<" resolved as shift.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and "||" resolved as reduce.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and '|' resolved as reduce.
	shift/reduce conflict with item {599} exp -> exp '&' exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {192} (exp)

<473>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp '<' exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {587} exp -> exp '<' exp . and "less" resolved as shift.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and "with" resolved as shift.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and '?' resolved as reduce.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and "--" resolved as shift.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and "++" resolved as shift.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and "==" resolved as reduce.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and "<=" resolved as reduce(left).
	shift/reduce conflict with item {587} exp -> exp '<' exp . and ">=" resolved as reduce(left).
	shift/reduce conflict with item {587} exp -> exp '<' exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and '^' resolved as reduce.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and '%' resolved as shift.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and '/' resolved as shift.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and '-' resolved as shift.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and '+' resolved as shift.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and '>' resolved as reduce(left).
	shift/reduce conflict with item {587} exp -> exp '<' exp . and '<' resolved as reduce(left).
	shift/reduce conflict with item {587} exp -> exp '<' exp . and '&' resolved as reduce.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and '=' resolved as reduce.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and ">>" resolved as shift.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and "<<" resolved as shift.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and "||" resolved as reduce.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and '|' resolved as reduce.
	shift/reduce conflict with item {587} exp -> exp '<' exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {189} (exp)

<474>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp '>' exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {591} exp -> exp '>' exp . and "less" resolved as shift.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and "with" resolved as shift.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and '?' resolved as reduce.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and "--" resolved as shift.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and "++" resolved as shift.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and "==" resolved as reduce.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and "<=" resolved as reduce(left).
	shift/reduce conflict with item {591} exp -> exp '>' exp . and ">=" resolved as reduce(left).
	shift/reduce conflict with item {591} exp -> exp '>' exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and '^' resolved as reduce.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and '%' resolved as shift.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and '/' resolved as shift.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and '-' resolved as shift.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and '+' resolved as shift.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and '>' resolved as reduce(left).
	shift/reduce conflict with item {591} exp -> exp '>' exp . and '<' resolved as reduce(left).
	shift/reduce conflict with item {591} exp -> exp '>' exp . and '&' resolved as reduce.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and '=' resolved as reduce.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and ">>" resolved as shift.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and "<<" resolved as shift.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and "||" resolved as reduce.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and '|' resolved as reduce.
	shift/reduce conflict with item {591} exp -> exp '>' exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {190} (exp)

<475>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp '+' exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {559} exp -> exp '+' exp . and "less" resolved as reduce(left).
	shift/reduce conflict with item {559} exp -> exp '+' exp . and "with" resolved as reduce(left).
	shift/reduce conflict with item {559} exp -> exp '+' exp . and '?' resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and "--" resolved as shift.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and "++" resolved as shift.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and "==" resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and "<=" resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and ">=" resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and '^' resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and '%' resolved as shift.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and '/' resolved as shift.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and '-' resolved as reduce(left).
	shift/reduce conflict with item {559} exp -> exp '+' exp . and '+' resolved as reduce(left).
	shift/reduce conflict with item {559} exp -> exp '+' exp . and '>' resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and '<' resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and '&' resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and '=' resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and ">>" resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and "<<" resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and "||" resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and '|' resolved as reduce.
	shift/reduce conflict with item {559} exp -> exp '+' exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	       <default>	reduce using rule {182} (exp)

<476>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp '-' exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {563} exp -> exp '-' exp . and "less" resolved as reduce(left).
	shift/reduce conflict with item {563} exp -> exp '-' exp . and "with" resolved as reduce(left).
	shift/reduce conflict with item {563} exp -> exp '-' exp . and '?' resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and "--" resolved as shift.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and "++" resolved as shift.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and "==" resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and "<=" resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and ">=" resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and '^' resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and '%' resolved as shift.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and '/' resolved as shift.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and '-' resolved as reduce(left).
	shift/reduce conflict with item {563} exp -> exp '-' exp . and '+' resolved as reduce(left).
	shift/reduce conflict with item {563} exp -> exp '-' exp . and '>' resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and '<' resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and '&' resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and '=' resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and ">>" resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and "<<" resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and "||" resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and '|' resolved as reduce.
	shift/reduce conflict with item {563} exp -> exp '-' exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	       <default>	reduce using rule {183} (exp)

<477>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp '/' exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {571} exp -> exp '/' exp . and "less" resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and "with" resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and '?' resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and "--" resolved as shift.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and "++" resolved as shift.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and "==" resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and "<=" resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and ">=" resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and '^' resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and '%' resolved as reduce(left).
	shift/reduce conflict with item {571} exp -> exp '/' exp . and '/' resolved as reduce(left).
	shift/reduce conflict with item {571} exp -> exp '/' exp . and '-' resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and '+' resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and '>' resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and '<' resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and '&' resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and '=' resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and ">>" resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and "<<" resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and "||" resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and '|' resolved as reduce.
	shift/reduce conflict with item {571} exp -> exp '/' exp . and '*' resolved as reduce(left).
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	       <default>	reduce using rule {185} (exp)

<478>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 
	exp	->	exp '%' exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }

	shift/reduce conflict with item {575} exp -> exp '%' exp . and "less" resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and "with" resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and '?' resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and "--" resolved as shift.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and "++" resolved as shift.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and "==" resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and "<=" resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and ">=" resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and '^' resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and '%' resolved as reduce(left).
	shift/reduce conflict with item {575} exp -> exp '%' exp . and '/' resolved as reduce(left).
	shift/reduce conflict with item {575} exp -> exp '%' exp . and '-' resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and '+' resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and '>' resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and '<' resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and '&' resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and '=' resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and ">>" resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and "<<" resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and "||" resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and '|' resolved as reduce.
	shift/reduce conflict with item {575} exp -> exp '%' exp . and '*' resolved as reduce(left).
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	       <default>	reduce using rule {186} (exp)

<479>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp ":=" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "less" resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "with" resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "--" resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "++" resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "!=" resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "==" resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "<=" resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and ">=" resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "%=" resolved as shift(right).
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "/=" resolved as shift(right).
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "*=" resolved as shift(right).
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "-=" resolved as shift(right).
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "+=" resolved as shift(right).
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '^' resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and ":=" resolved as shift(right).
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '%' resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '/' resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '-' resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '+' resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '>' resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '<' resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '&' resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '=' resolved as shift(right).
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and ">>" resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "<<" resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '|' resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {188} (exp)

<480>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp '^' exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {603} exp -> exp '^' exp . and "less" resolved as shift.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and "with" resolved as shift.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and '?' resolved as reduce.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and "--" resolved as shift.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and "++" resolved as shift.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and "!=" resolved as shift.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and "==" resolved as shift.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and "<=" resolved as shift.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and ">=" resolved as shift.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and '^' resolved as reduce(left).
	shift/reduce conflict with item {603} exp -> exp '^' exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and '%' resolved as shift.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and '/' resolved as shift.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and '-' resolved as shift.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and '+' resolved as shift.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and '>' resolved as shift.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and '<' resolved as shift.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and '&' resolved as shift.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and '=' resolved as reduce.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and ">>" resolved as shift.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and "<<" resolved as shift.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and "||" resolved as reduce.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and '|' resolved as reduce.
	shift/reduce conflict with item {603} exp -> exp '^' exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {193} (exp)

<481>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp "+=" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {607} exp -> exp "+=" exp . and "less" resolved as shift.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and "with" resolved as shift.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and "--" resolved as shift.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and "++" resolved as shift.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and "!=" resolved as shift.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and "==" resolved as shift.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and "<=" resolved as shift.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and ">=" resolved as shift.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and "%=" resolved as shift(right).
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and "/=" resolved as shift(right).
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and "*=" resolved as shift(right).
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and "-=" resolved as shift(right).
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and "+=" resolved as shift(right).
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and '^' resolved as shift.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and ":=" resolved as shift(right).
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and '%' resolved as shift.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and '/' resolved as shift.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and '-' resolved as shift.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and '+' resolved as shift.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and '>' resolved as shift.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and '<' resolved as shift.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and '&' resolved as shift.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and '=' resolved as shift(right).
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and ">>" resolved as shift.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and "<<" resolved as shift.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and '|' resolved as shift.
	shift/reduce conflict with item {607} exp -> exp "+=" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {194} (exp)

<482>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp "-=" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {611} exp -> exp "-=" exp . and "less" resolved as shift.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and "with" resolved as shift.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and "--" resolved as shift.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and "++" resolved as shift.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and "!=" resolved as shift.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and "==" resolved as shift.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and "<=" resolved as shift.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and ">=" resolved as shift.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and "%=" resolved as shift(right).
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and "/=" resolved as shift(right).
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and "*=" resolved as shift(right).
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and "-=" resolved as shift(right).
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and "+=" resolved as shift(right).
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and '^' resolved as shift.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and ":=" resolved as shift(right).
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and '%' resolved as shift.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and '/' resolved as shift.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and '-' resolved as shift.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and '+' resolved as shift.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and '>' resolved as shift.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and '<' resolved as shift.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and '&' resolved as shift.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and '=' resolved as shift(right).
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and ">>" resolved as shift.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and "<<" resolved as shift.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and '|' resolved as shift.
	shift/reduce conflict with item {611} exp -> exp "-=" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {195} (exp)

<483>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp "*=" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {615} exp -> exp "*=" exp . and "less" resolved as shift.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and "with" resolved as shift.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and "--" resolved as shift.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and "++" resolved as shift.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and "!=" resolved as shift.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and "==" resolved as shift.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and "<=" resolved as shift.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and ">=" resolved as shift.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and "%=" resolved as shift(right).
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and "/=" resolved as shift(right).
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and "*=" resolved as shift(right).
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and "-=" resolved as shift(right).
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and "+=" resolved as shift(right).
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and '^' resolved as shift.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and ":=" resolved as shift(right).
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and '%' resolved as shift.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and '/' resolved as shift.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and '-' resolved as shift.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and '+' resolved as shift.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and '>' resolved as shift.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and '<' resolved as shift.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and '&' resolved as shift.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and '=' resolved as shift(right).
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and ">>" resolved as shift.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and "<<" resolved as shift.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and '|' resolved as shift.
	shift/reduce conflict with item {615} exp -> exp "*=" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {196} (exp)

<484>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp "/=" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {619} exp -> exp "/=" exp . and "less" resolved as shift.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and "with" resolved as shift.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and "--" resolved as shift.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and "++" resolved as shift.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and "!=" resolved as shift.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and "==" resolved as shift.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and "<=" resolved as shift.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and ">=" resolved as shift.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and "%=" resolved as shift(right).
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and "/=" resolved as shift(right).
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and "*=" resolved as shift(right).
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and "-=" resolved as shift(right).
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and "+=" resolved as shift(right).
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and '^' resolved as shift.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and ":=" resolved as shift(right).
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and '%' resolved as shift.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and '/' resolved as shift.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and '-' resolved as shift.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and '+' resolved as shift.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and '>' resolved as shift.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and '<' resolved as shift.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and '&' resolved as shift.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and '=' resolved as shift(right).
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and ">>" resolved as shift.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and "<<" resolved as shift.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and '|' resolved as shift.
	shift/reduce conflict with item {619} exp -> exp "/=" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {197} (exp)

<485>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp "%=" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {623} exp -> exp "%=" exp . and "less" resolved as shift.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and "with" resolved as shift.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and "--" resolved as shift.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and "++" resolved as shift.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and "!=" resolved as shift.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and "==" resolved as shift.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and "<=" resolved as shift.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and ">=" resolved as shift.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and "%=" resolved as shift(right).
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and "/=" resolved as shift(right).
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and "*=" resolved as shift(right).
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and "-=" resolved as shift(right).
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and "+=" resolved as shift(right).
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and '^' resolved as shift.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and ":=" resolved as shift(right).
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and '%' resolved as shift.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and '/' resolved as shift.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and '-' resolved as shift.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and '+' resolved as shift.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and '>' resolved as shift.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and '<' resolved as shift.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and '&' resolved as shift.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and '=' resolved as shift(right).
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and ">>" resolved as shift.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and "<<" resolved as shift.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and '|' resolved as shift.
	shift/reduce conflict with item {623} exp -> exp "%=" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {198} (exp)

<486>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp "&=" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {627} exp -> exp "&=" exp . and "less" resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and "with" resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and "--" resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and "++" resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and ">>=" resolved as shift(right).
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and "<<=" resolved as shift(right).
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and "!=" resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and "==" resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and "<=" resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and ">=" resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and "^=" resolved as shift(right).
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and "|=" resolved as shift(right).
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and "&=" resolved as shift(right).
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and "%=" resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and "/=" resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and "*=" resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and "-=" resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and "+=" resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and '^' resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and ":=" resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and '%' resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and '/' resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and '-' resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and '+' resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and '>' resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and '<' resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and '&' resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and '=' resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and ">>" resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and "<<" resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and '|' resolved as shift.
	shift/reduce conflict with item {627} exp -> exp "&=" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {199} (exp)

<487>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp "|=" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {631} exp -> exp "|=" exp . and "less" resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and "with" resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and "--" resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and "++" resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and ">>=" resolved as shift(right).
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and "<<=" resolved as shift(right).
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and "!=" resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and "==" resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and "<=" resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and ">=" resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and "^=" resolved as shift(right).
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and "|=" resolved as shift(right).
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and "&=" resolved as shift(right).
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and "%=" resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and "/=" resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and "*=" resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and "-=" resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and "+=" resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and '^' resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and ":=" resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and '%' resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and '/' resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and '-' resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and '+' resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and '>' resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and '<' resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and '&' resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and '=' resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and ">>" resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and "<<" resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and '|' resolved as shift.
	shift/reduce conflict with item {631} exp -> exp "|=" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {200} (exp)

<488>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp "^=" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {635} exp -> exp "^=" exp . and "less" resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and "with" resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and "--" resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and "++" resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and ">>=" resolved as shift(right).
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and "<<=" resolved as shift(right).
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and "!=" resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and "==" resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and "<=" resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and ">=" resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and "^=" resolved as shift(right).
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and "|=" resolved as shift(right).
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and "&=" resolved as shift(right).
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and "%=" resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and "/=" resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and "*=" resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and "-=" resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and "+=" resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and '^' resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and ":=" resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and '%' resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and '/' resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and '-' resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and '+' resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and '>' resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and '<' resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and '&' resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and '=' resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and ">>" resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and "<<" resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and '|' resolved as shift.
	shift/reduce conflict with item {635} exp -> exp "^=" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {201} (exp)

<489>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp ">=" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {639} exp -> exp ">=" exp . and "less" resolved as shift.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and "with" resolved as shift.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and "--" resolved as shift.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and "++" resolved as shift.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and "==" resolved as reduce.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and "<=" resolved as reduce(left).
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and ">=" resolved as reduce(left).
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and '^' resolved as reduce.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and '%' resolved as shift.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and '/' resolved as shift.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and '-' resolved as shift.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and '+' resolved as shift.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and '>' resolved as reduce(left).
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and '<' resolved as reduce(left).
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and '&' resolved as reduce.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and '=' resolved as reduce.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and ">>" resolved as shift.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and "<<" resolved as shift.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and '|' resolved as reduce.
	shift/reduce conflict with item {639} exp -> exp ">=" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {202} (exp)

<490>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp "<=" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {643} exp -> exp "<=" exp . and "less" resolved as shift.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and "with" resolved as shift.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and "--" resolved as shift.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and "++" resolved as shift.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and "==" resolved as reduce.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and "<=" resolved as reduce(left).
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and ">=" resolved as reduce(left).
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and '^' resolved as reduce.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and '%' resolved as shift.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and '/' resolved as shift.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and '-' resolved as shift.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and '+' resolved as shift.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and '>' resolved as reduce(left).
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and '<' resolved as reduce(left).
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and '&' resolved as reduce.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and '=' resolved as reduce.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and ">>" resolved as shift.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and "<<" resolved as shift.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and '|' resolved as reduce.
	shift/reduce conflict with item {643} exp -> exp "<=" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {203} (exp)

<491>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp "==" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {647} exp -> exp "==" exp . and "less" resolved as shift.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and "with" resolved as shift.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and "--" resolved as shift.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and "++" resolved as shift.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and "!=" resolved as reduce(left).
	shift/reduce conflict with item {647} exp -> exp "==" exp . and "==" resolved as reduce(left).
	shift/reduce conflict with item {647} exp -> exp "==" exp . and "<=" resolved as shift.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and ">=" resolved as shift.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and '^' resolved as reduce.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and '%' resolved as shift.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and '/' resolved as shift.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and '-' resolved as shift.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and '+' resolved as shift.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and '>' resolved as shift.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and '<' resolved as shift.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and '&' resolved as reduce.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and '=' resolved as reduce.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and ">>" resolved as shift.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and "<<" resolved as shift.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and '|' resolved as reduce.
	shift/reduce conflict with item {647} exp -> exp "==" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {204} (exp)

<492>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp "!=" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {651} exp -> exp "!=" exp . and "less" resolved as shift.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and "with" resolved as shift.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and "--" resolved as shift.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and "++" resolved as shift.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and "!=" resolved as reduce(left).
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and "==" resolved as reduce(left).
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and "<=" resolved as shift.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and ">=" resolved as shift.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and '^' resolved as reduce.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and '%' resolved as shift.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and '/' resolved as shift.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and '-' resolved as shift.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and '+' resolved as shift.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and '>' resolved as shift.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and '<' resolved as shift.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and '&' resolved as reduce.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and '=' resolved as reduce.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and ">>" resolved as shift.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and "<<" resolved as shift.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and '|' resolved as reduce.
	shift/reduce conflict with item {651} exp -> exp "!=" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {205} (exp)

<493>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp "<<=" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and "less" resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and "with" resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and "--" resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and "++" resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and ">>=" resolved as shift(right).
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and "<<=" resolved as shift(right).
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and "!=" resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and "==" resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and "<=" resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and ">=" resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and "^=" resolved as shift(right).
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and "|=" resolved as shift(right).
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and "&=" resolved as shift(right).
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and "%=" resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and "/=" resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and "*=" resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and "-=" resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and "+=" resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and '^' resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and ":=" resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and '%' resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and '/' resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and '-' resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and '+' resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and '>' resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and '<' resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and '&' resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and '=' resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and ">>" resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and "<<" resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and '|' resolved as shift.
	shift/reduce conflict with item {671} exp -> exp "<<=" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {210} (exp)

<494>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp ">>=" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and "less" resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and "with" resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and "--" resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and "++" resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and ">>=" resolved as shift(right).
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and "<<=" resolved as shift(right).
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and "!=" resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and "==" resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and "<=" resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and ">=" resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and "^=" resolved as shift(right).
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and "|=" resolved as shift(right).
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and "&=" resolved as shift(right).
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and "%=" resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and "/=" resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and "*=" resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and "-=" resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and "+=" resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and '^' resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and ":=" resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and '%' resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and '/' resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and '-' resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and '+' resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and '>' resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and '<' resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and '&' resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and '=' resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and ">>" resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and "<<" resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and '|' resolved as shift.
	shift/reduce conflict with item {675} exp -> exp ">>=" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {211} (exp)

<495>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp '?' exp . ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	             ':'	shift, and goto state <694>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>

<496>	setl_exp	->	exp "with" ":=" . exp 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <695>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<497>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp "with" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and "less" resolved as reduce(left).
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and "with" resolved as reduce(left).
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and "--" resolved as shift.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and "++" resolved as shift.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and "==" resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and "<=" resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and ">=" resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and '^' resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and '%' resolved as shift.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and '/' resolved as shift.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and '-' resolved as reduce(left).
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and '+' resolved as reduce(left).
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and '>' resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and '<' resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and '&' resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and '=' resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and ">>" resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and "<<" resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and '|' resolved as reduce.
	shift/reduce conflict with item {2214} setl_exp -> exp "with" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	       <default>	reduce using rule {672} (setl_exp)

<498>	setl_exp	->	exp "less" ":=" . exp 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <696>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<499>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp "less" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and "less" resolved as reduce(left).
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and "with" resolved as reduce(left).
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and "--" resolved as shift.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and "++" resolved as shift.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and "!=" resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and "==" resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and "<=" resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and ">=" resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and '^' resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and '%' resolved as shift.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and '/' resolved as shift.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and '-' resolved as reduce(left).
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and '+' resolved as reduce(left).
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and '>' resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and '<' resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and '&' resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and '=' resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and ">>" resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and "<<" resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and '|' resolved as reduce.
	shift/reduce conflict with item {2218} setl_exp -> exp "less" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	       <default>	reduce using rule {673} (setl_exp)

<500>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	simple_exp	->	simple_exp '[' exp . ']' 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	             ']'	shift, and goto state <697>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>

<501>	simple_exp	->	simple_exp "->" '#' . integer 

	         INT_TOK	shift, and goto state <96>
	         integer	goto state <698>

<502>	simple_exp	->	simple_exp "->" id . 

	       <default>	reduce using rule {241} (simple_exp)

<503>	simple_exp	->	simple_exp '.' '#' . integer 

	         INT_TOK	shift, and goto state <96>
	         integer	goto state <699>

<504>	simple_exp	->	simple_exp '.' id . 

	       <default>	reduce using rule {238} (simple_exp)

<505>	lab_exp	->	id . '=' exp 

	             '='	shift, and goto state <700>

<506>	lab_exp_list	->	lab_exp . 	{ '}' }
	lab_exp_list2	->	lab_exp . ',' lab_exp 
	lab_exp_list2	->	lab_exp . ',' lab_exp_list2 

	             ','	shift, and goto state <701>
	       <default>	reduce using rule {268} (lab_exp_list)

<507>	simple_exp	->	tick '{' lab_exp_list . '}' 

	             '}'	shift, and goto state <702>

<508>	lab_exp_list	->	lab_exp_list2 . 

	       <default>	reduce using rule {269} (lab_exp_list)

<509>	type_defs	->	type_def and_or_bar type_defs . 

	       <default>	reduce using rule {427} (type_defs)

<510>	type_def	->	sharing_opt id tyvars . '=' ty 

	             '='	shift, and goto state <703>

<511>	simple_ty1	->	'(' ty ')' . 

	       <default>	reduce using rule {156} (simple_ty1)

<512>	simple_ty1	->	'(' ty_list2 ')' . 

	       <default>	reduce using rule {157} (simple_ty1)

<513>	lab_ty	->	id ':' . ty 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <704>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<514>	lab_ty_list2	->	lab_ty ',' . lab_ty 
	lab_ty_list2	->	lab_ty ',' . lab_ty_list2 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <321>
	          lab_ty	goto state <705>
	    lab_ty_list2	goto state <706>

<515>	labeled_ty	->	'{' lab_ty_list '}' . 

	       <default>	reduce using rule {162} (labeled_ty)

<516>	simple_ty1	->	".[" ty_list2 ']' . 

	       <default>	reduce using rule {158} (simple_ty1)

<517>	setl_ty	->	"listof" '<' ty . '>' 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	             '>'	shift, and goto state <707>

<518>	setl_ty	->	"tupleof" '<' ty_list2 . '>' 

	             '>'	shift, and goto state <708>

<519>	setl_ty	->	"setof" '<' ty . '>' 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	             '>'	shift, and goto state <709>

<520>	setl_ty	->	"bagof" '<' ty . '>' 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	             '>'	shift, and goto state <710>

<521>	setl_ty	->	"mapof" '<' ty . ',' ty '>' 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             ','	shift, and goto state <711>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>

<522>	setl_ty	->	"multimapof" '<' ty . ',' ty '>' 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             ','	shift, and goto state <712>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>

<523>	setl_ty	->	"queueof" '<' ty . '>' 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	             '>'	shift, and goto state <713>

<524>	setl_ty	->	"priqueueof" '<' ty . '>' 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	             '>'	shift, and goto state <714>

<525>	setl_ty	->	"dequeof" '<' ty . '>' 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	             '>'	shift, and goto state <715>

<526>	id_ty	->	id '<' ty_list . '>' 

	             '>'	shift, and goto state <716>

<527>	ty	->	ty '[' ']' . 

	       <default>	reduce using rule {140} (ty)

<528>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 
	ty	->	ty '[' exp . ']' 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	             ']'	shift, and goto state <717>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>

<529>	ty_list2	->	ty . ',' ty 
	ty_list2	->	ty ',' ty . 	{ "law" "with" "private" "protected" "public" "and" ';' '>' "type" ':' ')' ']' '!' "=>" '|' "where" "if" }
	ty_list2	->	ty . ',' ty_list2 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             ','	shift, and goto state <342>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	       <default>	reduce using rule {174} (ty_list2)

<530>	ty_list2	->	ty ',' ty_list2 . 

	       <default>	reduce using rule {175} (ty_list2)

<531>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 
	ty	->	ty '=' exp . 	{ "edges:" "equality:" "hash:" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" "and" ';' ":=" '>' '&' "type" '=' ',' ':' "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" '|' "where" "if" '*' }

	shift/reduce conflict with item {418} ty -> ty '=' exp . and "with" resolved as shift.
	shift/reduce conflict with item {418} ty -> ty '=' exp . and ":=" resolved as shift(right).
	shift/reduce conflict with item {418} ty -> ty '=' exp . and '>' resolved as shift.
	shift/reduce conflict with item {418} ty -> ty '=' exp . and '&' resolved as shift.
	shift/reduce conflict with item {418} ty -> ty '=' exp . and '=' resolved as shift(right).
	shift/reduce conflict with item {418} ty -> ty '=' exp . and '|' resolved as shift.
	shift/reduce conflict with item {418} ty -> ty '=' exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {136} (ty)

<532>	qualified_ty	->	qualified_ty "::" id_ty . 

	       <default>	reduce using rule {164} (qualified_ty)

<533>	stmt	->	"if" exp "then" . stmt_list else_clause ';' 
	tick	->	. 	{ '{' }

	       "rewrite"	shift, and goto state <6>
	         "match"	shift, and goto state <10>
	             '*'	shift, and goto state <90>
	      "matchall"	shift, and goto state <11>
	     "matchscan"	shift, and goto state <12>
	            "if"	shift, and goto state <169>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "while"	shift, and goto state <170>
	        "return"	shift, and goto state <171>
	         "begin"	shift, and goto state <25>
	    "cutrewrite"	shift, and goto state <33>
	   "failrewrite"	shift, and goto state <34>
	        "forall"	shift, and goto state <172>
	       "declare"	shift, and goto state <40>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	        rewrite_	goto state <173>
	match_or_matchall	goto state <47>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <174>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	      match_decl	goto state <175>
	  rewriting_decl	goto state <176>
	replacement_decl	goto state <177>
	            stmt	goto state <178>
	       stmt_list	goto state <718>
	   compound_stmt	goto state <180>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<534>	stmt	->	"while" exp "loop" . stmt_list "end" "loop" ';' 
	tick	->	. 	{ '{' }

	       "rewrite"	shift, and goto state <6>
	         "match"	shift, and goto state <10>
	             '*'	shift, and goto state <90>
	      "matchall"	shift, and goto state <11>
	     "matchscan"	shift, and goto state <12>
	            "if"	shift, and goto state <169>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "while"	shift, and goto state <170>
	        "return"	shift, and goto state <171>
	         "begin"	shift, and goto state <25>
	    "cutrewrite"	shift, and goto state <33>
	   "failrewrite"	shift, and goto state <34>
	        "forall"	shift, and goto state <172>
	       "declare"	shift, and goto state <40>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	        rewrite_	goto state <173>
	match_or_matchall	goto state <47>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <174>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	      match_decl	goto state <175>
	  rewriting_decl	goto state <176>
	replacement_decl	goto state <177>
	            stmt	goto state <178>
	       stmt_list	goto state <719>
	   compound_stmt	goto state <180>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<535>	stmt	->	"return" exp ';' . 

	       <default>	reduce using rule {645} (stmt)

<536>	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	logical_pat	->	'!' pat . 	{ "<-" '\\' "and" ';' ',' ':' "equiv:" "xor:" "implies:" "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' LONG_BAR '|' "where" "if" }
	logical_pat	->	pat . "&&" pat 

	shift/reduce conflict with item {156} logical_pat -> '!' pat . and "equiv:" resolved as reduce.
	shift/reduce conflict with item {156} logical_pat -> '!' pat . and "xor:" resolved as reduce.
	shift/reduce conflict with item {156} logical_pat -> '!' pat . and "implies:" resolved as reduce.
	shift/reduce conflict with item {156} logical_pat -> '!' pat . and "||" resolved as reduce.
	shift/reduce conflict with item {156} logical_pat -> '!' pat . and "&&" resolved as reduce.
	       <default>	reduce using rule {65} (logical_pat)

<537>	pat_list	->	. 	{ ']' }
	aggr_pat	->	'#' '[' . pat_list ']' 
	aggr_pat	->	'#' '[' . pat_list1 "..." pat ']' 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <540>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	       pat_list2	goto state <541>
	        pat_list	goto state <720>
	       pat_list1	goto state <721>
	         big_pat	goto state <544>
	       <default>	reduce using rule {120} (pat_list)

<538>	pat_list	->	. 	{ ')' }
	aggr_pat	->	'#' '(' . pat_list1 "..." pat ')' 
	aggr_pat	->	'#' '(' . pat_list ')' 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <540>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	       pat_list2	goto state <541>
	        pat_list	goto state <722>
	       pat_list1	goto state <723>
	         big_pat	goto state <544>
	       <default>	reduce using rule {120} (pat_list)

<539>	pat_list	->	. 	{ '}' }
	aggr_pat	->	'#' '{' . pat_list '}' 
	aggr_pat	->	'#' '{' . pat_list1 "..." pat '}' 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <540>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	       pat_list2	goto state <541>
	        pat_list	goto state <724>
	       pat_list1	goto state <725>
	         big_pat	goto state <544>
	       <default>	reduce using rule {120} (pat_list)

<540>	big_pat	->	pat . ':' ty 
	big_pat	->	pat . 	{ ',' "|}" "|)" "|]" "..." '}' ')' ']' }
	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	logical_pat	->	pat . "&&" pat 

	            "&&"	shift, and goto state <573>
	            "||"	shift, and goto state <574>
	      "implies:"	shift, and goto state <575>
	          "xor:"	shift, and goto state <576>
	        "equiv:"	shift, and goto state <577>
	             ':'	shift, and goto state <726>
	       <default>	reduce using rule {124} (big_pat)

<541>	pat_list1	->	pat_list2 . 

	       <default>	reduce using rule {123} (pat_list1)

<542>	aggr_pat	->	'[' pat_list . ']' 
	aggr_pat	->	'[' pat_list . "..." ']' 

	             ']'	shift, and goto state <727>
	           "..."	shift, and goto state <728>

<543>	pat_list	->	pat_list1 . 

	       <default>	reduce using rule {121} (pat_list)

<544>	pat_list2	->	big_pat . ',' big_pat 
	pat_list2	->	big_pat . ',' pat_list2 
	pat_list1	->	big_pat . 	{ "|}" "|)" "|]" "..." '}' ')' ']' }

	             ','	shift, and goto state <729>
	       <default>	reduce using rule {122} (pat_list1)

<545>	prim_pat	->	'(' ')' . 

	       <default>	reduce using rule {79} (prim_pat)

<546>	big_pat	->	pat . ':' ty 
	big_pat	->	pat . 	{ ',' }
	prim_pat	->	'(' pat . ')' 
	prim_pat	->	'(' pat . ':' ty ')' 
	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	logical_pat	->	pat . "&&" pat 

	             ')'	shift, and goto state <730>
	            "&&"	shift, and goto state <573>
	            "||"	shift, and goto state <574>
	      "implies:"	shift, and goto state <575>
	          "xor:"	shift, and goto state <576>
	        "equiv:"	shift, and goto state <577>
	             ':'	shift, and goto state <731>
	       <default>	reduce using rule {124} (big_pat)

<547>	prim_pat	->	'(' pat_list2 . ')' 

	             ')'	shift, and goto state <732>

<548>	pat_list2	->	big_pat . ',' big_pat 
	pat_list2	->	big_pat . ',' pat_list2 

	             ','	shift, and goto state <729>

<549>	lab_pat	->	id . '=' pat 
	lab_pat	->	id . 	{ ',' "..." '}' }

	             '='	shift, and goto state <733>
	       <default>	reduce using rule {117} (lab_pat)

<550>	lab_pat_list1	->	lab_pat . 	{ "..." '}' }
	lab_pat_list1	->	lab_pat . ',' lab_pat_list1 

	             ','	shift, and goto state <734>
	       <default>	reduce using rule {130} (lab_pat_list1)

<551>	prim_pat	->	'{' lab_pat_list . '}' 
	prim_pat	->	'{' lab_pat_list . "..." '}' 

	             '}'	shift, and goto state <735>
	           "..."	shift, and goto state <736>

<552>	lab_pat_list	->	lab_pat_list1 . 

	       <default>	reduce using rule {129} (lab_pat_list)

<553>	aggr_pat	->	"[|" '|' . pat pat_opt '|' dots_opt pat_list1 dots_opt "|]" 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <737>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>

<554>	dots_opt	->	"..." . 

	       <default>	reduce using rule {113} (dots_opt)

<555>	aggr_pat	->	"[|" "|]" . 

	       <default>	reduce using rule {102} (aggr_pat)

<556>	aggr_pat	->	"[|" dots_opt . pat_list1 dots_opt "|]" 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <540>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	       pat_list2	goto state <541>
	       pat_list1	goto state <738>
	         big_pat	goto state <544>

<557>	aggr_pat	->	"(|" '|' . pat pat_opt '|' dots_opt pat_list1 dots_opt "|)" 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <739>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>

<558>	aggr_pat	->	"(|" "|)" . 

	       <default>	reduce using rule {103} (aggr_pat)

<559>	aggr_pat	->	"(|" dots_opt . pat_list1 dots_opt "|)" 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <540>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	       pat_list2	goto state <541>
	       pat_list1	goto state <740>
	         big_pat	goto state <544>

<560>	aggr_pat	->	"{|" '|' . pat pat_opt '|' dots_opt pat_list1 dots_opt "|}" 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <741>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>

<561>	aggr_pat	->	"{|" "|}" . 

	       <default>	reduce using rule {104} (aggr_pat)

<562>	aggr_pat	->	"{|" dots_opt . pat_list1 dots_opt "|}" 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <540>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	       pat_list2	goto state <541>
	       pat_list1	goto state <742>
	         big_pat	goto state <544>

<563>	cons_list	->	cons . 	{ ">>" }
	cons_list	->	cons . ',' cons_list 

	             ','	shift, and goto state <743>
	       <default>	reduce using rule {92} (cons_list)

<564>	prim_pat	->	"<<" cons_list . ">>" pat 

	            ">>"	shift, and goto state <744>

<565>	aggr_pat	->	".(" pat_list2 . ')' 

	             ')'	shift, and goto state <745>

<566>	string_pat	->	lexeme_ "class" . id 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <746>

<567>	prim_pat	->	id "as" . pat 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <747>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>

<568>	prim_pat	->	id simple_pat . 

	       <default>	reduce using rule {88} (prim_pat)

<569>	prim_pat	->	cons simple_pat . 

	       <default>	reduce using rule {86} (prim_pat)

<570>	where_or_if	->	"if" . 

	       <default>	reduce using rule {18} (where_or_if)

<571>	where_or_if	->	"where" . 

	       <default>	reduce using rule {19} (where_or_if)

<572>	where_or_if	->	'|' . 

	       <default>	reduce using rule {20} (where_or_if)

<573>	logical_pat	->	pat "&&" . pat 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <748>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>

<574>	logical_pat	->	pat "||" . pat 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <749>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>

<575>	logical_pat	->	pat "implies:" . pat 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <750>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>

<576>	logical_pat	->	pat "xor:" . pat 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <751>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>

<577>	logical_pat	->	pat "equiv:" . pat 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <752>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>

<578>	guard_exp	->	where_or_if . exp 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <753>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<579>	generator	->	pat guard_exp . "<-" exp 

	            "<-"	shift, and goto state <754>

<580>	stmt	->	"forall" generator_list "loop" . stmt_list "end" "loop" ';' 
	tick	->	. 	{ '{' }

	       "rewrite"	shift, and goto state <6>
	         "match"	shift, and goto state <10>
	             '*'	shift, and goto state <90>
	      "matchall"	shift, and goto state <11>
	     "matchscan"	shift, and goto state <12>
	            "if"	shift, and goto state <169>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "while"	shift, and goto state <170>
	        "return"	shift, and goto state <171>
	         "begin"	shift, and goto state <25>
	    "cutrewrite"	shift, and goto state <33>
	   "failrewrite"	shift, and goto state <34>
	        "forall"	shift, and goto state <172>
	       "declare"	shift, and goto state <40>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	        rewrite_	goto state <173>
	match_or_matchall	goto state <47>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <174>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	      match_decl	goto state <175>
	  rewriting_decl	goto state <176>
	replacement_decl	goto state <177>
	            stmt	goto state <178>
	       stmt_list	goto state <755>
	   compound_stmt	goto state <180>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<581>	generator_list	->	generator ',' . generator_list 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <369>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	  generator_list	goto state <756>
	       generator	goto state <376>

<582>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	stmt	->	exp ":=" exp . ';' 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp ":=" exp . 	{ "less" "with" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' '=' ">>" "<<" "||" "&&" '|' '*' }
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "less" resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "with" resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and ';' resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "--" resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "++" resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "!=" resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "==" resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "<=" resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and ">=" resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "%=" resolved as shift(right).
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "/=" resolved as shift(right).
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "*=" resolved as shift(right).
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "-=" resolved as shift(right).
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "+=" resolved as shift(right).
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '^' resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and ":=" resolved as shift(right).
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '%' resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '/' resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '-' resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '+' resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '>' resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '<' resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '&' resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '=' resolved as shift(right).
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and ">>" resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "<<" resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '|' resolved as shift.
	shift/reduce conflict with item {583} exp -> exp ":=" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             ';'	shift, and goto state <757>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {188} (exp)

<583>	compound_stmt	->	"begin" stmt_list "end" ';' . 

	       <default>	reduce using rule {655} (compound_stmt)

<584>	var	->	id . 

	       <default>	reduce using rule {368} (var)

<585>	var_list	->	var . 	{ '>' '=' ')' '|' "where" "if" }
	var_list	->	var . ',' var_list 

	             ','	shift, and goto state <758>
	       <default>	reduce using rule {371} (var_list)

<586>	tyvars	->	'<' var_list . '>' 

	             '>'	shift, and goto state <759>

<587>	qualifiers_opt	->	. 	{ "law" "and" ';' "type" '=' "where" }
	datatype_def	->	id tyvars inherit_list_opt . qualifiers_opt 
	datatype_def	->	id tyvars inherit_list_opt . qualifiers_opt '=' <464> switch_exp terms <465> datatype_body 

	             '!'	shift, and goto state <634>
	            "::"	shift, and goto state <635>
	  qualifiers_opt	goto state <760>
	       <default>	reduce using rule {482} (qualifiers_opt)

<588>	view_defs_opt	->	"type" "view" . id view_defs 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <761>

<589>	invertible	->	. 	{ ID_TOK }
	law_defs_opt	->	"law" . law_defs 

	        "inline"	shift, and goto state <762>
	        law_defs	goto state <763>
	         law_def	goto state <764>
	      invertible	goto state <765>
	       <default>	reduce using rule {449} (invertible)

<590>	ty_defs_opt	->	. 	{ ';' }
	datatype_decl	->	"datatype" datatype_defs0 view_defs_opt law_defs_opt . ty_defs_opt ';' 

	         "where"	shift, and goto state <766>
	     ty_defs_opt	goto state <767>
	       <default>	reduce using rule {423} (ty_defs_opt)

<591>	datatype_defs	->	datatype_def "and" datatype_defs . 

	       <default>	reduce using rule {359} (datatype_defs)

<592>	complex_cons	->	'#' '[' ']' . 

	       <default>	reduce using rule {44} (complex_cons)

<593>	complex_cons	->	'#' '[' "..." . ']' 

	             ']'	shift, and goto state <768>

<594>	complex_cons	->	'#' '(' ')' . 

	       <default>	reduce using rule {45} (complex_cons)

<595>	complex_cons	->	'#' '(' "..." . ')' 

	             ')'	shift, and goto state <769>

<596>	complex_cons	->	'#' '{' '}' . 

	       <default>	reduce using rule {46} (complex_cons)

<597>	complex_cons	->	'#' '{' "..." . '}' 

	             '}'	shift, and goto state <770>

<598>	complex_cons	->	"[|" "..." "|]" . 

	       <default>	reduce using rule {50} (complex_cons)

<599>	complex_cons	->	"(|" "..." "|)" . 

	       <default>	reduce using rule {51} (complex_cons)

<600>	complex_cons	->	"{|" "..." "|}" . 

	       <default>	reduce using rule {52} (complex_cons)

<601>	refine_def	->	"class" id_or_cons "::" . id_or_cons '(' ')' brace_body 
	refine_def	->	"class" id_or_cons "::" . '~' id_or_cons '(' ')' brace_body 

	             '~'	shift, and goto state <771>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <772>

<602>	persistent_decl	->	id ty_args . "=>" pid 

	            "=>"	shift, and goto state <773>

<603>	persistent_decls	->	persistent_decl '|' . persistent_decls 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <393>
	persistent_decls	goto state <774>
	 persistent_decl	goto state <395>

<604>	printing_decl	->	complex_cons ty_args . "=>" print_formats 

	            "=>"	shift, and goto state <775>

<605>	printing_decls	->	printing_decl '|' . printing_decls 

	        CONS_TOK	shift, and goto state <94>
	             '#'	shift, and goto state <191>
	            "[|"	shift, and goto state <192>
	            "(|"	shift, and goto state <193>
	            "{|"	shift, and goto state <194>
	            cons	goto state <199>
	    complex_cons	goto state <396>
	  printing_decls	goto state <776>
	   printing_decl	goto state <398>

<606>	ty_args	->	'<' ty_list . '>' 

	             '>'	shift, and goto state <777>

<607>	refine_defs	->	refine_def "and" refine_defs . 

	       <default>	reduce using rule {457} (refine_defs)

<608>	refine_ty_list	->	refine_ty ',' refine_ty_list . 

	       <default>	reduce using rule {466} (refine_ty_list)

<609>	traced_	->	"traced" . 

	       <default>	reduce using rule {7} (traced_)

<610>	collectable_	->	"collectable" . 

	       <default>	reduce using rule {8} (collectable_)

<611>	finalizable_	->	"finalizable" . 

	       <default>	reduce using rule {9} (finalizable_)

<612>	unifiable_	->	"unifiable" . 

	       <default>	reduce using rule {11} (unifiable_)

<613>	qualifier	->	"const" . 

	       <default>	reduce using rule {497} (qualifier)

<614>	qualifier	->	"view" . 

	       <default>	reduce using rule {500} (qualifier)

<615>	qualifier	->	"virtual" . 

	       <default>	reduce using rule {496} (qualifier)

<616>	qualifier	->	"inline" . 

	       <default>	reduce using rule {502} (qualifier)

<617>	qualifier	->	"relation" . 

	       <default>	reduce using rule {495} (qualifier)

<618>	qualifier	->	"applicative" . 

	       <default>	reduce using rule {498} (qualifier)

<619>	qualifier	->	"treeparser" . 

	       <default>	reduce using rule {499} (qualifier)

<620>	qualifier	->	"bitfield" . 

	       <default>	reduce using rule {501} (qualifier)

<621>	qualifier	->	"extern" . 

	       <default>	reduce using rule {503} (qualifier)

<622>	qualifier	->	rewrite_ . 

	       <default>	reduce using rule {491} (qualifier)

<623>	qualifier	->	lexeme_ . 

	       <default>	reduce using rule {489} (qualifier)

<624>	qualifier	->	persistent_ . 

	       <default>	reduce using rule {492} (qualifier)

<625>	qualifier	->	traced_ . 

	       <default>	reduce using rule {493} (qualifier)

<626>	qualifier	->	collectable_ . 

	       <default>	reduce using rule {488} (qualifier)

<627>	qualifier	->	finalizable_ . 

	       <default>	reduce using rule {490} (qualifier)

<628>	qualifier	->	printable_ . 

	       <default>	reduce using rule {487} (qualifier)

<629>	qualifier	->	unifiable_ . 

	       <default>	reduce using rule {494} (qualifier)

<630>	inherit_list_opt	->	':' inherit_list . 

	       <default>	reduce using rule {478} (inherit_list_opt)

<631>	inherit_list	->	inherit . 	{ "law" "with" "private" "protected" "public" "and" ';' "::" "type" '=' '{' '(' '!' "=>" '|' "where" "if" }
	inherit_list	->	inherit . ',' inherit_list 

	             ','	shift, and goto state <778>
	       <default>	reduce using rule {479} (inherit_list)

<632>	inherit	->	qualifiers . scope_opt inherit_ty 
	scope_opt	->	. 	{ ID_TOK }

	        "public"	shift, and goto state <779>
	     "protected"	shift, and goto state <780>
	       "private"	shift, and goto state <781>
	           scope	goto state <782>
	       scope_opt	goto state <783>
	       <default>	reduce using rule {317} (scope_opt)

<633>	qualifiers	->	. 	{ "law" "private" "protected" "public" "and" ';' "of" "type" '=' '{' '(' ID_TOK "where" }
	qualifiers	->	qualifier . qualifiers 

	       "rewrite"	shift, and goto state <6>
	        "lexeme"	shift, and goto state <8>
	    "persistent"	shift, and goto state <189>
	        "traced"	shift, and goto state <609>
	   "collectable"	shift, and goto state <610>
	   "finalizable"	shift, and goto state <611>
	     "printable"	shift, and goto state <190>
	     "unifiable"	shift, and goto state <612>
	         "const"	shift, and goto state <613>
	          "view"	shift, and goto state <614>
	       "virtual"	shift, and goto state <615>
	        "inline"	shift, and goto state <616>
	      "relation"	shift, and goto state <617>
	   "applicative"	shift, and goto state <618>
	    "treeparser"	shift, and goto state <619>
	      "bitfield"	shift, and goto state <620>
	        "extern"	shift, and goto state <621>
	        rewrite_	goto state <622>
	         lexeme_	goto state <623>
	     persistent_	goto state <624>
	         traced_	goto state <625>
	    collectable_	goto state <626>
	    finalizable_	goto state <627>
	      printable_	goto state <628>
	      unifiable_	goto state <629>
	      qualifiers	goto state <784>
	       qualifier	goto state <633>
	       <default>	reduce using rule {485} (qualifiers)

<634>	qualifiers_opt	->	. 	{ "law" "and" ';' "of" "type" '=' '{' '(' "where" }
	qualifiers_opt	->	'!' . qualifiers_opt 

	             '!'	shift, and goto state <634>
	            "::"	shift, and goto state <635>
	  qualifiers_opt	goto state <785>
	       <default>	reduce using rule {482} (qualifiers_opt)

<635>	qualifiers_opt	->	"::" . qualifiers 
	qualifiers	->	. 	{ "law" "and" ';' "of" "type" '=' '{' '(' "where" }

	       "rewrite"	shift, and goto state <6>
	        "lexeme"	shift, and goto state <8>
	    "persistent"	shift, and goto state <189>
	        "traced"	shift, and goto state <609>
	   "collectable"	shift, and goto state <610>
	   "finalizable"	shift, and goto state <611>
	     "printable"	shift, and goto state <190>
	     "unifiable"	shift, and goto state <612>
	         "const"	shift, and goto state <613>
	          "view"	shift, and goto state <614>
	       "virtual"	shift, and goto state <615>
	        "inline"	shift, and goto state <616>
	      "relation"	shift, and goto state <617>
	   "applicative"	shift, and goto state <618>
	    "treeparser"	shift, and goto state <619>
	      "bitfield"	shift, and goto state <620>
	        "extern"	shift, and goto state <621>
	        rewrite_	goto state <622>
	         lexeme_	goto state <623>
	     persistent_	goto state <624>
	         traced_	goto state <625>
	    collectable_	goto state <626>
	    finalizable_	goto state <627>
	      printable_	goto state <628>
	      unifiable_	goto state <629>
	      qualifiers	goto state <786>
	       qualifier	goto state <633>
	       <default>	reduce using rule {485} (qualifiers)

<636>	refine_def	->	refine_ty_list inherit_list_opt qualifiers_opt . brace_body_opt 
	brace_body_opt	->	. 	{ "and" ';' }

	             '{'	shift, and goto state <638>
	      brace_body	goto state <639>
	  brace_body_opt	goto state <787>
	       <default>	reduce using rule {312} (brace_body_opt)

<637>	refine_cons_list	->	refine_cons ',' refine_cons_list . 

	       <default>	reduce using rule {469} (refine_cons_list)

<638>	<459>	->	. 	{ "graphrewrite" "graphtype" "declare" "signature" "module" "procedure" "function" "fun" "failrewrite" "cutrewrite" "attributegrammar" "instantiate" "refine" "datatype" ? "classof" ATTRIB_ID "begin" ".[" "type" ".(" "{|" "(|" "[|" '}' '#' META_QUOTE BIGINT_TOK QUARK_TOK CONS_EXP POLY_DATATYPE "matchscan" "matchall" "match" "inference" "lexeme" "syntax" "rewrite" }
	brace_body	->	'{' . <459> decl_list <460> '}' 

	           <459>	goto state <788>
	       <default>	reduce using rule {755} (<459>)

<639>	brace_body_opt	->	brace_body . 

	       <default>	reduce using rule {313} (brace_body_opt)

<640>	refine_def	->	refine_cons_list inherit_list_opt brace_body_opt . 

	       <default>	reduce using rule {459} (refine_def)

<641>	instantiate_decl	->	"instantiate" extern_opt "datatype" ty_list . ';' 

	             ';'	shift, and goto state <789>

<642>	attribgram_class_decl	->	"attributegrammar" "class" id inherit_list_opt . qualifiers_opt brace_body ';' 
	qualifiers_opt	->	. 	{ '{' }

	             '!'	shift, and goto state <634>
	            "::"	shift, and goto state <635>
	  qualifiers_opt	goto state <790>
	       <default>	reduce using rule {482} (qualifiers_opt)

<643>	attribgram_decl	->	"attributegrammar" id <472> '{' . prec_rules expect_ <473> bnf_rules '}' ';' 
	prec_rules	->	. 	{ "expect:" '}' ID_TOK }

	         "left:"	shift, and goto state <791>
	        "right:"	shift, and goto state <792>
	      prec_rules	goto state <793>
	       prec_rule	goto state <794>
	       <default>	reduce using rule {528} (prec_rules)

<644>	paren_exp	->	'(' exp ')' . 

	       <default>	reduce using rule {261} (paren_exp)

<645>	fun_rules_list	->	this_fun_rules "and" fun_rules_list . 

	       <default>	reduce using rule {598} (fun_rules_list)

<646>	fun_rule_head	->	qual_id top_pat . 

	       <default>	reduce using rule {602} (fun_rule_head)

<647>	top_pat_list2	->	pat . ',' pat 
	top_pat_list2	->	pat . ',' top_pat_list2 
	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	top_pat	->	pat . 	{ '\\' ':' '|' "where" "if" }
	logical_pat	->	pat . "&&" pat 

	            "&&"	shift, and goto state <573>
	            "||"	shift, and goto state <574>
	      "implies:"	shift, and goto state <575>
	          "xor:"	shift, and goto state <576>
	        "equiv:"	shift, and goto state <577>
	             ','	shift, and goto state <795>
	       <default>	reduce using rule {61} (top_pat)

<648>	top_pat	->	top_pat_list2 . 

	       <default>	reduce using rule {62} (top_pat)

<649>	qual_id	->	id_ty "::" . qual_id 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <415>
	         qual_id	goto state <796>
	           id_ty	goto state <417>

<650>	fun_rule	->	fun_rule_head ':' . return_ty where_or_if exp ':' fun_action 
	fun_rule	->	fun_rule_head ':' . return_ty ':' fun_action 
	fun_rule	->	fun_rule_head ':' . fun_action 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <638>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "return"	shift, and goto state <797>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	       return_ty	goto state <798>
	      simple_ty1	goto state <799>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	      return_exp	goto state <800>
	      brace_body	goto state <801>
	      fun_action	goto state <802>
	         setl_ty	goto state <168>

<651>	fun_rule	->	fun_rule_head where_or_if . exp ':' fun_action 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <803>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<652>	fun_rules	->	fun_rule '|' . fun_rules 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <415>
	         qual_id	goto state <416>
	           id_ty	goto state <417>
	       fun_rules	goto state <804>
	   fun_rule_head	goto state <419>
	        fun_rule	goto state <420>

<653>	fun_arg	->	id . ':' ty 

	             ':'	shift, and goto state <805>

<654>	function_def	->	"function" cons_or_string '(' fun_args . ')' "return" ty "is" defs "begin" stmt_list "end" ';' 

	             ')'	shift, and goto state <806>

<655>	fun_args	->	fun_args1 . 

	       <default>	reduce using rule {620} (fun_args)

<656>	fun_args1	->	fun_arg . 	{ ')' }
	fun_args1	->	fun_arg . ',' fun_args 

	             ','	shift, and goto state <807>
	       <default>	reduce using rule {621} (fun_args1)

<657>	function_def	->	"procedure" cons_or_string '(' fun_args . ')' "is" defs "begin" stmt_list "end" ';' 

	             ')'	shift, and goto state <808>

<658>	labeled_sig	->	id . ':' sig 

	             ':'	shift, and goto state <809>

<659>	module_args	->	'(' labeled_sigs . ')' 

	             ')'	shift, and goto state <810>

<660>	labeled_sigs	->	labeled_sig . 	{ ')' }
	labeled_sigs	->	labeled_sig . ',' labeled_sigs 

	             ','	shift, and goto state <811>
	       <default>	reduce using rule {627} (labeled_sigs)

<661>	module_sig	->	':' . sig 

	          ID_TOK	shift, and goto state <93>
	         "begin"	shift, and goto state <812>
	              id	goto state <813>
	             sig	goto state <814>

<662>	module_def	->	"module" cons_or_string module_args module_sig . "is" "begin" defs "end" ';' 

	            "is"	shift, and goto state <815>

<663>	signature_def	->	"signature" cons_or_string module_args "is" . sig ';' 

	          ID_TOK	shift, and goto state <93>
	         "begin"	shift, and goto state <812>
	              id	goto state <813>
	             sig	goto state <816>

<664>	def	->	id ':' ty . ":=" exp ';' 
	def	->	id ':' ty . ';' 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	            ":="	shift, and goto state <817>
	             ';'	shift, and goto state <818>

<665>	compound_stmt	->	"declare" defs "begin" stmt_list . "end" ';' 

	           "end"	shift, and goto state <819>

<666>	graph_class_decl	->	"graphtype" id inherit_list_opt qualifiers_opt . '(' <480> node_spec <481> edge_spec ')' brace_body ';' 

	             '('	shift, and goto state <820>

<667>	graph_rewrite_decl	->	"graphrewrite" id '(' fun_args . ')' '=' "begin" grs_sections "end" "graphrewrite" ';' 
	graph_rewrite_decl	->	"graphrewrite" id '(' fun_args . ')' '{' grs_sections '}' 

	             ')'	shift, and goto state <821>

<668>	rewrite_class_decl	->	rewrite_ "class" id '(' . protocols ')' inherit_list_opt qualifiers_opt brace_body ';' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <822>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	       protocols	goto state <823>
	        protocol	goto state <824>
	         setl_ty	goto state <168>

<669>	rewrite_indexings	->	. 	{ "postorder:" "preorder:" "before:" "bottomup:" "topdown:" ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '!' "lexeme" "case" }
	rewrite_decl	->	rewrite_ id <476> '{' . rewrite_indexings case_or_bar_rules '}' ';' 

	        "index:"	shift, and goto state <825>
	rewrite_indexings	goto state <826>
	       <default>	reduce using rule {579} (rewrite_indexings)

<670>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	opt_dest	->	"=>" exp . 	{ "type" }
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {585} (opt_dest)

<671>	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" . '(' protocols ')' qualifiers_opt <477> '{' rewrite_indexings case_or_bar_rules '}' 
	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" . '(' protocols ')' qualifiers_opt <478> "of" rewrite_indexings case_or_bar_rules "end" "rewrite" ';' 

	             '('	shift, and goto state <827>

<672>	syntax_class_decl	->	syntax_ "class" id inherit_list_opt . qualifiers_opt brace_body ';' 
	qualifiers_opt	->	. 	{ '{' }

	             '!'	shift, and goto state <634>
	            "::"	shift, and goto state <635>
	  qualifiers_opt	goto state <828>
	       <default>	reduce using rule {482} (qualifiers_opt)

<673>	syntax_decl	->	syntax_ id <470> '{' . prec_rules expect_ <471> bnf_rules '}' ';' 
	prec_rules	->	. 	{ "expect:" '}' ID_TOK }

	         "left:"	shift, and goto state <791>
	        "right:"	shift, and goto state <792>
	      prec_rules	goto state <829>
	       prec_rule	goto state <794>
	       <default>	reduce using rule {528} (prec_rules)

<674>	lexeme_class_rule	->	id '=' . terms 
	terms	->	. 	{ "and" ';' }

	        "lexeme"	shift, and goto state <8>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	             '#'	shift, and goto state <830>
	            "[|"	shift, and goto state <831>
	            "(|"	shift, and goto state <832>
	            "{|"	shift, and goto state <833>
	             '_'	shift, and goto state <834>
	          "view"	shift, and goto state <835>
	       "virtual"	shift, and goto state <836>
	         lexeme_	goto state <837>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <838>
	  cons_or_string	goto state <839>
	          string	goto state <840>
	           terms	goto state <841>
	          terms1	goto state <842>
	            term	goto state <843>
	     simple_term	goto state <844>
	    simple_term1	goto state <845>
	       <default>	reduce using rule {373} (terms)

<675>	lexeme_decl	->	lexeme_ "class" lexeme_class_rules ';' . 

	       <default>	reduce using rule {541} (lexeme_decl)

<676>	lexeme_class_rules	->	lexeme_class_rule "and" . lexeme_class_rules 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <437>
	lexeme_class_rules	goto state <846>
	lexeme_class_rule	goto state <439>

<677>	lexeme_rule	->	id '=' string_pat . 

	       <default>	reduce using rule {544} (lexeme_rule)

<678>	lexeme_rules	->	lexeme_rule and_or_bar lexeme_rules . 

	       <default>	reduce using rule {543} (lexeme_rules)

<679>	inference_class_decl	->	inference_ "class" id inherit_list_opt . qualifiers_opt brace_body ';' 
	qualifiers_opt	->	. 	{ '{' }

	             '!'	shift, and goto state <634>
	            "::"	shift, and goto state <635>
	  qualifiers_opt	goto state <847>
	       <default>	reduce using rule {482} (qualifiers_opt)

<680>	inference_decl	->	inference_ id '{' inference_rules . '}' ';' 

	             '}'	shift, and goto state <848>

<681>	<468>	->	. 	{ ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '!' '~' LONG_BAR "match" "lexeme" }
	inference_rules	->	. 	{ '}' }
	inference_rules	->	inference_rule . inference_rules 

	 inference_rules	goto state <849>
	  inference_rule	goto state <681>
	           <468>	goto state <682>
	        "lexeme"	reduce using rule {764} (<468>)
	         "match"	reduce using rule {764} (<468>)
	        LONG_BAR	reduce using rule {764} (<468>)
	             '~'	reduce using rule {764} (<468>)
	             '!'	reduce using rule {764} (<468>)
	          ID_TOK	reduce using rule {764} (<468>)
	        CONS_TOK	reduce using rule {764} (<468>)
	      STRING_TOK	reduce using rule {764} (<468>)
	      REGEXP_TOK	reduce using rule {764} (<468>)
	       QUARK_TOK	reduce using rule {764} (<468>)
	      BIGINT_TOK	reduce using rule {764} (<468>)
	      META_QUOTE	reduce using rule {764} (<468>)
	         INT_TOK	reduce using rule {764} (<468>)
	        REAL_TOK	reduce using rule {764} (<468>)
	        CHAR_TOK	reduce using rule {764} (<468>)
	         "false"	reduce using rule {764} (<468>)
	          "true"	reduce using rule {764} (<468>)
	             '#'	reduce using rule {764} (<468>)
	             '['	reduce using rule {764} (<468>)
	             '('	reduce using rule {764} (<468>)
	             '{'	reduce using rule {764} (<468>)
	            "[|"	reduce using rule {764} (<468>)
	            "(|"	reduce using rule {764} (<468>)
	            "{|"	reduce using rule {764} (<468>)
	             '_'	reduce using rule {764} (<468>)
	            "<<"	reduce using rule {764} (<468>)
	            ".("	reduce using rule {764} (<468>)
	             '}'	reduce using rule {509} (inference_rules)

<682>	antecedents	->	. 	{ LONG_BAR }
	inference_rule	->	<468> . antecedents LONG_BAR conclusions ';' 

	        "lexeme"	shift, and goto state <8>
	         "match"	shift, and goto state <850>
	             '~'	shift, and goto state <851>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <852>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	     antecedents	goto state <853>
	    antecedents2	goto state <854>
	      antecedent	goto state <855>
	simple_antecedent	goto state <856>
	       <default>	reduce using rule {512} (antecedents)

<683>	match_ty	->	'[' ty ']' . 

	       <default>	reduce using rule {277} (match_ty)

<684>	match_exp	->	paren_exp . 

	       <default>	reduce using rule {280} (match_exp)

<685>	<453>	->	. 	{ '{' }
	match_decl	->	match_or_matchall match_ty match_options match_exps . <453> '{' case_or_bar_rules '}' 
	match_decl	->	match_or_matchall match_ty match_options match_exps . "of" <454> case_or_bar_rules "end" "match" ';' 

	            "of"	shift, and goto state <857>
	           <453>	goto state <858>
	       <default>	reduce using rule {749} (<453>)

<686>	match_exps	->	match_exp . 	{ "of" '{' }
	match_exps	->	match_exp . "and" match_exps 

	           "and"	shift, and goto state <859>
	       <default>	reduce using rule {278} (match_exps)

<687>	typeexp_decl	->	poly_datatype '<' ty_list '>' . 

	       <default>	reduce using rule {353} (typeexp_decl)

<688>	cons_exp	->	cons_id tick '(' exp_list . ')' '{' lab_exp_list '}' 
	cons_exp	->	cons_id tick '(' exp_list . ')' '(' exp_list ')' 

	             ')'	shift, and goto state <860>

<689>	cons_exp	->	cons_id tick '{' lab_exp_list . '}' 

	             '}'	shift, and goto state <861>

<690>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	list_exp	->	'#' '[' exp_list "..." exp . ']' 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	             ']'	shift, and goto state <862>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>

<691>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	list_exp	->	'#' '(' exp_list "..." exp . ')' 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	             ')'	shift, and goto state <863>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>

<692>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	list_exp	->	'#' '{' exp_list "..." exp . '}' 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	             '}'	shift, and goto state <864>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>

<693>	set_comprehension	->	"setof" '{' exp ':' . generator_list guard_exp3 '}' 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <369>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	  generator_list	goto state <865>
	       generator	goto state <376>

<694>	tick	->	. 	{ '{' }
	exp	->	exp '?' exp ':' . exp 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <866>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<695>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp "with" ":=" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and "less" resolved as shift.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and "with" resolved as shift.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and "--" resolved as shift.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and "++" resolved as shift.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and "!=" resolved as shift.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and "==" resolved as shift.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and "<=" resolved as shift.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and ">=" resolved as shift.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and "%=" resolved as shift(right).
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and "/=" resolved as shift(right).
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and "*=" resolved as shift(right).
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and "-=" resolved as shift(right).
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and "+=" resolved as shift(right).
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and '^' resolved as shift.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and ":=" resolved as shift(right).
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and '%' resolved as shift.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and '/' resolved as shift.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and '-' resolved as shift.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and '+' resolved as shift.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and '>' resolved as shift.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and '<' resolved as shift.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and '&' resolved as shift.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and '=' resolved as shift(right).
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and ">>" resolved as shift.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and "<<" resolved as shift.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and '|' resolved as shift.
	shift/reduce conflict with item {2223} setl_exp -> exp "with" ":=" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {674} (setl_exp)

<696>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	setl_exp	->	exp "less" ":=" exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and "less" resolved as shift.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and "with" resolved as shift.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and '?' resolved as reduce.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and "--" resolved as shift.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and "++" resolved as shift.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and "!=" resolved as shift.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and "==" resolved as shift.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and "<=" resolved as shift.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and ">=" resolved as shift.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and "%=" resolved as shift(right).
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and "/=" resolved as shift(right).
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and "*=" resolved as shift(right).
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and "-=" resolved as shift(right).
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and "+=" resolved as shift(right).
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and '^' resolved as shift.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and ":=" resolved as shift(right).
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and '%' resolved as shift.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and '/' resolved as shift.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and '-' resolved as shift.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and '+' resolved as shift.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and '>' resolved as shift.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and '<' resolved as shift.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and '&' resolved as shift.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and '=' resolved as shift(right).
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and ">>" resolved as shift.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and "<<" resolved as shift.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and "||" resolved as reduce.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and '|' resolved as shift.
	shift/reduce conflict with item {2228} setl_exp -> exp "less" ":=" exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {675} (setl_exp)

<697>	simple_exp	->	simple_exp '[' exp ']' . 

	       <default>	reduce using rule {240} (simple_exp)

<698>	simple_exp	->	simple_exp "->" '#' integer . 

	       <default>	reduce using rule {242} (simple_exp)

<699>	simple_exp	->	simple_exp '.' '#' integer . 

	       <default>	reduce using rule {239} (simple_exp)

<700>	lab_exp	->	id '=' . exp 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <867>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<701>	lab_exp_list2	->	lab_exp ',' . lab_exp 
	lab_exp_list2	->	lab_exp ',' . lab_exp_list2 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <505>
	         lab_exp	goto state <868>
	   lab_exp_list2	goto state <869>

<702>	simple_exp	->	tick '{' lab_exp_list '}' . 

	       <default>	reduce using rule {234} (simple_exp)

<703>	type_def	->	sharing_opt id tyvars '=' . ty 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <870>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<704>	lab_ty	->	id ':' ty . 	{ ',' '}' }
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	       <default>	reduce using rule {169} (lab_ty)

<705>	lab_ty_list2	->	lab_ty . ',' lab_ty 
	lab_ty_list2	->	lab_ty ',' lab_ty . 	{ '}' }
	lab_ty_list2	->	lab_ty . ',' lab_ty_list2 

	             ','	shift, and goto state <514>
	       <default>	reduce using rule {179} (lab_ty_list2)

<706>	lab_ty_list2	->	lab_ty ',' lab_ty_list2 . 

	       <default>	reduce using rule {180} (lab_ty_list2)

<707>	setl_ty	->	"listof" '<' ty '>' . 

	       <default>	reduce using rule {660} (setl_ty)

<708>	setl_ty	->	"tupleof" '<' ty_list2 '>' . 

	       <default>	reduce using rule {661} (setl_ty)

<709>	setl_ty	->	"setof" '<' ty '>' . 

	       <default>	reduce using rule {662} (setl_ty)

<710>	setl_ty	->	"bagof" '<' ty '>' . 

	       <default>	reduce using rule {663} (setl_ty)

<711>	setl_ty	->	"mapof" '<' ty ',' . ty '>' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <871>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<712>	setl_ty	->	"multimapof" '<' ty ',' . ty '>' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <872>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<713>	setl_ty	->	"queueof" '<' ty '>' . 

	       <default>	reduce using rule {666} (setl_ty)

<714>	setl_ty	->	"priqueueof" '<' ty '>' . 

	       <default>	reduce using rule {667} (setl_ty)

<715>	setl_ty	->	"dequeof" '<' ty '>' . 

	       <default>	reduce using rule {668} (setl_ty)

<716>	id_ty	->	id '<' ty_list '>' . 

	       <default>	reduce using rule {168} (id_ty)

<717>	ty	->	ty '[' exp ']' . 

	       <default>	reduce using rule {141} (ty)

<718>	stmt	->	"if" exp "then" stmt_list . else_clause ';' 

	           "end"	shift, and goto state <873>
	          "else"	shift, and goto state <874>
	         "elsif"	shift, and goto state <875>
	     else_clause	goto state <876>

<719>	stmt	->	"while" exp "loop" stmt_list . "end" "loop" ';' 

	           "end"	shift, and goto state <877>

<720>	aggr_pat	->	'#' '[' pat_list . ']' 

	             ']'	shift, and goto state <878>

<721>	pat_list	->	pat_list1 . 	{ ']' }
	aggr_pat	->	'#' '[' pat_list1 . "..." pat ']' 

	           "..."	shift, and goto state <879>
	       <default>	reduce using rule {121} (pat_list)

<722>	aggr_pat	->	'#' '(' pat_list . ')' 

	             ')'	shift, and goto state <880>

<723>	pat_list	->	pat_list1 . 	{ ')' }
	aggr_pat	->	'#' '(' pat_list1 . "..." pat ')' 

	           "..."	shift, and goto state <881>
	       <default>	reduce using rule {121} (pat_list)

<724>	aggr_pat	->	'#' '{' pat_list . '}' 

	             '}'	shift, and goto state <882>

<725>	pat_list	->	pat_list1 . 	{ '}' }
	aggr_pat	->	'#' '{' pat_list1 . "..." pat '}' 

	           "..."	shift, and goto state <883>
	       <default>	reduce using rule {121} (pat_list)

<726>	big_pat	->	pat ':' . ty 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <884>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<727>	aggr_pat	->	'[' pat_list ']' . 

	       <default>	reduce using rule {94} (aggr_pat)

<728>	aggr_pat	->	'[' pat_list "..." . ']' 

	             ']'	shift, and goto state <885>

<729>	pat_list2	->	big_pat ',' . big_pat 
	pat_list2	->	big_pat ',' . pat_list2 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <540>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	       pat_list2	goto state <886>
	         big_pat	goto state <887>

<730>	prim_pat	->	'(' pat ')' . 

	       <default>	reduce using rule {80} (prim_pat)

<731>	big_pat	->	pat ':' . ty 
	prim_pat	->	'(' pat ':' . ty ')' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <888>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<732>	prim_pat	->	'(' pat_list2 ')' . 

	       <default>	reduce using rule {81} (prim_pat)

<733>	lab_pat	->	id '=' . pat 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <889>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>

<734>	lab_pat_list1	->	lab_pat ',' . lab_pat_list1 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <549>
	         lab_pat	goto state <550>
	   lab_pat_list1	goto state <890>

<735>	prim_pat	->	'{' lab_pat_list '}' . 

	       <default>	reduce using rule {82} (prim_pat)

<736>	prim_pat	->	'{' lab_pat_list "..." . '}' 

	             '}'	shift, and goto state <891>

<737>	pat_opt	->	. 	{ '|' }
	aggr_pat	->	"[|" '|' pat . pat_opt '|' dots_opt pat_list1 dots_opt "|]" 
	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	logical_pat	->	pat . "&&" pat 

	            "&&"	shift, and goto state <573>
	            "||"	shift, and goto state <574>
	      "implies:"	shift, and goto state <575>
	          "xor:"	shift, and goto state <576>
	        "equiv:"	shift, and goto state <577>
	             ':'	shift, and goto state <892>
	         pat_opt	goto state <893>
	       <default>	reduce using rule {114} (pat_opt)

<738>	dots_opt	->	. 	{ "|]" }
	aggr_pat	->	"[|" dots_opt pat_list1 . dots_opt "|]" 

	           "..."	shift, and goto state <554>
	        dots_opt	goto state <894>
	       <default>	reduce using rule {112} (dots_opt)

<739>	pat_opt	->	. 	{ '|' }
	aggr_pat	->	"(|" '|' pat . pat_opt '|' dots_opt pat_list1 dots_opt "|)" 
	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	logical_pat	->	pat . "&&" pat 

	            "&&"	shift, and goto state <573>
	            "||"	shift, and goto state <574>
	      "implies:"	shift, and goto state <575>
	          "xor:"	shift, and goto state <576>
	        "equiv:"	shift, and goto state <577>
	             ':'	shift, and goto state <892>
	         pat_opt	goto state <895>
	       <default>	reduce using rule {114} (pat_opt)

<740>	dots_opt	->	. 	{ "|)" }
	aggr_pat	->	"(|" dots_opt pat_list1 . dots_opt "|)" 

	           "..."	shift, and goto state <554>
	        dots_opt	goto state <896>
	       <default>	reduce using rule {112} (dots_opt)

<741>	pat_opt	->	. 	{ '|' }
	aggr_pat	->	"{|" '|' pat . pat_opt '|' dots_opt pat_list1 dots_opt "|}" 
	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	logical_pat	->	pat . "&&" pat 

	            "&&"	shift, and goto state <573>
	            "||"	shift, and goto state <574>
	      "implies:"	shift, and goto state <575>
	          "xor:"	shift, and goto state <576>
	        "equiv:"	shift, and goto state <577>
	             ':'	shift, and goto state <892>
	         pat_opt	goto state <897>
	       <default>	reduce using rule {114} (pat_opt)

<742>	dots_opt	->	. 	{ "|}" }
	aggr_pat	->	"{|" dots_opt pat_list1 . dots_opt "|}" 

	           "..."	shift, and goto state <554>
	        dots_opt	goto state <898>
	       <default>	reduce using rule {112} (dots_opt)

<743>	cons_list	->	cons ',' . cons_list 

	        CONS_TOK	shift, and goto state <94>
	            cons	goto state <563>
	       cons_list	goto state <899>

<744>	prim_pat	->	"<<" cons_list ">>" . pat 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <900>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>

<745>	aggr_pat	->	".(" pat_list2 ')' . 

	       <default>	reduce using rule {111} (aggr_pat)

<746>	string_pat	->	lexeme_ "class" id . 

	       <default>	reduce using rule {91} (string_pat)

<747>	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	prim_pat	->	id "as" pat . 	{ "<-" '\\' "and" ';' ',' ':' "equiv:" "xor:" "implies:" "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' LONG_BAR '|' "where" "if" }
	logical_pat	->	pat . "&&" pat 

	shift/reduce conflict with item {186} prim_pat -> id "as" pat . and "equiv:" resolved as shift.
	shift/reduce conflict with item {186} prim_pat -> id "as" pat . and "xor:" resolved as shift.
	shift/reduce conflict with item {186} prim_pat -> id "as" pat . and "implies:" resolved as shift.
	shift/reduce conflict with item {186} prim_pat -> id "as" pat . and "||" resolved as shift.
	shift/reduce conflict with item {186} prim_pat -> id "as" pat . and "&&" resolved as shift.
	            "&&"	shift, and goto state <573>
	            "||"	shift, and goto state <574>
	      "implies:"	shift, and goto state <575>
	          "xor:"	shift, and goto state <576>
	        "equiv:"	shift, and goto state <577>
	       <default>	reduce using rule {74} (prim_pat)

<748>	logical_pat	->	pat "&&" pat . 	{ "<-" '\\' "and" ';' ',' ':' "equiv:" "xor:" "implies:" "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' LONG_BAR '|' "where" "if" }
	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	logical_pat	->	pat . "&&" pat 

	shift/reduce conflict with item {160} logical_pat -> pat "&&" pat . and "equiv:" resolved as reduce.
	shift/reduce conflict with item {160} logical_pat -> pat "&&" pat . and "xor:" resolved as reduce.
	shift/reduce conflict with item {160} logical_pat -> pat "&&" pat . and "implies:" resolved as reduce.
	shift/reduce conflict with item {160} logical_pat -> pat "&&" pat . and "||" resolved as reduce.
	shift/reduce conflict with item {160} logical_pat -> pat "&&" pat . and "&&" resolved as reduce(left).
	       <default>	reduce using rule {66} (logical_pat)

<749>	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat "||" pat . 	{ "<-" '\\' "and" ';' ',' ':' "equiv:" "xor:" "implies:" "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' LONG_BAR '|' "where" "if" }
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	logical_pat	->	pat . "&&" pat 

	shift/reduce conflict with item {164} logical_pat -> pat "||" pat . and "equiv:" resolved as shift.
	shift/reduce conflict with item {164} logical_pat -> pat "||" pat . and "xor:" resolved as shift.
	shift/reduce conflict with item {164} logical_pat -> pat "||" pat . and "implies:" resolved as shift.
	shift/reduce conflict with item {164} logical_pat -> pat "||" pat . and "||" resolved as reduce(left).
	shift/reduce conflict with item {164} logical_pat -> pat "||" pat . and "&&" resolved as shift.
	            "&&"	shift, and goto state <573>
	      "implies:"	shift, and goto state <575>
	          "xor:"	shift, and goto state <576>
	        "equiv:"	shift, and goto state <577>
	       <default>	reduce using rule {67} (logical_pat)

<750>	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat "implies:" pat . 	{ "<-" '\\' "and" ';' ',' ':' "equiv:" "xor:" "implies:" "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' LONG_BAR '|' "where" "if" }
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	logical_pat	->	pat . "&&" pat 

	shift/reduce conflict with item {168} logical_pat -> pat "implies:" pat . and "equiv:" resolved as reduce.
	shift/reduce conflict with item {168} logical_pat -> pat "implies:" pat . and "xor:" resolved as reduce.
	shift/reduce conflict with item {168} logical_pat -> pat "implies:" pat . and "implies:" resolved as reduce(left).
	shift/reduce conflict with item {168} logical_pat -> pat "implies:" pat . and "||" resolved as reduce.
	shift/reduce conflict with item {168} logical_pat -> pat "implies:" pat . and "&&" resolved as shift.
	            "&&"	shift, and goto state <573>
	       <default>	reduce using rule {68} (logical_pat)

<751>	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat "xor:" pat . 	{ "<-" '\\' "and" ';' ',' ':' "equiv:" "xor:" "implies:" "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' LONG_BAR '|' "where" "if" }
	logical_pat	->	pat . "equiv:" pat 
	logical_pat	->	pat . "&&" pat 

	shift/reduce conflict with item {172} logical_pat -> pat "xor:" pat . and "equiv:" resolved as reduce.
	shift/reduce conflict with item {172} logical_pat -> pat "xor:" pat . and "xor:" resolved as reduce(left).
	shift/reduce conflict with item {172} logical_pat -> pat "xor:" pat . and "implies:" resolved as shift.
	shift/reduce conflict with item {172} logical_pat -> pat "xor:" pat . and "||" resolved as reduce.
	shift/reduce conflict with item {172} logical_pat -> pat "xor:" pat . and "&&" resolved as shift.
	            "&&"	shift, and goto state <573>
	      "implies:"	shift, and goto state <575>
	       <default>	reduce using rule {69} (logical_pat)

<752>	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	logical_pat	->	pat "equiv:" pat . 	{ "<-" '\\' "and" ';' ',' ':' "equiv:" "xor:" "implies:" "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' LONG_BAR '|' "where" "if" }
	logical_pat	->	pat . "&&" pat 

	shift/reduce conflict with item {176} logical_pat -> pat "equiv:" pat . and "equiv:" resolved as reduce(left).
	shift/reduce conflict with item {176} logical_pat -> pat "equiv:" pat . and "xor:" resolved as shift.
	shift/reduce conflict with item {176} logical_pat -> pat "equiv:" pat . and "implies:" resolved as shift.
	shift/reduce conflict with item {176} logical_pat -> pat "equiv:" pat . and "||" resolved as reduce.
	shift/reduce conflict with item {176} logical_pat -> pat "equiv:" pat . and "&&" resolved as shift.
	            "&&"	shift, and goto state <573>
	      "implies:"	shift, and goto state <575>
	          "xor:"	shift, and goto state <576>
	       <default>	reduce using rule {70} (logical_pat)

<753>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	guard_exp	->	where_or_if exp . 	{ "<-" '\\' ':' }
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {291} (guard_exp)

<754>	generator	->	pat guard_exp "<-" . exp 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <901>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<755>	stmt	->	"forall" generator_list "loop" stmt_list . "end" "loop" ';' 

	           "end"	shift, and goto state <902>

<756>	generator_list	->	generator ',' generator_list . 

	       <default>	reduce using rule {658} (generator_list)

<757>	stmt	->	exp ":=" exp ';' . 

	       <default>	reduce using rule {641} (stmt)

<758>	var_list	->	var ',' . var_list 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <584>
	             var	goto state <585>
	        var_list	goto state <903>

<759>	tyvars	->	'<' var_list '>' . 

	       <default>	reduce using rule {367} (tyvars)

<760>	datatype_def	->	id tyvars inherit_list_opt qualifiers_opt . 	{ "law" "and" ';' "type" "where" }
	datatype_def	->	id tyvars inherit_list_opt qualifiers_opt . '=' <464> switch_exp terms <465> datatype_body 

	             '='	shift, and goto state <904>
	       <default>	reduce using rule {361} (datatype_def)

<761>	<466>	->	. 	{ ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK "lexeme" }
	view_defs_opt	->	"type" "view" id . view_defs 

	       view_defs	goto state <905>
	        view_def	goto state <906>
	           <466>	goto state <907>
	       <default>	reduce using rule {762} (<466>)

<762>	invertible	->	"inline" . 

	       <default>	reduce using rule {448} (invertible)

<763>	law_defs_opt	->	"law" law_defs . 

	       <default>	reduce using rule {442} (law_defs_opt)

<764>	law_defs	->	law_def . 	{ ';' "where" }
	law_defs	->	law_def . and_or_bar law_defs 

	             '|'	shift, and goto state <312>
	           "and"	shift, and goto state <313>
	      and_or_bar	goto state <908>
	       <default>	reduce using rule {443} (law_defs)

<765>	law_def	->	invertible . id <467> patvars guard_exp2 '=' pat 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <909>

<766>	ty_defs_opt	->	"where" . "type" type_defs 

	          "type"	shift, and goto state <910>

<767>	datatype_decl	->	"datatype" datatype_defs0 view_defs_opt law_defs_opt ty_defs_opt . ';' 

	             ';'	shift, and goto state <911>

<768>	complex_cons	->	'#' '[' "..." ']' . 

	       <default>	reduce using rule {47} (complex_cons)

<769>	complex_cons	->	'#' '(' "..." ')' . 

	       <default>	reduce using rule {48} (complex_cons)

<770>	complex_cons	->	'#' '{' "..." '}' . 

	       <default>	reduce using rule {49} (complex_cons)

<771>	refine_def	->	"class" id_or_cons "::" '~' . id_or_cons '(' ')' brace_body 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <912>

<772>	refine_def	->	"class" id_or_cons "::" id_or_cons . '(' ')' brace_body 

	             '('	shift, and goto state <913>

<773>	persistent_decl	->	id ty_args "=>" . pid 

	      STRING_TOK	shift, and goto state <95>
	          string	goto state <914>
	             pid	goto state <915>

<774>	persistent_decls	->	persistent_decl '|' persistent_decls . 

	       <default>	reduce using rule {474} (persistent_decls)

<775>	printing_decl	->	complex_cons ty_args "=>" . print_formats 
	print_formats	->	. 	{ "and" ';' '|' }

	          ID_TOK	shift, and goto state <93>
	      STRING_TOK	shift, and goto state <95>
	         INT_TOK	shift, and goto state <96>
	        CHAR_TOK	shift, and goto state <98>
	             '['	shift, and goto state <916>
	             ']'	shift, and goto state <917>
	             '('	shift, and goto state <918>
	             ')'	shift, and goto state <919>
	             '{'	shift, and goto state <920>
	             '}'	shift, and goto state <921>
	             '_'	shift, and goto state <922>
	             '/'	shift, and goto state <923>
	             '^'	shift, and goto state <924>
	              id	goto state <925>
	          string	goto state <926>
	         integer	goto state <927>
	       character	goto state <928>
	   print_formats	goto state <929>
	    print_format	goto state <930>
	special_print_format	goto state <931>
	       <default>	reduce using rule {407} (print_formats)

<776>	printing_decls	->	printing_decl '|' printing_decls . 

	       <default>	reduce using rule {471} (printing_decls)

<777>	ty_args	->	'<' ty_list '>' . 

	       <default>	reduce using rule {171} (ty_args)

<778>	inherit_list	->	inherit ',' . inherit_list 
	qualifiers	->	. 	{ "private" "protected" "public" ID_TOK }

	       "rewrite"	shift, and goto state <6>
	        "lexeme"	shift, and goto state <8>
	    "persistent"	shift, and goto state <189>
	        "traced"	shift, and goto state <609>
	   "collectable"	shift, and goto state <610>
	   "finalizable"	shift, and goto state <611>
	     "printable"	shift, and goto state <190>
	     "unifiable"	shift, and goto state <612>
	         "const"	shift, and goto state <613>
	          "view"	shift, and goto state <614>
	       "virtual"	shift, and goto state <615>
	        "inline"	shift, and goto state <616>
	      "relation"	shift, and goto state <617>
	   "applicative"	shift, and goto state <618>
	    "treeparser"	shift, and goto state <619>
	      "bitfield"	shift, and goto state <620>
	        "extern"	shift, and goto state <621>
	        rewrite_	goto state <622>
	         lexeme_	goto state <623>
	     persistent_	goto state <624>
	         traced_	goto state <625>
	    collectable_	goto state <626>
	    finalizable_	goto state <627>
	      printable_	goto state <628>
	      unifiable_	goto state <629>
	    inherit_list	goto state <932>
	         inherit	goto state <631>
	      qualifiers	goto state <632>
	       qualifier	goto state <633>
	       <default>	reduce using rule {485} (qualifiers)

<779>	scope	->	"public" . 

	       <default>	reduce using rule {314} (scope)

<780>	scope	->	"protected" . 

	       <default>	reduce using rule {315} (scope)

<781>	scope	->	"private" . 

	       <default>	reduce using rule {316} (scope)

<782>	scope_opt	->	scope . 

	       <default>	reduce using rule {318} (scope_opt)

<783>	inherit	->	qualifiers scope_opt . inherit_ty 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <933>
	      inherit_ty	goto state <934>

<784>	qualifiers	->	qualifier qualifiers . 

	       <default>	reduce using rule {486} (qualifiers)

<785>	qualifiers_opt	->	'!' qualifiers_opt . 

	       <default>	reduce using rule {483} (qualifiers_opt)

<786>	qualifiers_opt	->	"::" qualifiers . 

	       <default>	reduce using rule {484} (qualifiers_opt)

<787>	refine_def	->	refine_ty_list inherit_list_opt qualifiers_opt brace_body_opt . 

	       <default>	reduce using rule {458} (refine_def)

<788>	<463>	->	. 	{ "graphrewrite" "graphtype" "declare" "signature" "module" "procedure" "function" "fun" "failrewrite" "cutrewrite" "attributegrammar" "instantiate" "refine" "datatype" ? "classof" ATTRIB_ID "begin" ".[" "type" ".(" "{|" "(|" "[|" '#' META_QUOTE BIGINT_TOK QUARK_TOK CONS_EXP POLY_DATATYPE "matchscan" "matchall" "match" "inference" "lexeme" "syntax" "rewrite" }
	decl_list	->	. 	{ '}' }
	brace_body	->	'{' <459> . decl_list <460> '}' 

	       decl_list	goto state <935>
	           <463>	goto state <4>
	       "rewrite"	reduce using rule {759} (<463>)
	        "syntax"	reduce using rule {759} (<463>)
	        "lexeme"	reduce using rule {759} (<463>)
	     "inference"	reduce using rule {759} (<463>)
	         "match"	reduce using rule {759} (<463>)
	      "matchall"	reduce using rule {759} (<463>)
	     "matchscan"	reduce using rule {759} (<463>)
	   POLY_DATATYPE	reduce using rule {759} (<463>)
	        CONS_EXP	reduce using rule {759} (<463>)
	       QUARK_TOK	reduce using rule {759} (<463>)
	      BIGINT_TOK	reduce using rule {759} (<463>)
	      META_QUOTE	reduce using rule {759} (<463>)
	             '#'	reduce using rule {759} (<463>)
	            "[|"	reduce using rule {759} (<463>)
	            "(|"	reduce using rule {759} (<463>)
	            "{|"	reduce using rule {759} (<463>)
	            ".("	reduce using rule {759} (<463>)
	          "type"	reduce using rule {759} (<463>)
	            ".["	reduce using rule {759} (<463>)
	         "begin"	reduce using rule {759} (<463>)
	       ATTRIB_ID	reduce using rule {759} (<463>)
	       "classof"	reduce using rule {759} (<463>)
	               ?	reduce using rule {759} (<463>)
	      "datatype"	reduce using rule {759} (<463>)
	        "refine"	reduce using rule {759} (<463>)
	   "instantiate"	reduce using rule {759} (<463>)
	"attributegrammar"	reduce using rule {759} (<463>)
	    "cutrewrite"	reduce using rule {759} (<463>)
	   "failrewrite"	reduce using rule {759} (<463>)
	           "fun"	reduce using rule {759} (<463>)
	      "function"	reduce using rule {759} (<463>)
	     "procedure"	reduce using rule {759} (<463>)
	        "module"	reduce using rule {759} (<463>)
	     "signature"	reduce using rule {759} (<463>)
	       "declare"	reduce using rule {759} (<463>)
	     "graphtype"	reduce using rule {759} (<463>)
	  "graphrewrite"	reduce using rule {759} (<463>)
	             '}'	reduce using rule {346} (decl_list)

<789>	instantiate_decl	->	"instantiate" extern_opt "datatype" ty_list ';' . 

	       <default>	reduce using rule {504} (instantiate_decl)

<790>	attribgram_class_decl	->	"attributegrammar" "class" id inherit_list_opt qualifiers_opt . brace_body ';' 

	             '{'	shift, and goto state <638>
	      brace_body	goto state <936>

<791>	prec_rule	->	"left:" . integer production ';' 

	         INT_TOK	shift, and goto state <96>
	         integer	goto state <937>

<792>	prec_rule	->	"right:" . integer production ';' 

	         INT_TOK	shift, and goto state <96>
	         integer	goto state <938>

<793>	attribgram_decl	->	"attributegrammar" id <472> '{' prec_rules . expect_ <473> bnf_rules '}' ';' 
	expect_	->	. 	{ '}' ID_TOK }

	       "expect:"	shift, and goto state <939>
	         expect_	goto state <940>
	       <default>	reduce using rule {532} (expect_)

<794>	prec_rules	->	. 	{ "expect:" '}' ID_TOK }
	prec_rules	->	prec_rule . prec_rules 

	         "left:"	shift, and goto state <791>
	        "right:"	shift, and goto state <792>
	      prec_rules	goto state <941>
	       prec_rule	goto state <794>
	       <default>	reduce using rule {528} (prec_rules)

<795>	top_pat_list2	->	pat ',' . pat 
	top_pat_list2	->	pat ',' . top_pat_list2 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <942>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	   top_pat_list2	goto state <943>

<796>	qual_id	->	id_ty "::" qual_id . 

	       <default>	reduce using rule {166} (qual_id)

<797>	return_exp	->	"return" . replacement_exp 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <944>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	              id	goto state <945>
	            cons	goto state <112>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	primitive_app_exp	goto state <946>
	   primitive_exp	goto state <947>
	        list_exp	goto state <948>
	 replacement_exp	goto state <949>

<798>	fun_rule	->	fun_rule_head ':' return_ty . where_or_if exp ':' fun_action 
	fun_rule	->	fun_rule_head ':' return_ty . ':' fun_action 
	return_ty	->	return_ty . '[' exp ']' 
	return_ty	->	return_ty . '*' 
	return_ty	->	return_ty . '&' 
	return_ty	->	return_ty . '[' ']' 

	             '*'	shift, and goto state <950>
	            "if"	shift, and goto state <570>
	         "where"	shift, and goto state <571>
	             '|'	shift, and goto state <572>
	             '['	shift, and goto state <951>
	             ':'	shift, and goto state <952>
	             '&'	shift, and goto state <953>
	     where_or_if	goto state <954>

<799>	return_ty	->	simple_ty1 . 

	       <default>	reduce using rule {142} (return_ty)

<800>	fun_action	->	return_exp . 

	       <default>	reduce using rule {608} (fun_action)

<801>	fun_action	->	brace_body . 

	       <default>	reduce using rule {607} (fun_action)

<802>	fun_rule	->	fun_rule_head ':' fun_action . 

	       <default>	reduce using rule {606} (fun_rule)

<803>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	fun_rule	->	fun_rule_head where_or_if exp . ':' fun_action 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	             ':'	shift, and goto state <955>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>

<804>	fun_rules	->	fun_rule '|' fun_rules . 

	       <default>	reduce using rule {601} (fun_rules)

<805>	fun_arg	->	id ':' . ty 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <956>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<806>	function_def	->	"function" cons_or_string '(' fun_args ')' . "return" ty "is" defs "begin" stmt_list "end" ';' 

	        "return"	shift, and goto state <957>

<807>	fun_args	->	. 	{ ')' }
	fun_args1	->	fun_arg ',' . fun_args 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <653>
	        fun_args	goto state <958>
	       fun_args1	goto state <655>
	         fun_arg	goto state <656>
	       <default>	reduce using rule {619} (fun_args)

<808>	function_def	->	"procedure" cons_or_string '(' fun_args ')' . "is" defs "begin" stmt_list "end" ';' 

	            "is"	shift, and goto state <959>

<809>	labeled_sig	->	id ':' . sig 

	          ID_TOK	shift, and goto state <93>
	         "begin"	shift, and goto state <812>
	              id	goto state <813>
	             sig	goto state <960>

<810>	module_args	->	'(' labeled_sigs ')' . 

	       <default>	reduce using rule {626} (module_args)

<811>	labeled_sigs	->	labeled_sig ',' . labeled_sigs 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <658>
	    labeled_sigs	goto state <961>
	     labeled_sig	goto state <660>

<812>	sig	->	"begin" . defs "end" 
	defs	->	. 	{ "end" }

	          ID_TOK	shift, and goto state <93>
	          "type"	shift, and goto state <23>
	      "datatype"	shift, and goto state <29>
	      "function"	shift, and goto state <36>
	     "procedure"	shift, and goto state <37>
	        "module"	shift, and goto state <38>
	     "signature"	shift, and goto state <39>
	              id	goto state <222>
	   datatype_decl	goto state <223>
	       type_decl	goto state <224>
	             def	goto state <225>
	    compound_def	goto state <226>
	    function_def	goto state <78>
	      module_def	goto state <79>
	   signature_def	goto state <80>
	            defs	goto state <962>
	       <default>	reduce using rule {639} (defs)

<813>	sig	->	id . 

	       <default>	reduce using rule {633} (sig)

<814>	sig	->	sig . '(' sigs ')' 
	sig	->	sig . '.' id 
	module_sig	->	':' sig . 	{ "is" }

	             '('	shift, and goto state <963>
	             '.'	shift, and goto state <964>
	       <default>	reduce using rule {631} (module_sig)

<815>	module_def	->	"module" cons_or_string module_args module_sig "is" . "begin" defs "end" ';' 

	         "begin"	shift, and goto state <965>

<816>	sig	->	sig . '(' sigs ')' 
	sig	->	sig . '.' id 
	signature_def	->	"signature" cons_or_string module_args "is" sig . ';' 

	             '('	shift, and goto state <963>
	             '.'	shift, and goto state <964>
	             ';'	shift, and goto state <966>

<817>	def	->	id ':' ty ":=" . exp ';' 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <967>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<818>	def	->	id ':' ty ';' . 

	       <default>	reduce using rule {609} (def)

<819>	compound_stmt	->	"declare" defs "begin" stmt_list "end" . ';' 

	             ';'	shift, and goto state <968>

<820>	<480>	->	. 	{ "edges:" "nodes:" ')' }
	graph_class_decl	->	"graphtype" id inherit_list_opt qualifiers_opt '(' . <480> node_spec <481> edge_spec ')' brace_body ';' 

	           <480>	goto state <969>
	       <default>	reduce using rule {776} (<480>)

<821>	graph_rewrite_decl	->	"graphrewrite" id '(' fun_args ')' . '=' "begin" grs_sections "end" "graphrewrite" ';' 
	graph_rewrite_decl	->	"graphrewrite" id '(' fun_args ')' . '{' grs_sections '}' 

	             '{'	shift, and goto state <970>
	             '='	shift, and goto state <971>

<822>	protocol	->	ty . inherited_opt synthesized_opt 
	inherited_opt	->	. 	{ "synthesized" ',' ':' ')' }
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	     "inherited"	shift, and goto state <972>
	   inherited_opt	goto state <973>
	       <default>	reduce using rule {570} (inherited_opt)

<823>	rewrite_class_decl	->	rewrite_ "class" id '(' protocols . ')' inherit_list_opt qualifiers_opt brace_body ';' 

	             ')'	shift, and goto state <974>

<824>	protocols	->	protocol . 	{ ')' }
	protocols	->	protocol . ',' protocols 

	             ','	shift, and goto state <975>
	       <default>	reduce using rule {567} (protocols)

<825>	rewrite_indexings	->	"index:" . rewrite_indices ';' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <976>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	 rewrite_indices	goto state <977>
	   rewrite_index	goto state <978>
	         setl_ty	goto state <168>

<826>	rewrite_mode	->	. 	{ ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '!' "lexeme" "case" }
	rewrite_decl	->	rewrite_ id <476> '{' rewrite_indexings . case_or_bar_rules '}' ';' 

	      "topdown:"	shift, and goto state <979>
	     "bottomup:"	shift, and goto state <980>
	       "before:"	shift, and goto state <981>
	     "preorder:"	shift, and goto state <982>
	    "postorder:"	shift, and goto state <983>
	case_or_bar_rules	goto state <984>
	      case_rules	goto state <985>
	       bar_rules	goto state <986>
	     a_case_rule	goto state <987>
	      a_bar_rule	goto state <988>
	    rewrite_mode	goto state <989>
	       <default>	reduce using rule {590} (rewrite_mode)

<827>	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" '(' . protocols ')' qualifiers_opt <477> '{' rewrite_indexings case_or_bar_rules '}' 
	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" '(' . protocols ')' qualifiers_opt <478> "of" rewrite_indexings case_or_bar_rules "end" "rewrite" ';' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <822>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	       protocols	goto state <990>
	        protocol	goto state <824>
	         setl_ty	goto state <168>

<828>	syntax_class_decl	->	syntax_ "class" id inherit_list_opt qualifiers_opt . brace_body ';' 

	             '{'	shift, and goto state <638>
	      brace_body	goto state <991>

<829>	expect_	->	. 	{ '}' ID_TOK }
	syntax_decl	->	syntax_ id <470> '{' prec_rules . expect_ <471> bnf_rules '}' ';' 

	       "expect:"	shift, and goto state <939>
	         expect_	goto state <992>
	       <default>	reduce using rule {532} (expect_)

<830>	simple_term1	->	'#' . '[' ']' 
	simple_term1	->	'#' . '(' ')' 
	simple_term1	->	'#' . '{' '}' 
	simple_term1	->	'#' . '[' ty "..." ty ']' 
	simple_term1	->	'#' . '(' ty "..." ty ')' 
	simple_term1	->	'#' . '{' ty "..." ty '}' 

	             '['	shift, and goto state <993>
	             '('	shift, and goto state <994>
	             '{'	shift, and goto state <995>

<831>	simple_term1	->	"[|" . ty "|]" 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <996>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<832>	simple_term1	->	"(|" . ty "|)" 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <997>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<833>	simple_term1	->	"{|" . ty "|}" 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <998>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<834>	inherit_list_opt	->	. 	{ "law" "with" "private" "protected" "public" "and" ';' "type" '|' "where" }
	term	->	'_' . inherit_list_opt opt_with 

	             ':'	shift, and goto state <405>
	inherit_list_opt	goto state <999>
	       <default>	reduce using rule {477} (inherit_list_opt)

<835>	simple_term	->	"view" . exp "=>" simple_term 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <1000>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<836>	simple_term	->	"virtual" . simple_term 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	             '#'	shift, and goto state <830>
	            "[|"	shift, and goto state <831>
	            "(|"	shift, and goto state <832>
	            "{|"	shift, and goto state <833>
	          "view"	shift, and goto state <835>
	       "virtual"	shift, and goto state <836>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <838>
	  cons_or_string	goto state <839>
	          string	goto state <840>
	     simple_term	goto state <1001>
	    simple_term1	goto state <845>

<837>	term	->	lexeme_ . "class" id 

	         "class"	shift, and goto state <1002>

<838>	simple_term1	->	id_or_cons . 	{ "law" "with" "private" "protected" "public" "and" ';' "type" ':' '!' "=>" '|' "where" "if" }
	simple_term1	->	id_or_cons . string 
	simple_term1	->	id_or_cons . regexp 
	simple_term1	->	id_or_cons . "<=>" string 
	cons_or_string	->	id_or_cons . 	{ "dequeof" "priqueueof" "queueof" "multimapof" "mapof" "bagof" "setof" "tupleof" "listof" "of" ".[" "signed" "unsigned" "const" "class" '{' '(' ID_TOK "finalizable" "collectable" }

	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	           "<=>"	shift, and goto state <1003>
	          string	goto state <1004>
	          regexp	goto state <1005>
	            "if"	reduce using rule {389} (simple_term1)
	         "where"	reduce using rule {389} (simple_term1)
	             '|'	reduce using rule {389} (simple_term1)
	            "=>"	reduce using rule {389} (simple_term1)
	             '!'	reduce using rule {389} (simple_term1)
	             ':'	reduce using rule {389} (simple_term1)
	          "type"	reduce using rule {389} (simple_term1)
	             ';'	reduce using rule {389} (simple_term1)
	           "and"	reduce using rule {389} (simple_term1)
	        "public"	reduce using rule {389} (simple_term1)
	     "protected"	reduce using rule {389} (simple_term1)
	       "private"	reduce using rule {389} (simple_term1)
	          "with"	reduce using rule {389} (simple_term1)
	           "law"	reduce using rule {389} (simple_term1)
	   "collectable"	reduce using rule {30} (cons_or_string)
	   "finalizable"	reduce using rule {30} (cons_or_string)
	          ID_TOK	reduce using rule {30} (cons_or_string)
	             '('	reduce using rule {30} (cons_or_string)
	             '{'	reduce using rule {30} (cons_or_string)
	         "class"	reduce using rule {30} (cons_or_string)
	         "const"	reduce using rule {30} (cons_or_string)
	      "unsigned"	reduce using rule {30} (cons_or_string)
	        "signed"	reduce using rule {30} (cons_or_string)
	            ".["	reduce using rule {30} (cons_or_string)
	            "of"	reduce using rule {30} (cons_or_string)
	        "listof"	reduce using rule {30} (cons_or_string)
	       "tupleof"	reduce using rule {30} (cons_or_string)
	         "setof"	reduce using rule {30} (cons_or_string)
	         "bagof"	reduce using rule {30} (cons_or_string)
	         "mapof"	reduce using rule {30} (cons_or_string)
	    "multimapof"	reduce using rule {30} (cons_or_string)
	       "queueof"	reduce using rule {30} (cons_or_string)
	    "priqueueof"	reduce using rule {30} (cons_or_string)
	       "dequeof"	reduce using rule {30} (cons_or_string)

<839>	opt_of	->	. 	{ "dequeof" "priqueueof" "queueof" "multimapof" "mapof" "bagof" "setof" "tupleof" "listof" ".[" "signed" "unsigned" "const" "class" '{' '(' ID_TOK "finalizable" "collectable" }
	simple_term1	->	cons_or_string . opt_of ty_list2 
	simple_term1	->	cons_or_string . opt_of ty 

	            "of"	shift, and goto state <1006>
	          opt_of	goto state <1007>
	       <default>	reduce using rule {405} (opt_of)

<840>	simple_term1	->	string . 	{ "law" "with" "private" "protected" "public" "and" ';' "type" ':' '!' "=>" '|' "where" "if" }
	cons_or_string	->	string . 	{ "dequeof" "priqueueof" "queueof" "multimapof" "mapof" "bagof" "setof" "tupleof" "listof" "of" ".[" "signed" "unsigned" "const" "class" '{' '(' ID_TOK "finalizable" "collectable" }

	            "if"	reduce using rule {393} (simple_term1)
	         "where"	reduce using rule {393} (simple_term1)
	             '|'	reduce using rule {393} (simple_term1)
	            "=>"	reduce using rule {393} (simple_term1)
	             '!'	reduce using rule {393} (simple_term1)
	             ':'	reduce using rule {393} (simple_term1)
	          "type"	reduce using rule {393} (simple_term1)
	             ';'	reduce using rule {393} (simple_term1)
	           "and"	reduce using rule {393} (simple_term1)
	        "public"	reduce using rule {393} (simple_term1)
	     "protected"	reduce using rule {393} (simple_term1)
	       "private"	reduce using rule {393} (simple_term1)
	          "with"	reduce using rule {393} (simple_term1)
	           "law"	reduce using rule {393} (simple_term1)
	   "collectable"	reduce using rule {31} (cons_or_string)
	   "finalizable"	reduce using rule {31} (cons_or_string)
	          ID_TOK	reduce using rule {31} (cons_or_string)
	             '('	reduce using rule {31} (cons_or_string)
	             '{'	reduce using rule {31} (cons_or_string)
	         "class"	reduce using rule {31} (cons_or_string)
	         "const"	reduce using rule {31} (cons_or_string)
	      "unsigned"	reduce using rule {31} (cons_or_string)
	        "signed"	reduce using rule {31} (cons_or_string)
	            ".["	reduce using rule {31} (cons_or_string)
	            "of"	reduce using rule {31} (cons_or_string)
	        "listof"	reduce using rule {31} (cons_or_string)
	       "tupleof"	reduce using rule {31} (cons_or_string)
	         "setof"	reduce using rule {31} (cons_or_string)
	         "bagof"	reduce using rule {31} (cons_or_string)
	         "mapof"	reduce using rule {31} (cons_or_string)
	    "multimapof"	reduce using rule {31} (cons_or_string)
	       "queueof"	reduce using rule {31} (cons_or_string)
	    "priqueueof"	reduce using rule {31} (cons_or_string)
	       "dequeof"	reduce using rule {31} (cons_or_string)

<841>	lexeme_class_rule	->	id '=' terms . 

	       <default>	reduce using rule {547} (lexeme_class_rule)

<842>	terms	->	terms1 . 

	       <default>	reduce using rule {374} (terms)

<843>	terms1	->	term . 	{ "law" "private" "protected" "public" "and" ';' "type" "where" }
	terms1	->	term . '|' terms1 

	             '|'	shift, and goto state <1008>
	       <default>	reduce using rule {375} (terms1)

<844>	inherit_list_opt	->	. 	{ "law" "with" "private" "protected" "public" "and" ';' "type" "=>" '|' "where" "if" }
	term	->	simple_term . inherit_list_opt opt_with view_predicate 
	term	->	simple_term . inherit_list_opt "=>" print_formats opt_with view_predicate 

	             ':'	shift, and goto state <405>
	inherit_list_opt	goto state <1009>
	       <default>	reduce using rule {477} (inherit_list_opt)

<845>	simple_term	->	simple_term1 . 	{ "law" "with" "private" "protected" "public" "and" ';' "type" ':' "=>" '|' "where" "if" }
	simple_term	->	simple_term1 . '!' 

	             '!'	shift, and goto state <1010>
	       <default>	reduce using rule {385} (simple_term)

<846>	lexeme_class_rules	->	lexeme_class_rule "and" lexeme_class_rules . 

	       <default>	reduce using rule {546} (lexeme_class_rules)

<847>	inference_class_decl	->	inference_ "class" id inherit_list_opt qualifiers_opt . brace_body ';' 

	             '{'	shift, and goto state <638>
	      brace_body	goto state <1011>

<848>	inference_decl	->	inference_ id '{' inference_rules '}' . ';' 

	             ';'	shift, and goto state <1012>

<849>	inference_rules	->	inference_rule inference_rules . 

	       <default>	reduce using rule {510} (inference_rules)

<850>	antecedent	->	"match" . simple_antecedent 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <852>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	simple_antecedent	goto state <1013>

<851>	antecedent	->	'~' . simple_antecedent 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <852>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	simple_antecedent	goto state <1014>

<852>	simple_antecedent	->	pat . 	{ "and" LONG_BAR }
	simple_antecedent	->	pat . where_or_if <469> exp 
	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	logical_pat	->	pat . "&&" pat 

	            "if"	shift, and goto state <570>
	         "where"	shift, and goto state <571>
	             '|'	shift, and goto state <572>
	            "&&"	shift, and goto state <573>
	            "||"	shift, and goto state <574>
	      "implies:"	shift, and goto state <575>
	          "xor:"	shift, and goto state <576>
	        "equiv:"	shift, and goto state <577>
	     where_or_if	goto state <1015>
	       <default>	reduce using rule {519} (simple_antecedent)

<853>	inference_rule	->	<468> antecedents . LONG_BAR conclusions ';' 

	        LONG_BAR	shift, and goto state <1016>

<854>	antecedents	->	antecedents2 . 

	       <default>	reduce using rule {513} (antecedents)

<855>	antecedents2	->	antecedent . 	{ LONG_BAR }
	antecedents2	->	antecedent . "and" antecedents2 

	           "and"	shift, and goto state <1017>
	       <default>	reduce using rule {514} (antecedents2)

<856>	antecedent	->	simple_antecedent . 

	       <default>	reduce using rule {516} (antecedent)

<857>	<454>	->	. 	{ "postorder:" "preorder:" "before:" "bottomup:" "topdown:" ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '!' "lexeme" "case" }
	match_decl	->	match_or_matchall match_ty match_options match_exps "of" . <454> case_or_bar_rules "end" "match" ';' 

	           <454>	goto state <1018>
	       <default>	reduce using rule {750} (<454>)

<858>	match_decl	->	match_or_matchall match_ty match_options match_exps <453> . '{' case_or_bar_rules '}' 

	             '{'	shift, and goto state <1019>

<859>	match_exps	->	match_exp "and" . match_exps 

	             '('	shift, and goto state <211>
	       paren_exp	goto state <684>
	      match_exps	goto state <1020>
	       match_exp	goto state <686>

<860>	cons_exp	->	cons_id tick '(' exp_list ')' . '{' lab_exp_list '}' 
	cons_exp	->	cons_id tick '(' exp_list ')' . '(' exp_list ')' 

	             '('	shift, and goto state <1021>
	             '{'	shift, and goto state <1022>

<861>	cons_exp	->	cons_id tick '{' lab_exp_list '}' . 

	       <default>	reduce using rule {256} (cons_exp)

<862>	list_exp	->	'#' '[' exp_list "..." exp ']' . 

	       <default>	reduce using rule {249} (list_exp)

<863>	list_exp	->	'#' '(' exp_list "..." exp ')' . 

	       <default>	reduce using rule {250} (list_exp)

<864>	list_exp	->	'#' '{' exp_list "..." exp '}' . 

	       <default>	reduce using rule {251} (list_exp)

<865>	set_comprehension	->	"setof" '{' exp ':' generator_list . guard_exp3 '}' 
	guard_exp3	->	. 	{ '}' }

	         "where"	shift, and goto state <1023>
	      guard_exp3	goto state <1024>
	       <default>	reduce using rule {678} (guard_exp3)

<866>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp '?' exp ':' exp . 	{ "edges:" "equality:" "hash:" "less" "<-" "then" "loop" "is" "synthesized" "inherited" "law" "with" "private" "protected" "public" '\\' "and" ';' '?' "--" "++" ">>=" "<<=" "!=" "==" "<=" ">=" "^=" "|=" "&=" "%=" "/=" "*=" "-=" "+=" '^' ":=" '%' '/' '-' '+' '>' '<' '&' "type" '=' ',' ">>" "<<" ':' "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' '[' '!' "=>" LONG_BAR '|' "where" "if" '*' }
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and "less" resolved as shift.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and "with" resolved as shift.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and '?' resolved as reduce.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and "--" resolved as shift.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and "++" resolved as shift.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and ">>=" resolved as reduce.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and "<<=" resolved as reduce.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and "!=" resolved as shift.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and "==" resolved as shift.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and "<=" resolved as shift.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and ">=" resolved as shift.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and "^=" resolved as reduce.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and "|=" resolved as reduce.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and "&=" resolved as reduce.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and "%=" resolved as reduce.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and "/=" resolved as reduce.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and "*=" resolved as reduce.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and "-=" resolved as reduce.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and "+=" resolved as reduce.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and '^' resolved as shift.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and ":=" resolved as reduce.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and '%' resolved as shift.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and '/' resolved as shift.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and '-' resolved as shift.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and '+' resolved as shift.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and '>' resolved as shift.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and '<' resolved as shift.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and '&' resolved as shift.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and '=' resolved as reduce.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and ">>" resolved as shift.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and "<<" resolved as shift.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and "||" resolved as reduce.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and "&&" resolved as reduce.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and '|' resolved as reduce.
	shift/reduce conflict with item {708} exp -> exp '?' exp ':' exp . and '*' resolved as shift.
	             '*'	shift, and goto state <266>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	             '^'	shift, and goto state <282>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {221} (exp)

<867>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	lab_exp	->	id '=' exp . 	{ ',' '}' }
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {260} (lab_exp)

<868>	lab_exp_list2	->	lab_exp . ',' lab_exp 
	lab_exp_list2	->	lab_exp ',' lab_exp . 	{ '}' }
	lab_exp_list2	->	lab_exp . ',' lab_exp_list2 

	             ','	shift, and goto state <701>
	       <default>	reduce using rule {270} (lab_exp_list2)

<869>	lab_exp_list2	->	lab_exp ',' lab_exp_list2 . 

	       <default>	reduce using rule {271} (lab_exp_list2)

<870>	type_def	->	sharing_opt id tyvars '=' ty . 	{ "and" ';' '|' }
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	       <default>	reduce using rule {428} (type_def)

<871>	setl_ty	->	"mapof" '<' ty ',' ty . '>' 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	             '>'	shift, and goto state <1025>

<872>	setl_ty	->	"multimapof" '<' ty ',' ty . '>' 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	             '>'	shift, and goto state <1026>

<873>	else_clause	->	"end" . "if" 

	            "if"	shift, and goto state <1027>

<874>	else_clause	->	"else" . stmt_list "end" "if" 
	tick	->	. 	{ '{' }

	       "rewrite"	shift, and goto state <6>
	         "match"	shift, and goto state <10>
	             '*'	shift, and goto state <90>
	      "matchall"	shift, and goto state <11>
	     "matchscan"	shift, and goto state <12>
	            "if"	shift, and goto state <169>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "while"	shift, and goto state <170>
	        "return"	shift, and goto state <171>
	         "begin"	shift, and goto state <25>
	    "cutrewrite"	shift, and goto state <33>
	   "failrewrite"	shift, and goto state <34>
	        "forall"	shift, and goto state <172>
	       "declare"	shift, and goto state <40>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	        rewrite_	goto state <173>
	match_or_matchall	goto state <47>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <174>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	      match_decl	goto state <175>
	  rewriting_decl	goto state <176>
	replacement_decl	goto state <177>
	            stmt	goto state <178>
	       stmt_list	goto state <1028>
	   compound_stmt	goto state <180>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<875>	else_clause	->	"elsif" . exp "then" stmt_list else_clause 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <1029>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<876>	stmt	->	"if" exp "then" stmt_list else_clause . ';' 

	             ';'	shift, and goto state <1030>

<877>	stmt	->	"while" exp "loop" stmt_list "end" . "loop" ';' 

	          "loop"	shift, and goto state <1031>

<878>	aggr_pat	->	'#' '[' pat_list ']' . 

	       <default>	reduce using rule {96} (aggr_pat)

<879>	aggr_pat	->	'#' '[' pat_list1 "..." . pat ']' 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <1032>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>

<880>	aggr_pat	->	'#' '(' pat_list ')' . 

	       <default>	reduce using rule {100} (aggr_pat)

<881>	aggr_pat	->	'#' '(' pat_list1 "..." . pat ')' 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <1033>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>

<882>	aggr_pat	->	'#' '{' pat_list '}' . 

	       <default>	reduce using rule {98} (aggr_pat)

<883>	aggr_pat	->	'#' '{' pat_list1 "..." . pat '}' 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <1034>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>

<884>	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 
	big_pat	->	pat ':' ty . 	{ ',' "|}" "|)" "|]" "..." '}' ')' ']' }

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	       <default>	reduce using rule {125} (big_pat)

<885>	aggr_pat	->	'[' pat_list "..." ']' . 

	       <default>	reduce using rule {95} (aggr_pat)

<886>	pat_list2	->	big_pat ',' pat_list2 . 

	       <default>	reduce using rule {119} (pat_list2)

<887>	pat_list2	->	big_pat . ',' big_pat 
	pat_list2	->	big_pat ',' big_pat . 	{ "|}" "|)" "|]" "..." '}' ')' ']' }
	pat_list2	->	big_pat . ',' pat_list2 

	             ','	shift, and goto state <729>
	       <default>	reduce using rule {118} (pat_list2)

<888>	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 
	big_pat	->	pat ':' ty . 	{ ',' }
	prim_pat	->	'(' pat ':' ty . ')' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             ')'	shift, and goto state <1035>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	       <default>	reduce using rule {125} (big_pat)

<889>	lab_pat	->	id '=' pat . 	{ ',' "..." '}' }
	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	logical_pat	->	pat . "&&" pat 

	            "&&"	shift, and goto state <573>
	            "||"	shift, and goto state <574>
	      "implies:"	shift, and goto state <575>
	          "xor:"	shift, and goto state <576>
	        "equiv:"	shift, and goto state <577>
	       <default>	reduce using rule {116} (lab_pat)

<890>	lab_pat_list1	->	lab_pat ',' lab_pat_list1 . 

	       <default>	reduce using rule {131} (lab_pat_list1)

<891>	prim_pat	->	'{' lab_pat_list "..." '}' . 

	       <default>	reduce using rule {83} (prim_pat)

<892>	pat_opt	->	':' . pat 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <1036>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>

<893>	aggr_pat	->	"[|" '|' pat pat_opt . '|' dots_opt pat_list1 dots_opt "|]" 

	             '|'	shift, and goto state <1037>

<894>	aggr_pat	->	"[|" dots_opt pat_list1 dots_opt . "|]" 

	            "|]"	shift, and goto state <1038>

<895>	aggr_pat	->	"(|" '|' pat pat_opt . '|' dots_opt pat_list1 dots_opt "|)" 

	             '|'	shift, and goto state <1039>

<896>	aggr_pat	->	"(|" dots_opt pat_list1 dots_opt . "|)" 

	            "|)"	shift, and goto state <1040>

<897>	aggr_pat	->	"{|" '|' pat pat_opt . '|' dots_opt pat_list1 dots_opt "|}" 

	             '|'	shift, and goto state <1041>

<898>	aggr_pat	->	"{|" dots_opt pat_list1 dots_opt . "|}" 

	            "|}"	shift, and goto state <1042>

<899>	cons_list	->	cons ',' cons_list . 

	       <default>	reduce using rule {93} (cons_list)

<900>	prim_pat	->	"<<" cons_list ">>" pat . 	{ "<-" '\\' "and" ';' ',' ':' "equiv:" "xor:" "implies:" "||" "&&" "|}" "|)" "|]" "..." '}' ')' ']' LONG_BAR '|' "where" "if" }
	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	logical_pat	->	pat . "&&" pat 

	shift/reduce conflict with item {230} prim_pat -> "<<" cons_list ">>" pat . and "equiv:" resolved as reduce.
	shift/reduce conflict with item {230} prim_pat -> "<<" cons_list ">>" pat . and "xor:" resolved as reduce.
	shift/reduce conflict with item {230} prim_pat -> "<<" cons_list ">>" pat . and "implies:" resolved as reduce.
	shift/reduce conflict with item {230} prim_pat -> "<<" cons_list ">>" pat . and "||" resolved as reduce.
	shift/reduce conflict with item {230} prim_pat -> "<<" cons_list ">>" pat . and "&&" resolved as reduce.
	       <default>	reduce using rule {87} (prim_pat)

<901>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	generator	->	pat guard_exp "<-" exp . 	{ "loop" ',' '}' "where" }
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {659} (generator)

<902>	stmt	->	"forall" generator_list "loop" stmt_list "end" . "loop" ';' 

	          "loop"	shift, and goto state <1043>

<903>	var_list	->	var ',' var_list . 

	       <default>	reduce using rule {372} (var_list)

<904>	<464>	->	. 	{ "law" "virtual" "view" "private" "protected" "public" "and" ';' "type" '_' "{|" "(|" "[|" '#' STRING_TOK CONS_TOK ID_TOK "where" "match" "lexeme" }
	datatype_def	->	id tyvars inherit_list_opt qualifiers_opt '=' . <464> switch_exp terms <465> datatype_body 

	           <464>	goto state <1044>
	       <default>	reduce using rule {760} (<464>)

<905>	view_defs_opt	->	"type" "view" id view_defs . 

	       <default>	reduce using rule {432} (view_defs_opt)

<906>	view_defs	->	view_def . 	{ "law" ';' "where" }
	view_defs	->	view_def . '|' view_defs 

	             '|'	shift, and goto state <1045>
	       <default>	reduce using rule {433} (view_defs)

<907>	view_def	->	<466> . simple_pat ':' app_exp selectors_opt 

	        "lexeme"	shift, and goto state <8>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	      simple_pat	goto state <1046>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>

<908>	invertible	->	. 	{ ID_TOK }
	law_defs	->	law_def and_or_bar . law_defs 

	        "inline"	shift, and goto state <762>
	        law_defs	goto state <1047>
	         law_def	goto state <764>
	      invertible	goto state <765>
	       <default>	reduce using rule {449} (invertible)

<909>	<467>	->	. 	{ '=' '(' ID_TOK '|' "where" "if" }
	law_def	->	invertible id . <467> patvars guard_exp2 '=' pat 

	           <467>	goto state <1048>
	       <default>	reduce using rule {763} (<467>)

<910>	sharing_opt	->	. 	{ ID_TOK }
	ty_defs_opt	->	"where" "type" . type_defs 

	       "sharing"	shift, and goto state <138>
	       type_defs	goto state <1049>
	        type_def	goto state <140>
	     sharing_opt	goto state <141>
	       <default>	reduce using rule {429} (sharing_opt)

<911>	datatype_decl	->	"datatype" datatype_defs0 view_defs_opt law_defs_opt ty_defs_opt ';' . 

	       <default>	reduce using rule {355} (datatype_decl)

<912>	refine_def	->	"class" id_or_cons "::" '~' id_or_cons . '(' ')' brace_body 

	             '('	shift, and goto state <1050>

<913>	refine_def	->	"class" id_or_cons "::" id_or_cons '(' . ')' brace_body 

	             ')'	shift, and goto state <1051>

<914>	pid	->	string . 

	       <default>	reduce using rule {476} (pid)

<915>	persistent_decl	->	id ty_args "=>" pid . 

	       <default>	reduce using rule {475} (persistent_decl)

<916>	special_print_format	->	'[' . 

	       <default>	reduce using rule {418} (special_print_format)

<917>	special_print_format	->	']' . 

	       <default>	reduce using rule {419} (special_print_format)

<918>	special_print_format	->	'(' . 

	       <default>	reduce using rule {416} (special_print_format)

<919>	special_print_format	->	')' . 

	       <default>	reduce using rule {417} (special_print_format)

<920>	special_print_format	->	'{' . 

	       <default>	reduce using rule {414} (special_print_format)

<921>	special_print_format	->	'}' . 

	       <default>	reduce using rule {415} (special_print_format)

<922>	special_print_format	->	'_' . 

	       <default>	reduce using rule {421} (special_print_format)

<923>	special_print_format	->	'/' . 

	       <default>	reduce using rule {422} (special_print_format)

<924>	special_print_format	->	'^' . 

	       <default>	reduce using rule {420} (special_print_format)

<925>	print_format	->	id . 

	       <default>	reduce using rule {410} (print_format)

<926>	print_format	->	string . 

	       <default>	reduce using rule {411} (print_format)

<927>	print_format	->	integer . 

	       <default>	reduce using rule {409} (print_format)

<928>	print_format	->	character . 

	       <default>	reduce using rule {412} (print_format)

<929>	printing_decl	->	complex_cons ty_args "=>" print_formats . 

	       <default>	reduce using rule {472} (printing_decl)

<930>	print_formats	->	. 	{ "law" "with" "private" "protected" "public" "and" ';' "type" '|' "where" "if" }
	print_formats	->	print_format . print_formats 

	          ID_TOK	shift, and goto state <93>
	      STRING_TOK	shift, and goto state <95>
	         INT_TOK	shift, and goto state <96>
	        CHAR_TOK	shift, and goto state <98>
	             '['	shift, and goto state <916>
	             ']'	shift, and goto state <917>
	             '('	shift, and goto state <918>
	             ')'	shift, and goto state <919>
	             '{'	shift, and goto state <920>
	             '}'	shift, and goto state <921>
	             '_'	shift, and goto state <922>
	             '/'	shift, and goto state <923>
	             '^'	shift, and goto state <924>
	              id	goto state <925>
	          string	goto state <926>
	         integer	goto state <927>
	       character	goto state <928>
	   print_formats	goto state <1052>
	    print_format	goto state <930>
	special_print_format	goto state <931>
	       <default>	reduce using rule {407} (print_formats)

<931>	print_format	->	special_print_format . 

	       <default>	reduce using rule {413} (print_format)

<932>	inherit_list	->	inherit ',' inherit_list . 

	       <default>	reduce using rule {480} (inherit_list)

<933>	ty_args	->	. 	{ "law" "with" "private" "protected" "public" "and" ';' "::" "type" '=' ',' '{' '(' '!' "=>" '|' "where" "if" }
	inherit_ty	->	id . ty_args 

	             '<'	shift, and goto state <400>
	         ty_args	goto state <1053>
	       <default>	reduce using rule {170} (ty_args)

<934>	inherit	->	qualifiers scope_opt inherit_ty . 

	       <default>	reduce using rule {481} (inherit)

<935>	<460>	->	. 	{ '}' }
	brace_body	->	'{' <459> decl_list . <460> '}' 

	           <460>	goto state <1054>
	       <default>	reduce using rule {756} (<460>)

<936>	attribgram_class_decl	->	"attributegrammar" "class" id inherit_list_opt qualifiers_opt brace_body . ';' 

	             ';'	shift, and goto state <1055>

<937>	<474>	->	. 	{ "prec:" ';' '?' '{' '(' CHAR_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK }
	prec_rule	->	"left:" integer . production ';' 

	      production	goto state <1056>
	           <474>	goto state <1057>
	       <default>	reduce using rule {770} (<474>)

<938>	<474>	->	. 	{ "prec:" ';' '?' '{' '(' CHAR_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK }
	prec_rule	->	"right:" integer . production ';' 

	      production	goto state <1058>
	           <474>	goto state <1057>
	       <default>	reduce using rule {770} (<474>)

<939>	expect_	->	"expect:" . integer ';' 
	expect_	->	"expect:" . '_' ';' 

	         INT_TOK	shift, and goto state <96>
	             '_'	shift, and goto state <1059>
	         integer	goto state <1060>

<940>	<473>	->	. 	{ '}' ID_TOK }
	attribgram_decl	->	"attributegrammar" id <472> '{' prec_rules expect_ . <473> bnf_rules '}' ';' 

	           <473>	goto state <1061>
	       <default>	reduce using rule {769} (<473>)

<941>	prec_rules	->	prec_rule prec_rules . 

	       <default>	reduce using rule {529} (prec_rules)

<942>	top_pat_list2	->	pat . ',' pat 
	top_pat_list2	->	pat ',' pat . 	{ '\\' ':' '|' "where" "if" }
	top_pat_list2	->	pat . ',' top_pat_list2 
	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	logical_pat	->	pat . "&&" pat 

	            "&&"	shift, and goto state <573>
	            "||"	shift, and goto state <574>
	      "implies:"	shift, and goto state <575>
	          "xor:"	shift, and goto state <576>
	        "equiv:"	shift, and goto state <577>
	             ','	shift, and goto state <795>
	       <default>	reduce using rule {126} (top_pat_list2)

<943>	top_pat_list2	->	pat ',' top_pat_list2 . 

	       <default>	reduce using rule {127} (top_pat_list2)

<944>	replacement_exp	->	'(' . exp ')' 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <1062>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<945>	primitive_exp	->	id . 

	       <default>	reduce using rule {227} (primitive_exp)

<946>	replacement_exp	->	primitive_app_exp . 	{ "postorder:" "preorder:" "before:" "bottomup:" "topdown:" "and" ';' "end" '}' '|' }
	tick	->	. 	{ '{' }
	primitive_app_exp	->	primitive_app_exp . simple_exp 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	            '\''	shift, and goto state <106>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <1063>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	             '|'	reduce using rule {305} (replacement_exp)
	             '}'	reduce using rule {305} (replacement_exp)
	           "end"	reduce using rule {305} (replacement_exp)
	             ';'	reduce using rule {305} (replacement_exp)
	           "and"	reduce using rule {305} (replacement_exp)
	      "topdown:"	reduce using rule {305} (replacement_exp)
	     "bottomup:"	reduce using rule {305} (replacement_exp)
	       "before:"	reduce using rule {305} (replacement_exp)
	     "preorder:"	reduce using rule {305} (replacement_exp)
	    "postorder:"	reduce using rule {305} (replacement_exp)
	             '{'	reduce using rule {244} (tick)

<947>	primitive_app_exp	->	primitive_exp . 

	       <default>	reduce using rule {225} (primitive_app_exp)

<948>	replacement_exp	->	list_exp . 

	       <default>	reduce using rule {306} (replacement_exp)

<949>	return_exp	->	"return" replacement_exp . 

	       <default>	reduce using rule {302} (return_exp)

<950>	return_ty	->	return_ty '*' . 

	       <default>	reduce using rule {143} (return_ty)

<951>	tick	->	. 	{ '{' }
	return_ty	->	return_ty '[' . exp ']' 
	return_ty	->	return_ty '[' . ']' 

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             ']'	shift, and goto state <1064>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <1065>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<952>	fun_rule	->	fun_rule_head ':' return_ty ':' . fun_action 

	             '{'	shift, and goto state <638>
	        "return"	shift, and goto state <797>
	      return_exp	goto state <800>
	      brace_body	goto state <801>
	      fun_action	goto state <1066>

<953>	return_ty	->	return_ty '&' . 

	       <default>	reduce using rule {144} (return_ty)

<954>	fun_rule	->	fun_rule_head ':' return_ty where_or_if . exp ':' fun_action 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <1067>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<955>	fun_rule	->	fun_rule_head where_or_if exp ':' . fun_action 

	             '{'	shift, and goto state <638>
	        "return"	shift, and goto state <797>
	      return_exp	goto state <800>
	      brace_body	goto state <801>
	      fun_action	goto state <1068>

<956>	fun_arg	->	id ':' ty . 	{ ',' ')' }
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	       <default>	reduce using rule {623} (fun_arg)

<957>	function_def	->	"function" cons_or_string '(' fun_args ')' "return" . ty "is" defs "begin" stmt_list "end" ';' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <1069>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<958>	fun_args1	->	fun_arg ',' fun_args . 

	       <default>	reduce using rule {622} (fun_args1)

<959>	defs	->	. 	{ "begin" }
	function_def	->	"procedure" cons_or_string '(' fun_args ')' "is" . defs "begin" stmt_list "end" ';' 

	          ID_TOK	shift, and goto state <93>
	          "type"	shift, and goto state <23>
	      "datatype"	shift, and goto state <29>
	      "function"	shift, and goto state <36>
	     "procedure"	shift, and goto state <37>
	        "module"	shift, and goto state <38>
	     "signature"	shift, and goto state <39>
	              id	goto state <222>
	   datatype_decl	goto state <223>
	       type_decl	goto state <224>
	             def	goto state <225>
	    compound_def	goto state <226>
	    function_def	goto state <78>
	      module_def	goto state <79>
	   signature_def	goto state <80>
	            defs	goto state <1070>
	       <default>	reduce using rule {639} (defs)

<960>	sig	->	sig . '(' sigs ')' 
	sig	->	sig . '.' id 
	labeled_sig	->	id ':' sig . 	{ ',' ')' }

	             '('	shift, and goto state <963>
	             '.'	shift, and goto state <964>
	       <default>	reduce using rule {629} (labeled_sig)

<961>	labeled_sigs	->	labeled_sig ',' labeled_sigs . 

	       <default>	reduce using rule {628} (labeled_sigs)

<962>	sig	->	"begin" defs . "end" 

	           "end"	shift, and goto state <1071>

<963>	sig	->	sig '(' . sigs ')' 

	          ID_TOK	shift, and goto state <93>
	         "begin"	shift, and goto state <812>
	              id	goto state <813>
	             sig	goto state <1072>
	            sigs	goto state <1073>

<964>	sig	->	sig '.' . id 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <1074>

<965>	defs	->	. 	{ "end" }
	module_def	->	"module" cons_or_string module_args module_sig "is" "begin" . defs "end" ';' 

	          ID_TOK	shift, and goto state <93>
	          "type"	shift, and goto state <23>
	      "datatype"	shift, and goto state <29>
	      "function"	shift, and goto state <36>
	     "procedure"	shift, and goto state <37>
	        "module"	shift, and goto state <38>
	     "signature"	shift, and goto state <39>
	              id	goto state <222>
	   datatype_decl	goto state <223>
	       type_decl	goto state <224>
	             def	goto state <225>
	    compound_def	goto state <226>
	    function_def	goto state <78>
	      module_def	goto state <79>
	   signature_def	goto state <80>
	            defs	goto state <1075>
	       <default>	reduce using rule {639} (defs)

<966>	signature_def	->	"signature" cons_or_string module_args "is" sig ';' . 

	       <default>	reduce using rule {632} (signature_def)

<967>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	def	->	id ':' ty ":=" exp . ';' 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	             ';'	shift, and goto state <1076>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>

<968>	compound_stmt	->	"declare" defs "begin" stmt_list "end" ';' . 

	       <default>	reduce using rule {656} (compound_stmt)

<969>	graph_class_decl	->	"graphtype" id inherit_list_opt qualifiers_opt '(' <480> . node_spec <481> edge_spec ')' brace_body ';' 
	node_spec	->	. 	{ "edges:" ')' }

	        "nodes:"	shift, and goto state <1077>
	       node_spec	goto state <1078>
	       <default>	reduce using rule {690} (node_spec)

<970>	grs_data_declarations	->	. 	{ "forall" '}' '(' CONS_TOK ID_TOK '!' '~' "if" }
	graph_rewrite_decl	->	"graphrewrite" id '(' fun_args ')' '{' . grs_sections '}' 

	    grs_sections	goto state <1079>
	grs_data_declarations	goto state <1080>
	       <default>	reduce using rule {725} (grs_data_declarations)

<971>	graph_rewrite_decl	->	"graphrewrite" id '(' fun_args ')' '=' . "begin" grs_sections "end" "graphrewrite" ';' 

	         "begin"	shift, and goto state <1081>

<972>	inherited_opt	->	"inherited" . ty 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <1082>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<973>	protocol	->	ty inherited_opt . synthesized_opt 
	synthesized_opt	->	. 	{ ',' ')' }

	             ':'	shift, and goto state <1083>
	   "synthesized"	shift, and goto state <1084>
	 synthesized_opt	goto state <1085>
	       <default>	reduce using rule {572} (synthesized_opt)

<974>	rewrite_class_decl	->	rewrite_ "class" id '(' protocols ')' . inherit_list_opt qualifiers_opt brace_body ';' 
	inherit_list_opt	->	. 	{ "::" '{' '!' }

	             ':'	shift, and goto state <405>
	inherit_list_opt	goto state <1086>
	       <default>	reduce using rule {477} (inherit_list_opt)

<975>	protocols	->	protocol ',' . protocols 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <822>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	       protocols	goto state <1087>
	        protocol	goto state <824>
	         setl_ty	goto state <168>

<976>	rewrite_index	->	simple_ty . '=' id_or_cons 
	rewrite_index	->	simple_ty . '=' "extern" id_or_cons 

	             '='	shift, and goto state <1088>

<977>	rewrite_indexings	->	"index:" rewrite_indices . ';' 

	             ';'	shift, and goto state <1089>

<978>	rewrite_indices	->	rewrite_index . 	{ ';' }
	rewrite_indices	->	rewrite_index . ',' rewrite_indices 

	             ','	shift, and goto state <1090>
	       <default>	reduce using rule {580} (rewrite_indices)

<979>	rewrite_mode	->	"topdown:" . 

	       <default>	reduce using rule {591} (rewrite_mode)

<980>	rewrite_mode	->	"bottomup:" . 

	       <default>	reduce using rule {592} (rewrite_mode)

<981>	rewrite_mode	->	"before:" . 

	       <default>	reduce using rule {593} (rewrite_mode)

<982>	rewrite_mode	->	"preorder:" . 

	       <default>	reduce using rule {594} (rewrite_mode)

<983>	rewrite_mode	->	"postorder:" . 

	       <default>	reduce using rule {595} (rewrite_mode)

<984>	rewrite_decl	->	rewrite_ id <476> '{' rewrite_indexings case_or_bar_rules . '}' ';' 

	             '}'	shift, and goto state <1091>

<985>	case_or_bar_rules	->	case_rules . 

	       <default>	reduce using rule {281} (case_or_bar_rules)

<986>	case_or_bar_rules	->	bar_rules . 

	       <default>	reduce using rule {282} (case_or_bar_rules)

<987>	rewrite_mode	->	. 	{ "case" }
	case_rules	->	a_case_rule . 	{ "end" '}' }
	case_rules	->	a_case_rule . case_rules 

	      "topdown:"	shift, and goto state <979>
	     "bottomup:"	shift, and goto state <980>
	       "before:"	shift, and goto state <981>
	     "preorder:"	shift, and goto state <982>
	    "postorder:"	shift, and goto state <983>
	      case_rules	goto state <1092>
	     a_case_rule	goto state <987>
	    rewrite_mode	goto state <1093>
	          "case"	reduce using rule {590} (rewrite_mode)
	             '}'	reduce using rule {283} (case_rules)
	           "end"	reduce using rule {283} (case_rules)

<988>	bar_rules	->	a_bar_rule . 	{ "end" '}' }
	bar_rules	->	a_bar_rule . '|' bar_rules 

	             '|'	shift, and goto state <1094>
	       <default>	reduce using rule {285} (bar_rules)

<989>	line_number	->	. 	{ ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '!' "lexeme" }
	a_case_rule	->	rewrite_mode . case_rule 
	a_bar_rule	->	rewrite_mode . bar_rule rewrite_mode 

	          "case"	shift, and goto state <1095>
	           case_	goto state <1096>
	       case_rule	goto state <1097>
	        bar_rule	goto state <1098>
	     line_number	goto state <1099>
	       <default>	reduce using rule {294} (line_number)

<990>	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" '(' protocols . ')' qualifiers_opt <477> '{' rewrite_indexings case_or_bar_rules '}' 
	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" '(' protocols . ')' qualifiers_opt <478> "of" rewrite_indexings case_or_bar_rules "end" "rewrite" ';' 

	             ')'	shift, and goto state <1100>

<991>	syntax_class_decl	->	syntax_ "class" id inherit_list_opt qualifiers_opt brace_body . ';' 

	             ';'	shift, and goto state <1101>

<992>	<471>	->	. 	{ '}' ID_TOK }
	syntax_decl	->	syntax_ id <470> '{' prec_rules expect_ . <471> bnf_rules '}' ';' 

	           <471>	goto state <1102>
	       <default>	reduce using rule {767} (<471>)

<993>	simple_term1	->	'#' '[' . ']' 
	simple_term1	->	'#' '[' . ty "..." ty ']' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             ']'	shift, and goto state <1103>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <1104>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<994>	simple_term1	->	'#' '(' . ')' 
	simple_term1	->	'#' '(' . ty "..." ty ')' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             ')'	shift, and goto state <1105>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <1106>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<995>	simple_term1	->	'#' '{' . ty "..." ty '}' 
	simple_term1	->	'#' '{' . '}' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	             '}'	shift, and goto state <1107>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <1108>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<996>	simple_term1	->	"[|" ty . "|]" 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	            "|]"	shift, and goto state <1109>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>

<997>	simple_term1	->	"(|" ty . "|)" 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	            "|)"	shift, and goto state <1110>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>

<998>	simple_term1	->	"{|" ty . "|}" 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	            "|}"	shift, and goto state <1111>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>

<999>	term	->	'_' inherit_list_opt . opt_with 
	opt_with	->	. 	{ "law" "private" "protected" "public" "and" ';' "type" '|' "where" }

	          "with"	shift, and goto state <1112>
	        opt_with	goto state <1113>
	       <default>	reduce using rule {383} (opt_with)

<1000>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	simple_term	->	"view" exp . "=>" simple_term 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "=>"	shift, and goto state <1114>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>

<1001>	simple_term	->	"virtual" simple_term . 

	       <default>	reduce using rule {388} (simple_term)

<1002>	term	->	lexeme_ "class" . id 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <1115>

<1003>	simple_term1	->	id_or_cons "<=>" . string 

	      STRING_TOK	shift, and goto state <95>
	          string	goto state <1116>

<1004>	simple_term1	->	id_or_cons string . 

	       <default>	reduce using rule {390} (simple_term1)

<1005>	simple_term1	->	id_or_cons regexp . 

	       <default>	reduce using rule {391} (simple_term1)

<1006>	opt_of	->	"of" . 

	       <default>	reduce using rule {406} (opt_of)

<1007>	simple_term1	->	cons_or_string opt_of . ty_list2 
	simple_term1	->	cons_or_string opt_of . ty 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <1117>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	        ty_list2	goto state <1118>
	         setl_ty	goto state <168>

<1008>	terms1	->	term '|' . terms1 

	        "lexeme"	shift, and goto state <8>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	             '#'	shift, and goto state <830>
	            "[|"	shift, and goto state <831>
	            "(|"	shift, and goto state <832>
	            "{|"	shift, and goto state <833>
	             '_'	shift, and goto state <834>
	          "view"	shift, and goto state <835>
	       "virtual"	shift, and goto state <836>
	         lexeme_	goto state <837>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <838>
	  cons_or_string	goto state <839>
	          string	goto state <840>
	          terms1	goto state <1119>
	            term	goto state <843>
	     simple_term	goto state <844>
	    simple_term1	goto state <845>

<1009>	term	->	simple_term inherit_list_opt . opt_with view_predicate 
	term	->	simple_term inherit_list_opt . "=>" print_formats opt_with view_predicate 
	opt_with	->	. 	{ "law" "private" "protected" "public" "and" ';' "type" '|' "where" "if" }

	            "=>"	shift, and goto state <1120>
	          "with"	shift, and goto state <1112>
	        opt_with	goto state <1121>
	       <default>	reduce using rule {383} (opt_with)

<1010>	simple_term	->	simple_term1 '!' . 

	       <default>	reduce using rule {386} (simple_term)

<1011>	inference_class_decl	->	inference_ "class" id inherit_list_opt qualifiers_opt brace_body . ';' 

	             ';'	shift, and goto state <1122>

<1012>	inference_decl	->	inference_ id '{' inference_rules '}' ';' . 

	       <default>	reduce using rule {508} (inference_decl)

<1013>	antecedent	->	"match" simple_antecedent . 

	       <default>	reduce using rule {517} (antecedent)

<1014>	antecedent	->	'~' simple_antecedent . 

	       <default>	reduce using rule {518} (antecedent)

<1015>	<469>	->	. 	{ "ran" "dom" "arb" "setof" '\'' "--" "++" '-' '&' ".(" "{|" "(|" "[|" '{' '(' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK STRING_TOK CONS_EXP CONS_TOK ID_TOK '!' '~' '*' }
	simple_antecedent	->	pat where_or_if . <469> exp 

	           <469>	goto state <1123>
	       <default>	reduce using rule {765} (<469>)

<1016>	inference_rule	->	<468> antecedents LONG_BAR . conclusions ';' 

	             '~'	shift, and goto state <1124>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '{'	shift, and goto state <638>
	              id	goto state <945>
	            cons	goto state <112>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	primitive_app_exp	goto state <1125>
	   primitive_exp	goto state <947>
	      brace_body	goto state <1126>
	     conclusions	goto state <1127>
	      conclusion	goto state <1128>

<1017>	antecedents2	->	antecedent "and" . antecedents2 

	        "lexeme"	shift, and goto state <8>
	         "match"	shift, and goto state <850>
	             '~'	shift, and goto state <851>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <852>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	    antecedents2	goto state <1129>
	      antecedent	goto state <855>
	simple_antecedent	goto state <856>

<1018>	rewrite_mode	->	. 	{ ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '!' "lexeme" "case" }
	match_decl	->	match_or_matchall match_ty match_options match_exps "of" <454> . case_or_bar_rules "end" "match" ';' 

	      "topdown:"	shift, and goto state <979>
	     "bottomup:"	shift, and goto state <980>
	       "before:"	shift, and goto state <981>
	     "preorder:"	shift, and goto state <982>
	    "postorder:"	shift, and goto state <983>
	case_or_bar_rules	goto state <1130>
	      case_rules	goto state <985>
	       bar_rules	goto state <986>
	     a_case_rule	goto state <987>
	      a_bar_rule	goto state <988>
	    rewrite_mode	goto state <989>
	       <default>	reduce using rule {590} (rewrite_mode)

<1019>	rewrite_mode	->	. 	{ ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '!' "lexeme" "case" }
	match_decl	->	match_or_matchall match_ty match_options match_exps <453> '{' . case_or_bar_rules '}' 

	      "topdown:"	shift, and goto state <979>
	     "bottomup:"	shift, and goto state <980>
	       "before:"	shift, and goto state <981>
	     "preorder:"	shift, and goto state <982>
	    "postorder:"	shift, and goto state <983>
	case_or_bar_rules	goto state <1131>
	      case_rules	goto state <985>
	       bar_rules	goto state <986>
	     a_case_rule	goto state <987>
	      a_bar_rule	goto state <988>
	    rewrite_mode	goto state <989>
	       <default>	reduce using rule {590} (rewrite_mode)

<1020>	match_exps	->	match_exp "and" match_exps . 

	       <default>	reduce using rule {279} (match_exps)

<1021>	exp_list	->	. 	{ ')' }
	cons_exp	->	cons_id tick '(' exp_list ')' '(' . exp_list ')' 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <122>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        exp_list	goto state <1132>
	       exp_list2	goto state <131>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	             ')'	reduce using rule {262} (exp_list)
	             '{'	reduce using rule {244} (tick)

<1022>	lab_exp_list	->	. 	{ '}' }
	cons_exp	->	cons_id tick '(' exp_list ')' '{' . lab_exp_list '}' 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <505>
	         lab_exp	goto state <506>
	    lab_exp_list	goto state <1133>
	   lab_exp_list2	goto state <508>
	       <default>	reduce using rule {267} (lab_exp_list)

<1023>	guard_exp3	->	"where" . exp 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <1134>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<1024>	set_comprehension	->	"setof" '{' exp ':' generator_list guard_exp3 . '}' 

	             '}'	shift, and goto state <1135>

<1025>	setl_ty	->	"mapof" '<' ty ',' ty '>' . 

	       <default>	reduce using rule {664} (setl_ty)

<1026>	setl_ty	->	"multimapof" '<' ty ',' ty '>' . 

	       <default>	reduce using rule {665} (setl_ty)

<1027>	else_clause	->	"end" "if" . 

	       <default>	reduce using rule {650} (else_clause)

<1028>	else_clause	->	"else" stmt_list . "end" "if" 

	           "end"	shift, and goto state <1136>

<1029>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	else_clause	->	"elsif" exp . "then" stmt_list else_clause 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "then"	shift, and goto state <1137>
	          "less"	shift, and goto state <301>

<1030>	stmt	->	"if" exp "then" stmt_list else_clause ';' . 

	       <default>	reduce using rule {643} (stmt)

<1031>	stmt	->	"while" exp "loop" stmt_list "end" "loop" . ';' 

	             ';'	shift, and goto state <1138>

<1032>	aggr_pat	->	'#' '[' pat_list1 "..." pat . ']' 
	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	logical_pat	->	pat . "&&" pat 

	             ']'	shift, and goto state <1139>
	            "&&"	shift, and goto state <573>
	            "||"	shift, and goto state <574>
	      "implies:"	shift, and goto state <575>
	          "xor:"	shift, and goto state <576>
	        "equiv:"	shift, and goto state <577>

<1033>	aggr_pat	->	'#' '(' pat_list1 "..." pat . ')' 
	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	logical_pat	->	pat . "&&" pat 

	             ')'	shift, and goto state <1140>
	            "&&"	shift, and goto state <573>
	            "||"	shift, and goto state <574>
	      "implies:"	shift, and goto state <575>
	          "xor:"	shift, and goto state <576>
	        "equiv:"	shift, and goto state <577>

<1034>	aggr_pat	->	'#' '{' pat_list1 "..." pat . '}' 
	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	logical_pat	->	pat . "&&" pat 

	             '}'	shift, and goto state <1141>
	            "&&"	shift, and goto state <573>
	            "||"	shift, and goto state <574>
	      "implies:"	shift, and goto state <575>
	          "xor:"	shift, and goto state <576>
	        "equiv:"	shift, and goto state <577>

<1035>	prim_pat	->	'(' pat ':' ty ')' . 

	       <default>	reduce using rule {84} (prim_pat)

<1036>	pat_opt	->	':' pat . 	{ '|' }
	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	logical_pat	->	pat . "&&" pat 

	            "&&"	shift, and goto state <573>
	            "||"	shift, and goto state <574>
	      "implies:"	shift, and goto state <575>
	          "xor:"	shift, and goto state <576>
	        "equiv:"	shift, and goto state <577>
	       <default>	reduce using rule {115} (pat_opt)

<1037>	dots_opt	->	. 	{ ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '!' "lexeme" }
	aggr_pat	->	"[|" '|' pat pat_opt '|' . dots_opt pat_list1 dots_opt "|]" 

	           "..."	shift, and goto state <554>
	        dots_opt	goto state <1142>
	       <default>	reduce using rule {112} (dots_opt)

<1038>	aggr_pat	->	"[|" dots_opt pat_list1 dots_opt "|]" . 

	       <default>	reduce using rule {105} (aggr_pat)

<1039>	dots_opt	->	. 	{ ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '!' "lexeme" }
	aggr_pat	->	"(|" '|' pat pat_opt '|' . dots_opt pat_list1 dots_opt "|)" 

	           "..."	shift, and goto state <554>
	        dots_opt	goto state <1143>
	       <default>	reduce using rule {112} (dots_opt)

<1040>	aggr_pat	->	"(|" dots_opt pat_list1 dots_opt "|)" . 

	       <default>	reduce using rule {106} (aggr_pat)

<1041>	dots_opt	->	. 	{ ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '!' "lexeme" }
	aggr_pat	->	"{|" '|' pat pat_opt '|' . dots_opt pat_list1 dots_opt "|}" 

	           "..."	shift, and goto state <554>
	        dots_opt	goto state <1144>
	       <default>	reduce using rule {112} (dots_opt)

<1042>	aggr_pat	->	"{|" dots_opt pat_list1 dots_opt "|}" . 

	       <default>	reduce using rule {107} (aggr_pat)

<1043>	stmt	->	"forall" generator_list "loop" stmt_list "end" "loop" . ';' 

	             ';'	shift, and goto state <1145>

<1044>	switch_exp	->	. 	{ "law" "virtual" "view" "private" "protected" "public" "and" ';' "type" '_' "{|" "(|" "[|" '#' STRING_TOK CONS_TOK ID_TOK "where" "lexeme" }
	datatype_def	->	id tyvars inherit_list_opt qualifiers_opt '=' <464> . switch_exp terms <465> datatype_body 

	         "match"	shift, and goto state <1146>
	      switch_exp	goto state <1147>
	       <default>	reduce using rule {362} (switch_exp)

<1045>	<466>	->	. 	{ ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK "lexeme" }
	view_defs	->	view_def '|' . view_defs 

	       view_defs	goto state <1148>
	        view_def	goto state <906>
	           <466>	goto state <907>
	       <default>	reduce using rule {762} (<466>)

<1046>	view_def	->	<466> simple_pat . ':' app_exp selectors_opt 

	             ':'	shift, and goto state <1149>

<1047>	law_defs	->	law_def and_or_bar law_defs . 

	       <default>	reduce using rule {444} (law_defs)

<1048>	patvars	->	. 	{ '=' '|' "where" "if" }
	law_def	->	invertible id <467> . patvars guard_exp2 '=' pat 

	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <1150>
	              id	goto state <584>
	             var	goto state <585>
	        var_list	goto state <1151>
	         patvars	goto state <1152>
	       <default>	reduce using rule {452} (patvars)

<1049>	ty_defs_opt	->	"where" "type" type_defs . 

	       <default>	reduce using rule {424} (ty_defs_opt)

<1050>	refine_def	->	"class" id_or_cons "::" '~' id_or_cons '(' . ')' brace_body 

	             ')'	shift, and goto state <1153>

<1051>	refine_def	->	"class" id_or_cons "::" id_or_cons '(' ')' . brace_body 

	             '{'	shift, and goto state <638>
	      brace_body	goto state <1154>

<1052>	print_formats	->	print_format print_formats . 

	       <default>	reduce using rule {408} (print_formats)

<1053>	inherit_ty	->	id ty_args . 

	       <default>	reduce using rule {147} (inherit_ty)

<1054>	brace_body	->	'{' <459> decl_list <460> . '}' 

	             '}'	shift, and goto state <1155>

<1055>	attribgram_class_decl	->	"attributegrammar" "class" id inherit_list_opt qualifiers_opt brace_body ';' . 

	       <default>	reduce using rule {538} (attribgram_class_decl)

<1056>	prec_rule	->	"left:" integer production . ';' 

	             ';'	shift, and goto state <1156>

<1057>	<475>	->	. 	{ "prec:" '?' '{' '(' CHAR_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK }
	production	->	<474> . a_production 
	a_production	->	. 	{ ';' '|' }

	    a_production	goto state <1157>
	           <475>	goto state <1158>
	          ID_TOK	reduce using rule {771} (<475>)
	        CONS_TOK	reduce using rule {771} (<475>)
	      STRING_TOK	reduce using rule {771} (<475>)
	      REGEXP_TOK	reduce using rule {771} (<475>)
	        CHAR_TOK	reduce using rule {771} (<475>)
	             '('	reduce using rule {771} (<475>)
	             '{'	reduce using rule {771} (<475>)
	             '?'	reduce using rule {771} (<475>)
	         "prec:"	reduce using rule {771} (<475>)
	             '|'	reduce using rule {553} (a_production)
	             ';'	reduce using rule {553} (a_production)

<1058>	prec_rule	->	"right:" integer production . ';' 

	             ';'	shift, and goto state <1159>

<1059>	expect_	->	"expect:" '_' . ';' 

	             ';'	shift, and goto state <1160>

<1060>	expect_	->	"expect:" integer . ';' 

	             ';'	shift, and goto state <1161>

<1061>	attribgram_decl	->	"attributegrammar" id <472> '{' prec_rules expect_ <473> . bnf_rules '}' ';' 
	bnf_rules	->	. 	{ '}' }
	line_number	->	. 	{ ID_TOK }

	     line_number	goto state <1162>
	       bnf_rules	goto state <1163>
	        bnf_rule	goto state <1164>
	             '}'	reduce using rule {535} (bnf_rules)
	          ID_TOK	reduce using rule {294} (line_number)

<1062>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	replacement_exp	->	'(' exp . ')' 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	             ')'	shift, and goto state <1165>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>

<1063>	simple_exp	->	simple_exp . "->" '#' integer 
	simple_exp	->	simple_exp . '.' id 
	simple_exp	->	simple_exp . '.' '#' integer 
	simple_exp	->	simple_exp . '[' exp ']' 
	simple_exp	->	simple_exp . "->" id 
	primitive_app_exp	->	primitive_app_exp simple_exp . 	{ "postorder:" "preorder:" "before:" "bottomup:" "topdown:" "and" ';' "end" '\'' ".(" "{|" "(|" "[|" '}' '{' '(' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK STRING_TOK CONS_EXP CONS_TOK ID_TOK '|' }

	             '['	shift, and goto state <303>
	            "->"	shift, and goto state <304>
	             '.'	shift, and goto state <305>
	       <default>	reduce using rule {226} (primitive_app_exp)

<1064>	return_ty	->	return_ty '[' ']' . 

	       <default>	reduce using rule {145} (return_ty)

<1065>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 
	return_ty	->	return_ty '[' exp . ']' 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	             ']'	shift, and goto state <1166>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>

<1066>	fun_rule	->	fun_rule_head ':' return_ty ':' fun_action . 

	       <default>	reduce using rule {605} (fun_rule)

<1067>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	fun_rule	->	fun_rule_head ':' return_ty where_or_if exp . ':' fun_action 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	             ':'	shift, and goto state <1167>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>

<1068>	fun_rule	->	fun_rule_head where_or_if exp ':' fun_action . 

	       <default>	reduce using rule {604} (fun_rule)

<1069>	function_def	->	"function" cons_or_string '(' fun_args ')' "return" ty . "is" defs "begin" stmt_list "end" ';' 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	            "is"	shift, and goto state <1168>

<1070>	function_def	->	"procedure" cons_or_string '(' fun_args ')' "is" defs . "begin" stmt_list "end" ';' 

	         "begin"	shift, and goto state <1169>

<1071>	sig	->	"begin" defs "end" . 

	       <default>	reduce using rule {636} (sig)

<1072>	sig	->	sig . '(' sigs ')' 
	sig	->	sig . '.' id 
	sigs	->	sig . 	{ ')' }
	sigs	->	sig . ',' sigs 

	             '('	shift, and goto state <963>
	             ','	shift, and goto state <1170>
	             '.'	shift, and goto state <964>
	       <default>	reduce using rule {637} (sigs)

<1073>	sig	->	sig '(' sigs . ')' 

	             ')'	shift, and goto state <1171>

<1074>	sig	->	sig '.' id . 

	       <default>	reduce using rule {635} (sig)

<1075>	module_def	->	"module" cons_or_string module_args module_sig "is" "begin" defs . "end" ';' 

	           "end"	shift, and goto state <1172>

<1076>	def	->	id ':' ty ":=" exp ';' . 

	       <default>	reduce using rule {610} (def)

<1077>	node_spec	->	"nodes:" . node_defs 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <1173>
	       node_defs	goto state <1174>
	        node_def	goto state <1175>

<1078>	<481>	->	. 	{ "edges:" ')' }
	graph_class_decl	->	"graphtype" id inherit_list_opt qualifiers_opt '(' <480> node_spec . <481> edge_spec ')' brace_body ';' 

	           <481>	goto state <1176>
	       <default>	reduce using rule {777} (<481>)

<1079>	graph_rewrite_decl	->	"graphrewrite" id '(' fun_args ')' '{' grs_sections . '}' 

	             '}'	shift, and goto state <1177>

<1080>	grs_sections	->	grs_data_declarations . grs_index_declarations grs_strata 
	grs_index_declarations	->	. 	{ "forall" "end" '}' '(' CONS_TOK ID_TOK '!' '~' "if" }

	grs_index_declarations	goto state <1178>
	       <default>	reduce using rule {726} (grs_index_declarations)

<1081>	graph_rewrite_decl	->	"graphrewrite" id '(' fun_args ')' '=' "begin" . grs_sections "end" "graphrewrite" ';' 
	grs_data_declarations	->	. 	{ "forall" "end" '(' CONS_TOK ID_TOK '!' '~' "if" }

	    grs_sections	goto state <1179>
	grs_data_declarations	goto state <1080>
	       <default>	reduce using rule {725} (grs_data_declarations)

<1082>	inherited_opt	->	"inherited" ty . 	{ "synthesized" ',' ':' ')' }
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	       <default>	reduce using rule {571} (inherited_opt)

<1083>	synthesized_opt	->	':' . ty 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <1180>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<1084>	synthesized_opt	->	"synthesized" . ty 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <1181>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<1085>	protocol	->	ty inherited_opt synthesized_opt . 

	       <default>	reduce using rule {569} (protocol)

<1086>	rewrite_class_decl	->	rewrite_ "class" id '(' protocols ')' inherit_list_opt . qualifiers_opt brace_body ';' 
	qualifiers_opt	->	. 	{ '{' }

	             '!'	shift, and goto state <634>
	            "::"	shift, and goto state <635>
	  qualifiers_opt	goto state <1182>
	       <default>	reduce using rule {482} (qualifiers_opt)

<1087>	protocols	->	protocol ',' protocols . 

	       <default>	reduce using rule {568} (protocols)

<1088>	rewrite_index	->	simple_ty '=' . id_or_cons 
	rewrite_index	->	simple_ty '=' . "extern" id_or_cons 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        "extern"	shift, and goto state <1183>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <1184>

<1089>	rewrite_indexings	->	"index:" rewrite_indices ';' . 

	       <default>	reduce using rule {578} (rewrite_indexings)

<1090>	rewrite_indices	->	rewrite_index ',' . rewrite_indices 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <976>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	 rewrite_indices	goto state <1185>
	   rewrite_index	goto state <978>
	         setl_ty	goto state <168>

<1091>	rewrite_decl	->	rewrite_ id <476> '{' rewrite_indexings case_or_bar_rules '}' . ';' 

	             ';'	shift, and goto state <1186>

<1092>	case_rules	->	a_case_rule case_rules . 

	       <default>	reduce using rule {284} (case_rules)

<1093>	a_case_rule	->	rewrite_mode . case_rule 

	          "case"	shift, and goto state <1095>
	           case_	goto state <1096>
	       case_rule	goto state <1097>

<1094>	rewrite_mode	->	. 	{ ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '!' "lexeme" }
	bar_rules	->	a_bar_rule '|' . bar_rules 

	      "topdown:"	shift, and goto state <979>
	     "bottomup:"	shift, and goto state <980>
	       "before:"	shift, and goto state <981>
	     "preorder:"	shift, and goto state <982>
	    "postorder:"	shift, and goto state <983>
	       bar_rules	goto state <1187>
	      a_bar_rule	goto state <988>
	    rewrite_mode	goto state <1188>
	       <default>	reduce using rule {590} (rewrite_mode)

<1095>	case_	->	"case" . 

	       <default>	reduce using rule {3} (case_)

<1096>	case_rule	->	case_ . top_pat <455> guard_exp cost ':' <456> decl_list 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	         top_pat	goto state <1189>
	             pat	goto state <647>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	   top_pat_list2	goto state <648>

<1097>	a_case_rule	->	rewrite_mode case_rule . 

	       <default>	reduce using rule {287} (a_case_rule)

<1098>	rewrite_mode	->	. 	{ "end" '}' '|' }
	a_bar_rule	->	rewrite_mode bar_rule . rewrite_mode 

	      "topdown:"	shift, and goto state <979>
	     "bottomup:"	shift, and goto state <980>
	       "before:"	shift, and goto state <981>
	     "preorder:"	shift, and goto state <982>
	    "postorder:"	shift, and goto state <983>
	    rewrite_mode	goto state <1190>
	       <default>	reduce using rule {590} (rewrite_mode)

<1099>	bar_rule	->	line_number . id_or_cons "->" top_pat <457> guard_exp cost ':' bar_rule_action 
	bar_rule	->	line_number . top_pat <458> guard_exp cost ':' bar_rule_action 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <1191>
	            cons	goto state <1192>
	      id_or_cons	goto state <1193>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	         top_pat	goto state <1194>
	             pat	goto state <647>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	   top_pat_list2	goto state <648>

<1100>	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" '(' protocols ')' . qualifiers_opt <477> '{' rewrite_indexings case_or_bar_rules '}' 
	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" '(' protocols ')' . qualifiers_opt <478> "of" rewrite_indexings case_or_bar_rules "end" "rewrite" ';' 
	qualifiers_opt	->	. 	{ "of" '{' }

	             '!'	shift, and goto state <634>
	            "::"	shift, and goto state <635>
	  qualifiers_opt	goto state <1195>
	       <default>	reduce using rule {482} (qualifiers_opt)

<1101>	syntax_class_decl	->	syntax_ "class" id inherit_list_opt qualifiers_opt brace_body ';' . 

	       <default>	reduce using rule {526} (syntax_class_decl)

<1102>	bnf_rules	->	. 	{ '}' }
	syntax_decl	->	syntax_ id <470> '{' prec_rules expect_ <471> . bnf_rules '}' ';' 
	line_number	->	. 	{ ID_TOK }

	     line_number	goto state <1162>
	       bnf_rules	goto state <1196>
	        bnf_rule	goto state <1164>
	             '}'	reduce using rule {535} (bnf_rules)
	          ID_TOK	reduce using rule {294} (line_number)

<1103>	simple_term1	->	'#' '[' ']' . 

	       <default>	reduce using rule {396} (simple_term1)

<1104>	simple_term1	->	'#' '[' ty . "..." ty ']' 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	           "..."	shift, and goto state <1197>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>

<1105>	simple_term1	->	'#' '(' ')' . 

	       <default>	reduce using rule {397} (simple_term1)

<1106>	simple_term1	->	'#' '(' ty . "..." ty ')' 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	           "..."	shift, and goto state <1198>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>

<1107>	simple_term1	->	'#' '{' '}' . 

	       <default>	reduce using rule {398} (simple_term1)

<1108>	simple_term1	->	'#' '{' ty . "..." ty '}' 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	           "..."	shift, and goto state <1199>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>

<1109>	simple_term1	->	"[|" ty "|]" . 

	       <default>	reduce using rule {402} (simple_term1)

<1110>	simple_term1	->	"(|" ty "|)" . 

	       <default>	reduce using rule {403} (simple_term1)

<1111>	simple_term1	->	"{|" ty "|}" . 

	       <default>	reduce using rule {404} (simple_term1)

<1112>	opt_with	->	"with" . brace_body 

	             '{'	shift, and goto state <638>
	      brace_body	goto state <1200>

<1113>	term	->	'_' inherit_list_opt opt_with . 

	       <default>	reduce using rule {377} (term)

<1114>	simple_term	->	"view" exp "=>" . simple_term 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	             '#'	shift, and goto state <830>
	            "[|"	shift, and goto state <831>
	            "(|"	shift, and goto state <832>
	            "{|"	shift, and goto state <833>
	          "view"	shift, and goto state <835>
	       "virtual"	shift, and goto state <836>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <838>
	  cons_or_string	goto state <839>
	          string	goto state <840>
	     simple_term	goto state <1201>
	    simple_term1	goto state <845>

<1115>	term	->	lexeme_ "class" id . 

	       <default>	reduce using rule {380} (term)

<1116>	simple_term1	->	id_or_cons "<=>" string . 

	       <default>	reduce using rule {392} (simple_term1)

<1117>	simple_term1	->	cons_or_string opt_of ty . 	{ "law" "with" "private" "protected" "public" "and" ';' "type" ':' '!' "=>" '|' "where" "if" }
	ty_list2	->	ty . ',' ty 
	ty_list2	->	ty . ',' ty_list2 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             ','	shift, and goto state <342>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	       <default>	reduce using rule {394} (simple_term1)

<1118>	simple_term1	->	cons_or_string opt_of ty_list2 . 

	       <default>	reduce using rule {395} (simple_term1)

<1119>	terms1	->	term '|' terms1 . 

	       <default>	reduce using rule {376} (terms1)

<1120>	print_formats	->	. 	{ "law" "with" "private" "protected" "public" "and" ';' "type" '|' "where" "if" }
	term	->	simple_term inherit_list_opt "=>" . print_formats opt_with view_predicate 

	          ID_TOK	shift, and goto state <93>
	      STRING_TOK	shift, and goto state <95>
	         INT_TOK	shift, and goto state <96>
	        CHAR_TOK	shift, and goto state <98>
	             '['	shift, and goto state <916>
	             ']'	shift, and goto state <917>
	             '('	shift, and goto state <918>
	             ')'	shift, and goto state <919>
	             '{'	shift, and goto state <920>
	             '}'	shift, and goto state <921>
	             '_'	shift, and goto state <922>
	             '/'	shift, and goto state <923>
	             '^'	shift, and goto state <924>
	              id	goto state <925>
	          string	goto state <926>
	         integer	goto state <927>
	       character	goto state <928>
	   print_formats	goto state <1202>
	    print_format	goto state <930>
	special_print_format	goto state <931>
	       <default>	reduce using rule {407} (print_formats)

<1121>	term	->	simple_term inherit_list_opt opt_with . view_predicate 
	view_predicate	->	. 	{ "law" "private" "protected" "public" "and" ';' "type" '|' "where" }

	            "if"	shift, and goto state <1203>
	  view_predicate	goto state <1204>
	       <default>	reduce using rule {381} (view_predicate)

<1122>	inference_class_decl	->	inference_ "class" id inherit_list_opt qualifiers_opt brace_body ';' . 

	       <default>	reduce using rule {507} (inference_class_decl)

<1123>	simple_antecedent	->	pat where_or_if <469> . exp 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <1205>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<1124>	conclusion	->	'~' . primitive_app_exp 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	              id	goto state <945>
	            cons	goto state <112>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	primitive_app_exp	goto state <1206>
	   primitive_exp	goto state <947>

<1125>	conclusion	->	primitive_app_exp . 	{ "and" ';' }
	tick	->	. 	{ '{' }
	primitive_app_exp	->	primitive_app_exp . simple_exp 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	            '\''	shift, and goto state <106>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <1063>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	             ';'	reduce using rule {523} (conclusion)
	           "and"	reduce using rule {523} (conclusion)
	             '{'	reduce using rule {244} (tick)

<1126>	conclusion	->	brace_body . 

	       <default>	reduce using rule {525} (conclusion)

<1127>	inference_rule	->	<468> antecedents LONG_BAR conclusions . ';' 

	             ';'	shift, and goto state <1207>

<1128>	conclusions	->	conclusion . 	{ ';' }
	conclusions	->	conclusion . "and" conclusions 

	           "and"	shift, and goto state <1208>
	       <default>	reduce using rule {521} (conclusions)

<1129>	antecedents2	->	antecedent "and" antecedents2 . 

	       <default>	reduce using rule {515} (antecedents2)

<1130>	match_decl	->	match_or_matchall match_ty match_options match_exps "of" <454> case_or_bar_rules . "end" "match" ';' 

	           "end"	shift, and goto state <1209>

<1131>	match_decl	->	match_or_matchall match_ty match_options match_exps <453> '{' case_or_bar_rules . '}' 

	             '}'	shift, and goto state <1210>

<1132>	cons_exp	->	cons_id tick '(' exp_list ')' '(' exp_list . ')' 

	             ')'	shift, and goto state <1211>

<1133>	cons_exp	->	cons_id tick '(' exp_list ')' '{' lab_exp_list . '}' 

	             '}'	shift, and goto state <1212>

<1134>	guard_exp3	->	"where" exp . 	{ '}' }
	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {679} (guard_exp3)

<1135>	set_comprehension	->	"setof" '{' exp ':' generator_list guard_exp3 '}' . 

	       <default>	reduce using rule {677} (set_comprehension)

<1136>	else_clause	->	"else" stmt_list "end" . "if" 

	            "if"	shift, and goto state <1213>

<1137>	else_clause	->	"elsif" exp "then" . stmt_list else_clause 
	tick	->	. 	{ '{' }

	       "rewrite"	shift, and goto state <6>
	         "match"	shift, and goto state <10>
	             '*'	shift, and goto state <90>
	      "matchall"	shift, and goto state <11>
	     "matchscan"	shift, and goto state <12>
	            "if"	shift, and goto state <169>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "while"	shift, and goto state <170>
	        "return"	shift, and goto state <171>
	         "begin"	shift, and goto state <25>
	    "cutrewrite"	shift, and goto state <33>
	   "failrewrite"	shift, and goto state <34>
	        "forall"	shift, and goto state <172>
	       "declare"	shift, and goto state <40>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	        rewrite_	goto state <173>
	match_or_matchall	goto state <47>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <174>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	      match_decl	goto state <175>
	  rewriting_decl	goto state <176>
	replacement_decl	goto state <177>
	            stmt	goto state <178>
	       stmt_list	goto state <1214>
	   compound_stmt	goto state <180>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<1138>	stmt	->	"while" exp "loop" stmt_list "end" "loop" ';' . 

	       <default>	reduce using rule {642} (stmt)

<1139>	aggr_pat	->	'#' '[' pat_list1 "..." pat ']' . 

	       <default>	reduce using rule {97} (aggr_pat)

<1140>	aggr_pat	->	'#' '(' pat_list1 "..." pat ')' . 

	       <default>	reduce using rule {101} (aggr_pat)

<1141>	aggr_pat	->	'#' '{' pat_list1 "..." pat '}' . 

	       <default>	reduce using rule {99} (aggr_pat)

<1142>	aggr_pat	->	"[|" '|' pat pat_opt '|' dots_opt . pat_list1 dots_opt "|]" 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <540>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	       pat_list2	goto state <541>
	       pat_list1	goto state <1215>
	         big_pat	goto state <544>

<1143>	aggr_pat	->	"(|" '|' pat pat_opt '|' dots_opt . pat_list1 dots_opt "|)" 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <540>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	       pat_list2	goto state <541>
	       pat_list1	goto state <1216>
	         big_pat	goto state <544>

<1144>	aggr_pat	->	"{|" '|' pat pat_opt '|' dots_opt . pat_list1 dots_opt "|}" 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <540>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	       pat_list2	goto state <541>
	       pat_list1	goto state <1217>
	         big_pat	goto state <544>

<1145>	stmt	->	"forall" generator_list "loop" stmt_list "end" "loop" ';' . 

	       <default>	reduce using rule {644} (stmt)

<1146>	switch_exp	->	"match" . paren_exp 

	             '('	shift, and goto state <211>
	       paren_exp	goto state <1218>

<1147>	terms	->	. 	{ "law" "private" "protected" "public" "and" ';' "type" "where" }
	datatype_def	->	id tyvars inherit_list_opt qualifiers_opt '=' <464> switch_exp . terms <465> datatype_body 

	        "lexeme"	shift, and goto state <8>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	             '#'	shift, and goto state <830>
	            "[|"	shift, and goto state <831>
	            "(|"	shift, and goto state <832>
	            "{|"	shift, and goto state <833>
	             '_'	shift, and goto state <834>
	          "view"	shift, and goto state <835>
	       "virtual"	shift, and goto state <836>
	         lexeme_	goto state <837>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <838>
	  cons_or_string	goto state <839>
	          string	goto state <840>
	           terms	goto state <1219>
	          terms1	goto state <842>
	            term	goto state <843>
	     simple_term	goto state <844>
	    simple_term1	goto state <845>
	       <default>	reduce using rule {373} (terms)

<1148>	view_defs	->	view_def '|' view_defs . 

	       <default>	reduce using rule {434} (view_defs)

<1149>	view_def	->	<466> simple_pat ':' . app_exp selectors_opt 
	tick	->	. 	{ '{' }

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	            '\''	shift, and goto state <106>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	         app_exp	goto state <1220>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	       <default>	reduce using rule {244} (tick)

<1150>	patvars	->	'(' . var_list0 ')' 
	var_list0	->	. 	{ ')' }

	          ID_TOK	shift, and goto state <93>
	              id	goto state <584>
	             var	goto state <585>
	       var_list0	goto state <1221>
	        var_list	goto state <1222>
	       <default>	reduce using rule {369} (var_list0)

<1151>	patvars	->	var_list . 

	       <default>	reduce using rule {453} (patvars)

<1152>	guard_exp2	->	. 	{ '=' }
	law_def	->	invertible id <467> patvars . guard_exp2 '=' pat 

	            "if"	shift, and goto state <570>
	         "where"	shift, and goto state <571>
	             '|'	shift, and goto state <572>
	     where_or_if	goto state <1223>
	      guard_exp2	goto state <1224>
	       <default>	reduce using rule {450} (guard_exp2)

<1153>	refine_def	->	"class" id_or_cons "::" '~' id_or_cons '(' ')' . brace_body 

	             '{'	shift, and goto state <638>
	      brace_body	goto state <1225>

<1154>	refine_def	->	"class" id_or_cons "::" id_or_cons '(' ')' brace_body . 

	       <default>	reduce using rule {462} (refine_def)

<1155>	brace_body	->	'{' <459> decl_list <460> '}' . 

	       <default>	reduce using rule {310} (brace_body)

<1156>	prec_rule	->	"left:" integer production ';' . 

	       <default>	reduce using rule {530} (prec_rule)

<1157>	production	->	<474> a_production . 

	       <default>	reduce using rule {552} (production)

<1158>	a_production	->	<475> . symbol a_production 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	        CHAR_TOK	shift, and goto state <98>
	             '('	shift, and goto state <211>
	             '{'	shift, and goto state <638>
	             '?'	shift, and goto state <1226>
	         "prec:"	shift, and goto state <1227>
	              id	goto state <1228>
	            cons	goto state <1229>
	          string	goto state <1230>
	          regexp	goto state <1231>
	       character	goto state <1232>
	       paren_exp	goto state <1233>
	      brace_body	goto state <1234>
	          symbol	goto state <1235>

<1159>	prec_rule	->	"right:" integer production ';' . 

	       <default>	reduce using rule {531} (prec_rule)

<1160>	expect_	->	"expect:" '_' ';' . 

	       <default>	reduce using rule {534} (expect_)

<1161>	expect_	->	"expect:" integer ';' . 

	       <default>	reduce using rule {533} (expect_)

<1162>	bnf_rule	->	line_number . id ty_opt ':' alt_productions ';' 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <1236>

<1163>	attribgram_decl	->	"attributegrammar" id <472> '{' prec_rules expect_ <473> bnf_rules . '}' ';' 

	             '}'	shift, and goto state <1237>

<1164>	bnf_rules	->	. 	{ '}' }
	bnf_rules	->	bnf_rule . bnf_rules 
	line_number	->	. 	{ ID_TOK }

	     line_number	goto state <1162>
	       bnf_rules	goto state <1238>
	        bnf_rule	goto state <1164>
	             '}'	reduce using rule {535} (bnf_rules)
	          ID_TOK	reduce using rule {294} (line_number)

<1165>	replacement_exp	->	'(' exp ')' . 

	       <default>	reduce using rule {307} (replacement_exp)

<1166>	return_ty	->	return_ty '[' exp ']' . 

	       <default>	reduce using rule {146} (return_ty)

<1167>	fun_rule	->	fun_rule_head ':' return_ty where_or_if exp ':' . fun_action 

	             '{'	shift, and goto state <638>
	        "return"	shift, and goto state <797>
	      return_exp	goto state <800>
	      brace_body	goto state <801>
	      fun_action	goto state <1239>

<1168>	defs	->	. 	{ "begin" }
	function_def	->	"function" cons_or_string '(' fun_args ')' "return" ty "is" . defs "begin" stmt_list "end" ';' 

	          ID_TOK	shift, and goto state <93>
	          "type"	shift, and goto state <23>
	      "datatype"	shift, and goto state <29>
	      "function"	shift, and goto state <36>
	     "procedure"	shift, and goto state <37>
	        "module"	shift, and goto state <38>
	     "signature"	shift, and goto state <39>
	              id	goto state <222>
	   datatype_decl	goto state <223>
	       type_decl	goto state <224>
	             def	goto state <225>
	    compound_def	goto state <226>
	    function_def	goto state <78>
	      module_def	goto state <79>
	   signature_def	goto state <80>
	            defs	goto state <1240>
	       <default>	reduce using rule {639} (defs)

<1169>	function_def	->	"procedure" cons_or_string '(' fun_args ')' "is" defs "begin" . stmt_list "end" ';' 
	tick	->	. 	{ '{' }

	       "rewrite"	shift, and goto state <6>
	         "match"	shift, and goto state <10>
	             '*'	shift, and goto state <90>
	      "matchall"	shift, and goto state <11>
	     "matchscan"	shift, and goto state <12>
	            "if"	shift, and goto state <169>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "while"	shift, and goto state <170>
	        "return"	shift, and goto state <171>
	         "begin"	shift, and goto state <25>
	    "cutrewrite"	shift, and goto state <33>
	   "failrewrite"	shift, and goto state <34>
	        "forall"	shift, and goto state <172>
	       "declare"	shift, and goto state <40>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	        rewrite_	goto state <173>
	match_or_matchall	goto state <47>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <174>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	      match_decl	goto state <175>
	  rewriting_decl	goto state <176>
	replacement_decl	goto state <177>
	            stmt	goto state <178>
	       stmt_list	goto state <1241>
	   compound_stmt	goto state <180>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<1170>	sigs	->	sig ',' . sigs 

	          ID_TOK	shift, and goto state <93>
	         "begin"	shift, and goto state <812>
	              id	goto state <813>
	             sig	goto state <1072>
	            sigs	goto state <1242>

<1171>	sig	->	sig '(' sigs ')' . 

	       <default>	reduce using rule {634} (sig)

<1172>	module_def	->	"module" cons_or_string module_args module_sig "is" "begin" defs "end" . ';' 

	             ';'	shift, and goto state <1243>

<1173>	node_def	->	id . 	{ "edges:" "and" ')' '|' }
	node_def	->	id . opt_of ty hashfun eqfun 
	opt_of	->	. 	{ "dequeof" "priqueueof" "queueof" "multimapof" "mapof" "bagof" "setof" "tupleof" "listof" ".[" "signed" "unsigned" "const" "class" '{' '(' ID_TOK "finalizable" "collectable" }

	            "of"	shift, and goto state <1006>
	          opt_of	goto state <1244>
	             '|'	reduce using rule {695} (node_def)
	             ')'	reduce using rule {695} (node_def)
	           "and"	reduce using rule {695} (node_def)
	        "edges:"	reduce using rule {695} (node_def)
	   "collectable"	reduce using rule {405} (opt_of)
	   "finalizable"	reduce using rule {405} (opt_of)
	          ID_TOK	reduce using rule {405} (opt_of)
	             '('	reduce using rule {405} (opt_of)
	             '{'	reduce using rule {405} (opt_of)
	         "class"	reduce using rule {405} (opt_of)
	         "const"	reduce using rule {405} (opt_of)
	      "unsigned"	reduce using rule {405} (opt_of)
	        "signed"	reduce using rule {405} (opt_of)
	            ".["	reduce using rule {405} (opt_of)
	        "listof"	reduce using rule {405} (opt_of)
	       "tupleof"	reduce using rule {405} (opt_of)
	         "setof"	reduce using rule {405} (opt_of)
	         "bagof"	reduce using rule {405} (opt_of)
	         "mapof"	reduce using rule {405} (opt_of)
	    "multimapof"	reduce using rule {405} (opt_of)
	       "queueof"	reduce using rule {405} (opt_of)
	    "priqueueof"	reduce using rule {405} (opt_of)
	       "dequeof"	reduce using rule {405} (opt_of)

<1174>	node_spec	->	"nodes:" node_defs . 

	       <default>	reduce using rule {691} (node_spec)

<1175>	node_defs	->	node_def . 	{ "edges:" ')' }
	node_defs	->	node_def . "and" node_defs 
	node_defs	->	node_def . '|' node_defs 

	             '|'	shift, and goto state <1245>
	           "and"	shift, and goto state <1246>
	       <default>	reduce using rule {692} (node_defs)

<1176>	edge_spec	->	. 	{ ')' }
	graph_class_decl	->	"graphtype" id inherit_list_opt qualifiers_opt '(' <480> node_spec <481> . edge_spec ')' brace_body ';' 

	        "edges:"	shift, and goto state <1247>
	       edge_spec	goto state <1248>
	       <default>	reduce using rule {701} (edge_spec)

<1177>	graph_rewrite_decl	->	"graphrewrite" id '(' fun_args ')' '{' grs_sections '}' . 

	       <default>	reduce using rule {722} (graph_rewrite_decl)

<1178>	grs_sections	->	grs_data_declarations grs_index_declarations . grs_strata 
	grs_rules	->	. 	{ "end" '}' }

	            "if"	shift, and goto state <1249>
	             '~'	shift, and goto state <1250>
	             '!'	shift, and goto state <1251>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	             '('	shift, and goto state <1252>
	        "forall"	shift, and goto state <1253>
	          negate	goto state <1254>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <1255>
	      grs_strata	goto state <1256>
	     grs_stratum	goto state <1257>
	       grs_rules	goto state <1258>
	        grs_rule	goto state <1259>
	         grs_pat	goto state <1260>
	  grs_simple_pat	goto state <1261>
	       <default>	reduce using rule {729} (grs_rules)

<1179>	graph_rewrite_decl	->	"graphrewrite" id '(' fun_args ')' '=' "begin" grs_sections . "end" "graphrewrite" ';' 

	           "end"	shift, and goto state <1262>

<1180>	synthesized_opt	->	':' ty . 	{ ',' ')' }
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	       <default>	reduce using rule {574} (synthesized_opt)

<1181>	synthesized_opt	->	"synthesized" ty . 	{ ',' ')' }
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	       <default>	reduce using rule {573} (synthesized_opt)

<1182>	rewrite_class_decl	->	rewrite_ "class" id '(' protocols ')' inherit_list_opt qualifiers_opt . brace_body ';' 

	             '{'	shift, and goto state <638>
	      brace_body	goto state <1263>

<1183>	rewrite_index	->	simple_ty '=' "extern" . id_or_cons 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <1264>

<1184>	rewrite_index	->	simple_ty '=' id_or_cons . 

	       <default>	reduce using rule {582} (rewrite_index)

<1185>	rewrite_indices	->	rewrite_index ',' rewrite_indices . 

	       <default>	reduce using rule {581} (rewrite_indices)

<1186>	rewrite_decl	->	rewrite_ id <476> '{' rewrite_indexings case_or_bar_rules '}' ';' . 

	       <default>	reduce using rule {575} (rewrite_decl)

<1187>	bar_rules	->	a_bar_rule '|' bar_rules . 

	       <default>	reduce using rule {286} (bar_rules)

<1188>	line_number	->	. 	{ ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '!' "lexeme" }
	a_bar_rule	->	rewrite_mode . bar_rule rewrite_mode 

	        bar_rule	goto state <1098>
	     line_number	goto state <1099>
	       <default>	reduce using rule {294} (line_number)

<1189>	<455>	->	. 	{ '\\' ':' '|' "where" "if" }
	case_rule	->	case_ top_pat . <455> guard_exp cost ':' <456> decl_list 

	           <455>	goto state <1265>
	       <default>	reduce using rule {751} (<455>)

<1190>	a_bar_rule	->	rewrite_mode bar_rule rewrite_mode . 

	       <default>	reduce using rule {288} (a_bar_rule)

<1191>	prim_pat	->	id . simple_pat 
	prim_pat	->	id . 	{ '\\' ',' ':' "equiv:" "xor:" "implies:" "||" "&&" '|' "where" "if" }
	prim_pat	->	id . "as" pat 
	id_or_cons	->	id . 	{ "->" }

	        "lexeme"	shift, and goto state <8>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	            "as"	shift, and goto state <567>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	      simple_pat	goto state <568>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	            "if"	reduce using rule {73} (prim_pat)
	         "where"	reduce using rule {73} (prim_pat)
	             '|'	reduce using rule {73} (prim_pat)
	            "&&"	reduce using rule {73} (prim_pat)
	            "||"	reduce using rule {73} (prim_pat)
	      "implies:"	reduce using rule {73} (prim_pat)
	          "xor:"	reduce using rule {73} (prim_pat)
	        "equiv:"	reduce using rule {73} (prim_pat)
	             ':'	reduce using rule {73} (prim_pat)
	             ','	reduce using rule {73} (prim_pat)
	            '\\'	reduce using rule {73} (prim_pat)
	            "->"	reduce using rule {28} (id_or_cons)

<1192>	prim_pat	->	cons . simple_pat 
	prim_pat	->	cons . 	{ '\\' ',' ':' "equiv:" "xor:" "implies:" "||" "&&" '|' "where" "if" }
	id_or_cons	->	cons . 	{ "->" }

	        "lexeme"	shift, and goto state <8>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	      simple_pat	goto state <569>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	            "if"	reduce using rule {85} (prim_pat)
	         "where"	reduce using rule {85} (prim_pat)
	             '|'	reduce using rule {85} (prim_pat)
	            "&&"	reduce using rule {85} (prim_pat)
	            "||"	reduce using rule {85} (prim_pat)
	      "implies:"	reduce using rule {85} (prim_pat)
	          "xor:"	reduce using rule {85} (prim_pat)
	        "equiv:"	reduce using rule {85} (prim_pat)
	             ':'	reduce using rule {85} (prim_pat)
	             ','	reduce using rule {85} (prim_pat)
	            '\\'	reduce using rule {85} (prim_pat)
	            "->"	reduce using rule {29} (id_or_cons)

<1193>	bar_rule	->	line_number id_or_cons . "->" top_pat <457> guard_exp cost ':' bar_rule_action 

	            "->"	shift, and goto state <1266>

<1194>	<458>	->	. 	{ '\\' ':' '|' "where" "if" }
	bar_rule	->	line_number top_pat . <458> guard_exp cost ':' bar_rule_action 

	           <458>	goto state <1267>
	       <default>	reduce using rule {754} (<458>)

<1195>	<477>	->	. 	{ '{' }
	<478>	->	. 	{ "of" }
	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" '(' protocols ')' qualifiers_opt . <477> '{' rewrite_indexings case_or_bar_rules '}' 
	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" '(' protocols ')' qualifiers_opt . <478> "of" rewrite_indexings case_or_bar_rules "end" "rewrite" ';' 

	           <477>	goto state <1268>
	           <478>	goto state <1269>
	             '{'	reduce using rule {773} (<477>)
	            "of"	reduce using rule {774} (<478>)

<1196>	syntax_decl	->	syntax_ id <470> '{' prec_rules expect_ <471> bnf_rules . '}' ';' 

	             '}'	shift, and goto state <1270>

<1197>	simple_term1	->	'#' '[' ty "..." . ty ']' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <1271>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<1198>	simple_term1	->	'#' '(' ty "..." . ty ')' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <1272>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<1199>	simple_term1	->	'#' '{' ty "..." . ty '}' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <1273>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<1200>	opt_with	->	"with" brace_body . 

	       <default>	reduce using rule {384} (opt_with)

<1201>	simple_term	->	"view" exp "=>" simple_term . 

	       <default>	reduce using rule {387} (simple_term)

<1202>	term	->	simple_term inherit_list_opt "=>" print_formats . opt_with view_predicate 
	opt_with	->	. 	{ "law" "private" "protected" "public" "and" ';' "type" '|' "where" "if" }

	          "with"	shift, and goto state <1112>
	        opt_with	goto state <1274>
	       <default>	reduce using rule {383} (opt_with)

<1203>	view_predicate	->	"if" . app_exp 
	tick	->	. 	{ '{' }

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	            '\''	shift, and goto state <106>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	         app_exp	goto state <1275>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	       <default>	reduce using rule {244} (tick)

<1204>	term	->	simple_term inherit_list_opt opt_with view_predicate . 

	       <default>	reduce using rule {378} (term)

<1205>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	simple_antecedent	->	pat where_or_if <469> exp . 	{ "and" LONG_BAR }
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {520} (simple_antecedent)

<1206>	conclusion	->	'~' primitive_app_exp . 	{ "and" ';' }
	tick	->	. 	{ '{' }
	primitive_app_exp	->	primitive_app_exp . simple_exp 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	            '\''	shift, and goto state <106>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <1063>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	             ';'	reduce using rule {524} (conclusion)
	           "and"	reduce using rule {524} (conclusion)
	             '{'	reduce using rule {244} (tick)

<1207>	inference_rule	->	<468> antecedents LONG_BAR conclusions ';' . 

	       <default>	reduce using rule {511} (inference_rule)

<1208>	conclusions	->	conclusion "and" . conclusions 

	             '~'	shift, and goto state <1124>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '{'	shift, and goto state <638>
	              id	goto state <945>
	            cons	goto state <112>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	primitive_app_exp	goto state <1125>
	   primitive_exp	goto state <947>
	      brace_body	goto state <1126>
	     conclusions	goto state <1276>
	      conclusion	goto state <1128>

<1209>	match_decl	->	match_or_matchall match_ty match_options match_exps "of" <454> case_or_bar_rules "end" . "match" ';' 

	         "match"	shift, and goto state <1277>

<1210>	match_decl	->	match_or_matchall match_ty match_options match_exps <453> '{' case_or_bar_rules '}' . 

	       <default>	reduce using rule {272} (match_decl)

<1211>	cons_exp	->	cons_id tick '(' exp_list ')' '(' exp_list ')' . 

	       <default>	reduce using rule {258} (cons_exp)

<1212>	cons_exp	->	cons_id tick '(' exp_list ')' '{' lab_exp_list '}' . 

	       <default>	reduce using rule {257} (cons_exp)

<1213>	else_clause	->	"else" stmt_list "end" "if" . 

	       <default>	reduce using rule {651} (else_clause)

<1214>	else_clause	->	"elsif" exp "then" stmt_list . else_clause 

	           "end"	shift, and goto state <873>
	          "else"	shift, and goto state <874>
	         "elsif"	shift, and goto state <875>
	     else_clause	goto state <1278>

<1215>	dots_opt	->	. 	{ "|]" }
	aggr_pat	->	"[|" '|' pat pat_opt '|' dots_opt pat_list1 . dots_opt "|]" 

	           "..."	shift, and goto state <554>
	        dots_opt	goto state <1279>
	       <default>	reduce using rule {112} (dots_opt)

<1216>	dots_opt	->	. 	{ "|)" }
	aggr_pat	->	"(|" '|' pat pat_opt '|' dots_opt pat_list1 . dots_opt "|)" 

	           "..."	shift, and goto state <554>
	        dots_opt	goto state <1280>
	       <default>	reduce using rule {112} (dots_opt)

<1217>	dots_opt	->	. 	{ "|}" }
	aggr_pat	->	"{|" '|' pat pat_opt '|' dots_opt pat_list1 . dots_opt "|}" 

	           "..."	shift, and goto state <554>
	        dots_opt	goto state <1281>
	       <default>	reduce using rule {112} (dots_opt)

<1218>	switch_exp	->	"match" paren_exp . 

	       <default>	reduce using rule {363} (switch_exp)

<1219>	<465>	->	. 	{ "law" "private" "protected" "public" "and" ';' "type" "where" }
	datatype_def	->	id tyvars inherit_list_opt qualifiers_opt '=' <464> switch_exp terms . <465> datatype_body 

	           <465>	goto state <1282>
	       <default>	reduce using rule {761} (<465>)

<1220>	view_def	->	<466> simple_pat ':' app_exp . selectors_opt 
	selectors_opt	->	. 	{ "law" ';' '|' "where" }
	tick	->	. 	{ '{' }
	app_exp	->	app_exp . simple_exp 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	            '\''	shift, and goto state <106>
	           "and"	shift, and goto state <1283>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <302>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	   selectors_opt	goto state <1284>
	         "where"	reduce using rule {436} (selectors_opt)
	             '|'	reduce using rule {436} (selectors_opt)
	             ';'	reduce using rule {436} (selectors_opt)
	           "law"	reduce using rule {436} (selectors_opt)
	             '{'	reduce using rule {244} (tick)

<1221>	patvars	->	'(' var_list0 . ')' 

	             ')'	shift, and goto state <1285>

<1222>	var_list0	->	var_list . 

	       <default>	reduce using rule {370} (var_list0)

<1223>	guard_exp2	->	where_or_if . paren_exp 

	             '('	shift, and goto state <211>
	       paren_exp	goto state <1286>

<1224>	law_def	->	invertible id <467> patvars guard_exp2 . '=' pat 

	             '='	shift, and goto state <1287>

<1225>	refine_def	->	"class" id_or_cons "::" '~' id_or_cons '(' ')' brace_body . 

	       <default>	reduce using rule {463} (refine_def)

<1226>	symbol	->	'?' . 

	       <default>	reduce using rule {562} (symbol)

<1227>	symbol	->	"prec:" . cons 

	        CONS_TOK	shift, and goto state <94>
	            cons	goto state <1288>

<1228>	symbol	->	id . 

	       <default>	reduce using rule {555} (symbol)

<1229>	symbol	->	cons . 

	       <default>	reduce using rule {556} (symbol)

<1230>	symbol	->	string . 

	       <default>	reduce using rule {558} (symbol)

<1231>	symbol	->	regexp . 

	       <default>	reduce using rule {559} (symbol)

<1232>	symbol	->	character . 

	       <default>	reduce using rule {557} (symbol)

<1233>	symbol	->	paren_exp . 

	       <default>	reduce using rule {560} (symbol)

<1234>	symbol	->	brace_body . 

	       <default>	reduce using rule {561} (symbol)

<1235>	<475>	->	. 	{ "prec:" '?' '{' '(' CHAR_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK }
	a_production	->	. 	{ ';' '|' }
	a_production	->	<475> symbol . a_production 

	    a_production	goto state <1289>
	           <475>	goto state <1158>
	          ID_TOK	reduce using rule {771} (<475>)
	        CONS_TOK	reduce using rule {771} (<475>)
	      STRING_TOK	reduce using rule {771} (<475>)
	      REGEXP_TOK	reduce using rule {771} (<475>)
	        CHAR_TOK	reduce using rule {771} (<475>)
	             '('	reduce using rule {771} (<475>)
	             '{'	reduce using rule {771} (<475>)
	             '?'	reduce using rule {771} (<475>)
	         "prec:"	reduce using rule {771} (<475>)
	             '|'	reduce using rule {553} (a_production)
	             ';'	reduce using rule {553} (a_production)

<1236>	ty_opt	->	. 	{ ':' }
	bnf_rule	->	line_number id . ty_opt ':' alt_productions ';' 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <1290>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	          ty_opt	goto state <1291>
	         setl_ty	goto state <168>
	       <default>	reduce using rule {548} (ty_opt)

<1237>	attribgram_decl	->	"attributegrammar" id <472> '{' prec_rules expect_ <473> bnf_rules '}' . ';' 

	             ';'	shift, and goto state <1292>

<1238>	bnf_rules	->	bnf_rule bnf_rules . 

	       <default>	reduce using rule {536} (bnf_rules)

<1239>	fun_rule	->	fun_rule_head ':' return_ty where_or_if exp ':' fun_action . 

	       <default>	reduce using rule {603} (fun_rule)

<1240>	function_def	->	"function" cons_or_string '(' fun_args ')' "return" ty "is" defs . "begin" stmt_list "end" ';' 

	         "begin"	shift, and goto state <1293>

<1241>	function_def	->	"procedure" cons_or_string '(' fun_args ')' "is" defs "begin" stmt_list . "end" ';' 

	           "end"	shift, and goto state <1294>

<1242>	sigs	->	sig ',' sigs . 

	       <default>	reduce using rule {638} (sigs)

<1243>	module_def	->	"module" cons_or_string module_args module_sig "is" "begin" defs "end" ';' . 

	       <default>	reduce using rule {624} (module_def)

<1244>	node_def	->	id opt_of . ty hashfun eqfun 

	   "collectable"	shift, and goto state <142>
	   "finalizable"	shift, and goto state <143>
	          ID_TOK	shift, and goto state <93>
	             '('	shift, and goto state <144>
	             '{'	shift, and goto state <145>
	         "class"	shift, and goto state <146>
	         "const"	shift, and goto state <147>
	      "unsigned"	shift, and goto state <148>
	        "signed"	shift, and goto state <149>
	            ".["	shift, and goto state <150>
	        "listof"	shift, and goto state <151>
	       "tupleof"	shift, and goto state <152>
	         "setof"	shift, and goto state <153>
	         "bagof"	shift, and goto state <154>
	         "mapof"	shift, and goto state <155>
	    "multimapof"	shift, and goto state <156>
	       "queueof"	shift, and goto state <157>
	    "priqueueof"	shift, and goto state <158>
	       "dequeof"	shift, and goto state <159>
	              id	goto state <160>
	              ty	goto state <1295>
	      simple_ty1	goto state <162>
	       simple_ty	goto state <163>
	      labeled_ty	goto state <164>
	    qualified_ty	goto state <165>
	           id_ty	goto state <166>
	         setl_ty	goto state <168>

<1245>	node_defs	->	node_def '|' . node_defs 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <1173>
	       node_defs	goto state <1296>
	        node_def	goto state <1175>

<1246>	node_defs	->	node_def "and" . node_defs 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <1173>
	       node_defs	goto state <1297>
	        node_def	goto state <1175>

<1247>	edge_spec	->	"edges:" . edge_defs 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <1298>
	       edge_defs	goto state <1299>
	        edge_def	goto state <1300>

<1248>	graph_class_decl	->	"graphtype" id inherit_list_opt qualifiers_opt '(' <480> node_spec <481> edge_spec . ')' brace_body ';' 

	             ')'	shift, and goto state <1301>

<1249>	grs_pat	->	"if" . '(' exp ')' 

	             '('	shift, and goto state <1302>

<1250>	negate	->	'~' . 

	       <default>	reduce using rule {23} (negate)

<1251>	negate	->	'!' . 

	       <default>	reduce using rule {24} (negate)

<1252>	grs_pat	->	'(' . grs_pat ')' 

	            "if"	shift, and goto state <1249>
	             '~'	shift, and goto state <1250>
	             '!'	shift, and goto state <1251>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	             '('	shift, and goto state <1252>
	        "forall"	shift, and goto state <1253>
	          negate	goto state <1254>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <1255>
	         grs_pat	goto state <1303>
	  grs_simple_pat	goto state <1261>

<1253>	grs_pat	->	"forall" . id '.' grs_simple_pat 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <1304>

<1254>	grs_simple_pat	->	negate . id_or_cons '(' pat_list1 ')' 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <1305>

<1255>	grs_simple_pat	->	id_or_cons . '(' pat_list1 ')' 

	             '('	shift, and goto state <1306>

<1256>	grs_sections	->	grs_data_declarations grs_index_declarations grs_strata . 

	       <default>	reduce using rule {724} (grs_sections)

<1257>	grs_strata	->	grs_stratum . 

	       <default>	reduce using rule {727} (grs_strata)

<1258>	grs_stratum	->	grs_rules . 

	       <default>	reduce using rule {728} (grs_stratum)

<1259>	grs_rules	->	. 	{ "end" '}' }
	grs_rules	->	grs_rule . grs_rules 

	            "if"	shift, and goto state <1249>
	             '~'	shift, and goto state <1250>
	             '!'	shift, and goto state <1251>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	             '('	shift, and goto state <1252>
	        "forall"	shift, and goto state <1253>
	          negate	goto state <1254>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <1255>
	       grs_rules	goto state <1307>
	        grs_rule	goto state <1259>
	         grs_pat	goto state <1260>
	  grs_simple_pat	goto state <1261>
	       <default>	reduce using rule {729} (grs_rules)

<1260>	grs_pat	->	grs_pat . ',' grs_pat 
	grs_pat	->	grs_pat . "and" grs_pat 
	grs_pat	->	grs_pat . "||" grs_pat 
	grs_rule	->	grs_pat . implies grs_conclusions ';' 

	        LONG_BAR	shift, and goto state <1308>
	            "=>"	shift, and goto state <1309>
	            "||"	shift, and goto state <1310>
	             ','	shift, and goto state <1311>
	           "and"	shift, and goto state <1312>
	         implies	goto state <1313>

<1261>	grs_pat	->	grs_simple_pat . 

	       <default>	reduce using rule {732} (grs_pat)

<1262>	graph_rewrite_decl	->	"graphrewrite" id '(' fun_args ')' '=' "begin" grs_sections "end" . "graphrewrite" ';' 

	  "graphrewrite"	shift, and goto state <1314>

<1263>	rewrite_class_decl	->	rewrite_ "class" id '(' protocols ')' inherit_list_opt qualifiers_opt brace_body . ';' 

	             ';'	shift, and goto state <1315>

<1264>	rewrite_index	->	simple_ty '=' "extern" id_or_cons . 

	       <default>	reduce using rule {583} (rewrite_index)

<1265>	guard_exp	->	. 	{ '\\' ':' }
	case_rule	->	case_ top_pat <455> . guard_exp cost ':' <456> decl_list 

	            "if"	shift, and goto state <570>
	         "where"	shift, and goto state <571>
	             '|'	shift, and goto state <572>
	     where_or_if	goto state <578>
	       guard_exp	goto state <1316>
	       <default>	reduce using rule {290} (guard_exp)

<1266>	bar_rule	->	line_number id_or_cons "->" . top_pat <457> guard_exp cost ':' bar_rule_action 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	         top_pat	goto state <1317>
	             pat	goto state <647>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	   top_pat_list2	goto state <648>

<1267>	guard_exp	->	. 	{ '\\' ':' }
	bar_rule	->	line_number top_pat <458> . guard_exp cost ':' bar_rule_action 

	            "if"	shift, and goto state <570>
	         "where"	shift, and goto state <571>
	             '|'	shift, and goto state <572>
	     where_or_if	goto state <578>
	       guard_exp	goto state <1318>
	       <default>	reduce using rule {290} (guard_exp)

<1268>	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" '(' protocols ')' qualifiers_opt <477> . '{' rewrite_indexings case_or_bar_rules '}' 

	             '{'	shift, and goto state <1319>

<1269>	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" '(' protocols ')' qualifiers_opt <478> . "of" rewrite_indexings case_or_bar_rules "end" "rewrite" ';' 

	            "of"	shift, and goto state <1320>

<1270>	syntax_decl	->	syntax_ id <470> '{' prec_rules expect_ <471> bnf_rules '}' . ';' 

	             ';'	shift, and goto state <1321>

<1271>	simple_term1	->	'#' '[' ty "..." ty . ']' 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             ']'	shift, and goto state <1322>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>

<1272>	simple_term1	->	'#' '(' ty "..." ty . ')' 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             ')'	shift, and goto state <1323>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>

<1273>	simple_term1	->	'#' '{' ty "..." ty . '}' 
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             '}'	shift, and goto state <1324>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>

<1274>	term	->	simple_term inherit_list_opt "=>" print_formats opt_with . view_predicate 
	view_predicate	->	. 	{ "law" "private" "protected" "public" "and" ';' "type" '|' "where" }

	            "if"	shift, and goto state <1203>
	  view_predicate	goto state <1325>
	       <default>	reduce using rule {381} (view_predicate)

<1275>	view_predicate	->	"if" app_exp . 	{ "law" "private" "protected" "public" "and" ';' "type" '|' "where" }
	tick	->	. 	{ '{' }
	app_exp	->	app_exp . simple_exp 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	            '\''	shift, and goto state <106>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <302>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	         "where"	reduce using rule {382} (view_predicate)
	             '|'	reduce using rule {382} (view_predicate)
	          "type"	reduce using rule {382} (view_predicate)
	             ';'	reduce using rule {382} (view_predicate)
	           "and"	reduce using rule {382} (view_predicate)
	        "public"	reduce using rule {382} (view_predicate)
	     "protected"	reduce using rule {382} (view_predicate)
	       "private"	reduce using rule {382} (view_predicate)
	           "law"	reduce using rule {382} (view_predicate)
	             '{'	reduce using rule {244} (tick)

<1276>	conclusions	->	conclusion "and" conclusions . 

	       <default>	reduce using rule {522} (conclusions)

<1277>	match_decl	->	match_or_matchall match_ty match_options match_exps "of" <454> case_or_bar_rules "end" "match" . ';' 

	             ';'	shift, and goto state <1326>

<1278>	else_clause	->	"elsif" exp "then" stmt_list else_clause . 

	       <default>	reduce using rule {652} (else_clause)

<1279>	aggr_pat	->	"[|" '|' pat pat_opt '|' dots_opt pat_list1 dots_opt . "|]" 

	            "|]"	shift, and goto state <1327>

<1280>	aggr_pat	->	"(|" '|' pat pat_opt '|' dots_opt pat_list1 dots_opt . "|)" 

	            "|)"	shift, and goto state <1328>

<1281>	aggr_pat	->	"{|" '|' pat pat_opt '|' dots_opt pat_list1 dots_opt . "|}" 

	            "|}"	shift, and goto state <1329>

<1282>	datatype_body	->	. 	{ "law" "and" ';' "type" "where" }
	datatype_def	->	id tyvars inherit_list_opt qualifiers_opt '=' <464> switch_exp terms <465> . datatype_body 

	        "public"	shift, and goto state <779>
	     "protected"	shift, and goto state <780>
	       "private"	shift, and goto state <781>
	           scope	goto state <1330>
	   datatype_body	goto state <1331>
	       <default>	reduce using rule {364} (datatype_body)

<1283>	selectors_opt	->	"and" . selectors 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <1332>
	       selectors	goto state <1333>
	        selector	goto state <1334>

<1284>	view_def	->	<466> simple_pat ':' app_exp selectors_opt . 

	       <default>	reduce using rule {435} (view_def)

<1285>	patvars	->	'(' var_list0 ')' . 

	       <default>	reduce using rule {454} (patvars)

<1286>	guard_exp2	->	where_or_if paren_exp . 

	       <default>	reduce using rule {451} (guard_exp2)

<1287>	law_def	->	invertible id <467> patvars guard_exp2 '=' . pat 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <1335>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>

<1288>	symbol	->	"prec:" cons . 

	       <default>	reduce using rule {563} (symbol)

<1289>	a_production	->	<475> symbol a_production . 

	       <default>	reduce using rule {554} (a_production)

<1290>	ty_opt	->	ty . 	{ ':' }
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	       <default>	reduce using rule {549} (ty_opt)

<1291>	bnf_rule	->	line_number id ty_opt . ':' alt_productions ';' 

	             ':'	shift, and goto state <1336>

<1292>	attribgram_decl	->	"attributegrammar" id <472> '{' prec_rules expect_ <473> bnf_rules '}' ';' . 

	       <default>	reduce using rule {539} (attribgram_decl)

<1293>	function_def	->	"function" cons_or_string '(' fun_args ')' "return" ty "is" defs "begin" . stmt_list "end" ';' 
	tick	->	. 	{ '{' }

	       "rewrite"	shift, and goto state <6>
	         "match"	shift, and goto state <10>
	             '*'	shift, and goto state <90>
	      "matchall"	shift, and goto state <11>
	     "matchscan"	shift, and goto state <12>
	            "if"	shift, and goto state <169>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "while"	shift, and goto state <170>
	        "return"	shift, and goto state <171>
	         "begin"	shift, and goto state <25>
	    "cutrewrite"	shift, and goto state <33>
	   "failrewrite"	shift, and goto state <34>
	        "forall"	shift, and goto state <172>
	       "declare"	shift, and goto state <40>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	        rewrite_	goto state <173>
	match_or_matchall	goto state <47>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <174>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	      match_decl	goto state <175>
	  rewriting_decl	goto state <176>
	replacement_decl	goto state <177>
	            stmt	goto state <178>
	       stmt_list	goto state <1337>
	   compound_stmt	goto state <180>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<1294>	function_def	->	"procedure" cons_or_string '(' fun_args ')' "is" defs "begin" stmt_list "end" . ';' 

	             ';'	shift, and goto state <1338>

<1295>	node_def	->	id opt_of ty . hashfun eqfun 
	hashfun	->	. 	{ "edges:" "equality:" "and" ')' '|' }
	ty	->	ty . '=' exp 
	ty	->	ty . '*' 
	ty	->	ty . '&' 
	ty	->	ty . '[' ']' 
	ty	->	ty . '[' exp ']' 

	             '*'	shift, and goto state <340>
	             '['	shift, and goto state <341>
	             '='	shift, and goto state <343>
	             '&'	shift, and goto state <344>
	         "hash:"	shift, and goto state <1339>
	         hashfun	goto state <1340>
	       <default>	reduce using rule {697} (hashfun)

<1296>	node_defs	->	node_def '|' node_defs . 

	       <default>	reduce using rule {694} (node_defs)

<1297>	node_defs	->	node_def "and" node_defs . 

	       <default>	reduce using rule {693} (node_defs)

<1298>	edge_def	->	id . opt_of node "<->" node indexing 
	edge_def	->	id . opt_of node "<=>" node indexing 
	edge_def	->	id . opt_of node "<=>" '*' node indexing 
	edge_def	->	id . opt_of node "->" node indexing 
	opt_of	->	. 	{ ID_TOK }

	            "of"	shift, and goto state <1006>
	          opt_of	goto state <1341>
	       <default>	reduce using rule {405} (opt_of)

<1299>	edge_spec	->	"edges:" edge_defs . 

	       <default>	reduce using rule {702} (edge_spec)

<1300>	edge_defs	->	edge_def . 	{ ')' }
	edge_defs	->	edge_def . "and" edge_defs 
	edge_defs	->	edge_def . '|' edge_defs 

	             '|'	shift, and goto state <1342>
	           "and"	shift, and goto state <1343>
	       <default>	reduce using rule {703} (edge_defs)

<1301>	graph_class_decl	->	"graphtype" id inherit_list_opt qualifiers_opt '(' <480> node_spec <481> edge_spec ')' . brace_body ';' 

	             '{'	shift, and goto state <638>
	      brace_body	goto state <1344>

<1302>	grs_pat	->	"if" '(' . exp ')' 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <1345>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<1303>	grs_pat	->	grs_pat . ',' grs_pat 
	grs_pat	->	grs_pat . "and" grs_pat 
	grs_pat	->	grs_pat . "||" grs_pat 
	grs_pat	->	'(' grs_pat . ')' 

	             ')'	shift, and goto state <1346>
	            "||"	shift, and goto state <1310>
	             ','	shift, and goto state <1311>
	           "and"	shift, and goto state <1312>

<1304>	grs_pat	->	"forall" id . '.' grs_simple_pat 

	             '.'	shift, and goto state <1347>

<1305>	grs_simple_pat	->	negate id_or_cons . '(' pat_list1 ')' 

	             '('	shift, and goto state <1348>

<1306>	grs_simple_pat	->	id_or_cons '(' . pat_list1 ')' 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <540>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	       pat_list2	goto state <541>
	       pat_list1	goto state <1349>
	         big_pat	goto state <544>

<1307>	grs_rules	->	grs_rule grs_rules . 

	       <default>	reduce using rule {730} (grs_rules)

<1308>	implies	->	LONG_BAR . 

	       <default>	reduce using rule {21} (implies)

<1309>	implies	->	"=>" . 

	       <default>	reduce using rule {22} (implies)

<1310>	grs_pat	->	grs_pat "||" . grs_pat 

	            "if"	shift, and goto state <1249>
	             '~'	shift, and goto state <1250>
	             '!'	shift, and goto state <1251>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	             '('	shift, and goto state <1252>
	        "forall"	shift, and goto state <1253>
	          negate	goto state <1254>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <1255>
	         grs_pat	goto state <1350>
	  grs_simple_pat	goto state <1261>

<1311>	grs_pat	->	grs_pat ',' . grs_pat 

	            "if"	shift, and goto state <1249>
	             '~'	shift, and goto state <1250>
	             '!'	shift, and goto state <1251>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	             '('	shift, and goto state <1252>
	        "forall"	shift, and goto state <1253>
	          negate	goto state <1254>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <1255>
	         grs_pat	goto state <1351>
	  grs_simple_pat	goto state <1261>

<1312>	grs_pat	->	grs_pat "and" . grs_pat 

	            "if"	shift, and goto state <1249>
	             '~'	shift, and goto state <1250>
	             '!'	shift, and goto state <1251>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	             '('	shift, and goto state <1252>
	        "forall"	shift, and goto state <1253>
	          negate	goto state <1254>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <1255>
	         grs_pat	goto state <1352>
	  grs_simple_pat	goto state <1261>

<1313>	grs_rule	->	grs_pat implies . grs_conclusions ';' 

	             '~'	shift, and goto state <1250>
	             '!'	shift, and goto state <1251>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	             '{'	shift, and goto state <638>
	             '+'	shift, and goto state <1353>
	             '-'	shift, and goto state <1354>
	          negate	goto state <1355>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <1356>
	      brace_body	goto state <1357>
	 grs_conclusions	goto state <1358>
	  grs_conclusion	goto state <1359>

<1314>	graph_rewrite_decl	->	"graphrewrite" id '(' fun_args ')' '=' "begin" grs_sections "end" "graphrewrite" . ';' 

	             ';'	shift, and goto state <1360>

<1315>	rewrite_class_decl	->	rewrite_ "class" id '(' protocols ')' inherit_list_opt qualifiers_opt brace_body ';' . 

	       <default>	reduce using rule {564} (rewrite_class_decl)

<1316>	cost	->	. 	{ ':' }
	case_rule	->	case_ top_pat <455> guard_exp . cost ':' <456> decl_list 

	            '\\'	shift, and goto state <1361>
	            cost	goto state <1362>
	       <default>	reduce using rule {308} (cost)

<1317>	<457>	->	. 	{ '\\' ':' '|' "where" "if" }
	bar_rule	->	line_number id_or_cons "->" top_pat . <457> guard_exp cost ':' bar_rule_action 

	           <457>	goto state <1363>
	       <default>	reduce using rule {753} (<457>)

<1318>	cost	->	. 	{ ':' }
	bar_rule	->	line_number top_pat <458> guard_exp . cost ':' bar_rule_action 

	            '\\'	shift, and goto state <1361>
	            cost	goto state <1364>
	       <default>	reduce using rule {308} (cost)

<1319>	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" '(' protocols ')' qualifiers_opt <477> '{' . rewrite_indexings case_or_bar_rules '}' 
	rewrite_indexings	->	. 	{ "postorder:" "preorder:" "before:" "bottomup:" "topdown:" ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '!' "lexeme" "case" }

	        "index:"	shift, and goto state <825>
	rewrite_indexings	goto state <1365>
	       <default>	reduce using rule {579} (rewrite_indexings)

<1320>	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" '(' protocols ')' qualifiers_opt <478> "of" . rewrite_indexings case_or_bar_rules "end" "rewrite" ';' 
	rewrite_indexings	->	. 	{ "postorder:" "preorder:" "before:" "bottomup:" "topdown:" ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '!' "lexeme" "case" }

	        "index:"	shift, and goto state <825>
	rewrite_indexings	goto state <1366>
	       <default>	reduce using rule {579} (rewrite_indexings)

<1321>	syntax_decl	->	syntax_ id <470> '{' prec_rules expect_ <471> bnf_rules '}' ';' . 

	       <default>	reduce using rule {527} (syntax_decl)

<1322>	simple_term1	->	'#' '[' ty "..." ty ']' . 

	       <default>	reduce using rule {399} (simple_term1)

<1323>	simple_term1	->	'#' '(' ty "..." ty ')' . 

	       <default>	reduce using rule {400} (simple_term1)

<1324>	simple_term1	->	'#' '{' ty "..." ty '}' . 

	       <default>	reduce using rule {401} (simple_term1)

<1325>	term	->	simple_term inherit_list_opt "=>" print_formats opt_with view_predicate . 

	       <default>	reduce using rule {379} (term)

<1326>	match_decl	->	match_or_matchall match_ty match_options match_exps "of" <454> case_or_bar_rules "end" "match" ';' . 

	       <default>	reduce using rule {273} (match_decl)

<1327>	aggr_pat	->	"[|" '|' pat pat_opt '|' dots_opt pat_list1 dots_opt "|]" . 

	       <default>	reduce using rule {108} (aggr_pat)

<1328>	aggr_pat	->	"(|" '|' pat pat_opt '|' dots_opt pat_list1 dots_opt "|)" . 

	       <default>	reduce using rule {109} (aggr_pat)

<1329>	aggr_pat	->	"{|" '|' pat pat_opt '|' dots_opt pat_list1 dots_opt "|}" . 

	       <default>	reduce using rule {110} (aggr_pat)

<1330>	datatype_body	->	scope . ':' brace_body 

	             ':'	shift, and goto state <1367>

<1331>	datatype_def	->	id tyvars inherit_list_opt qualifiers_opt '=' <464> switch_exp terms <465> datatype_body . 

	       <default>	reduce using rule {360} (datatype_def)

<1332>	selector	->	id . '=' app_exp 

	             '='	shift, and goto state <1368>

<1333>	selectors_opt	->	"and" selectors . 

	       <default>	reduce using rule {437} (selectors_opt)

<1334>	selectors	->	selector . 	{ "law" ';' '|' "where" }
	selectors	->	selector . "and" selectors 

	           "and"	shift, and goto state <1369>
	       <default>	reduce using rule {438} (selectors)

<1335>	law_def	->	invertible id <467> patvars guard_exp2 '=' pat . 	{ "and" ';' '|' "where" }
	logical_pat	->	pat . "||" pat 
	logical_pat	->	pat . "implies:" pat 
	logical_pat	->	pat . "xor:" pat 
	logical_pat	->	pat . "equiv:" pat 
	logical_pat	->	pat . "&&" pat 

	            "&&"	shift, and goto state <573>
	            "||"	shift, and goto state <574>
	      "implies:"	shift, and goto state <575>
	          "xor:"	shift, and goto state <576>
	        "equiv:"	shift, and goto state <577>
	       <default>	reduce using rule {447} (law_def)

<1336>	<474>	->	. 	{ "prec:" ';' '?' '{' '(' CHAR_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '|' }
	bnf_rule	->	line_number id ty_opt ':' . alt_productions ';' 

	 alt_productions	goto state <1370>
	      production	goto state <1371>
	           <474>	goto state <1057>
	       <default>	reduce using rule {770} (<474>)

<1337>	function_def	->	"function" cons_or_string '(' fun_args ')' "return" ty "is" defs "begin" stmt_list . "end" ';' 

	           "end"	shift, and goto state <1372>

<1338>	function_def	->	"procedure" cons_or_string '(' fun_args ')' "is" defs "begin" stmt_list "end" ';' . 

	       <default>	reduce using rule {618} (function_def)

<1339>	hashfun	->	"hash:" . id 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <1373>

<1340>	node_def	->	id opt_of ty hashfun . eqfun 
	eqfun	->	. 	{ "edges:" "and" ')' '|' }

	     "equality:"	shift, and goto state <1374>
	           eqfun	goto state <1375>
	       <default>	reduce using rule {699} (eqfun)

<1341>	edge_def	->	id opt_of . node "<->" node indexing 
	edge_def	->	id opt_of . node "<=>" node indexing 
	edge_def	->	id opt_of . node "<=>" '*' node indexing 
	edge_def	->	id opt_of . node "->" node indexing 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <1376>
	            node	goto state <1377>

<1342>	edge_defs	->	edge_def '|' . edge_defs 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <1298>
	       edge_defs	goto state <1378>
	        edge_def	goto state <1300>

<1343>	edge_defs	->	edge_def "and" . edge_defs 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <1298>
	       edge_defs	goto state <1379>
	        edge_def	goto state <1300>

<1344>	graph_class_decl	->	"graphtype" id inherit_list_opt qualifiers_opt '(' <480> node_spec <481> edge_spec ')' brace_body . ';' 

	             ';'	shift, and goto state <1380>

<1345>	grs_pat	->	"if" '(' exp . ')' 
	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	             ')'	shift, and goto state <1381>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>

<1346>	grs_pat	->	'(' grs_pat ')' . 

	       <default>	reduce using rule {738} (grs_pat)

<1347>	grs_pat	->	"forall" id '.' . grs_simple_pat 

	             '~'	shift, and goto state <1250>
	             '!'	shift, and goto state <1251>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	          negate	goto state <1254>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <1255>
	  grs_simple_pat	goto state <1382>

<1348>	grs_simple_pat	->	negate id_or_cons '(' . pat_list1 ')' 

	        "lexeme"	shift, and goto state <8>
	             '!'	shift, and goto state <350>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	      REGEXP_TOK	shift, and goto state <351>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <352>
	             '['	shift, and goto state <353>
	             '('	shift, and goto state <354>
	             '{'	shift, and goto state <355>
	            "[|"	shift, and goto state <356>
	            "(|"	shift, and goto state <357>
	            "{|"	shift, and goto state <358>
	             '_'	shift, and goto state <359>
	            "<<"	shift, and goto state <360>
	            ".("	shift, and goto state <361>
	         lexeme_	goto state <362>
	              id	goto state <363>
	            cons	goto state <364>
	          string	goto state <365>
	          regexp	goto state <366>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <367>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <368>
	             pat	goto state <540>
	     logical_pat	goto state <370>
	      simple_pat	goto state <371>
	        prim_pat	goto state <372>
	      string_pat	goto state <373>
	        aggr_pat	goto state <374>
	       pat_list2	goto state <541>
	       pat_list1	goto state <1383>
	         big_pat	goto state <544>

<1349>	grs_simple_pat	->	id_or_cons '(' pat_list1 . ')' 

	             ')'	shift, and goto state <1384>

<1350>	grs_pat	->	grs_pat . ',' grs_pat 
	grs_pat	->	grs_pat . "and" grs_pat 
	grs_pat	->	grs_pat . "||" grs_pat 
	grs_pat	->	grs_pat "||" grs_pat . 	{ "and" ',' "||" ')' "=>" LONG_BAR }

	shift/reduce conflict with item {2456} grs_pat -> grs_pat "||" grs_pat . and "and" resolved as shift.
	shift/reduce conflict with item {2456} grs_pat -> grs_pat "||" grs_pat . and ',' resolved as reduce.
	shift/reduce conflict with item {2456} grs_pat -> grs_pat "||" grs_pat . and "||" resolved as reduce(left).
	           "and"	shift, and goto state <1312>
	       <default>	reduce using rule {737} (grs_pat)

<1351>	grs_pat	->	grs_pat . ',' grs_pat 
	grs_pat	->	grs_pat ',' grs_pat . 	{ "and" ',' "||" ')' "=>" LONG_BAR }
	grs_pat	->	grs_pat . "and" grs_pat 
	grs_pat	->	grs_pat . "||" grs_pat 

	shift/reduce conflict with item {2448} grs_pat -> grs_pat ',' grs_pat . and "and" resolved as shift.
	shift/reduce conflict with item {2448} grs_pat -> grs_pat ',' grs_pat . and ',' resolved as reduce(left).
	shift/reduce conflict with item {2448} grs_pat -> grs_pat ',' grs_pat . and "||" resolved as shift.
	            "||"	shift, and goto state <1310>
	           "and"	shift, and goto state <1312>
	       <default>	reduce using rule {735} (grs_pat)

<1352>	grs_pat	->	grs_pat . ',' grs_pat 
	grs_pat	->	grs_pat . "and" grs_pat 
	grs_pat	->	grs_pat "and" grs_pat . 	{ "and" ',' "||" ')' "=>" LONG_BAR }
	grs_pat	->	grs_pat . "||" grs_pat 

	shift/reduce conflict with item {2452} grs_pat -> grs_pat "and" grs_pat . and "and" resolved as reduce(left).
	shift/reduce conflict with item {2452} grs_pat -> grs_pat "and" grs_pat . and ',' resolved as reduce.
	shift/reduce conflict with item {2452} grs_pat -> grs_pat "and" grs_pat . and "||" resolved as reduce.
	       <default>	reduce using rule {736} (grs_pat)

<1353>	grs_conclusion	->	'+' . exp 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <1385>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<1354>	grs_conclusion	->	'-' . exp 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <1386>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<1355>	grs_conclusion	->	negate . id_or_cons '(' exp_list ')' 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <1387>

<1356>	grs_conclusion	->	id_or_cons . '(' exp_list ')' 

	             '('	shift, and goto state <1388>

<1357>	grs_conclusion	->	brace_body . 

	       <default>	reduce using rule {748} (grs_conclusion)

<1358>	grs_rule	->	grs_pat implies grs_conclusions . ';' 

	             ';'	shift, and goto state <1389>

<1359>	grs_conclusions	->	grs_conclusion . 	{ ';' }
	grs_conclusions	->	grs_conclusion . "and" grs_conclusions 
	grs_conclusions	->	grs_conclusion . ',' grs_conclusions 

	             ','	shift, and goto state <1390>
	           "and"	shift, and goto state <1391>
	       <default>	reduce using rule {741} (grs_conclusions)

<1360>	graph_rewrite_decl	->	"graphrewrite" id '(' fun_args ')' '=' "begin" grs_sections "end" "graphrewrite" ';' . 

	       <default>	reduce using rule {723} (graph_rewrite_decl)

<1361>	cost	->	'\\' . exp 
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <1392>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	       <default>	reduce using rule {244} (tick)

<1362>	case_rule	->	case_ top_pat <455> guard_exp cost . ':' <456> decl_list 

	             ':'	shift, and goto state <1393>

<1363>	guard_exp	->	. 	{ '\\' ':' }
	bar_rule	->	line_number id_or_cons "->" top_pat <457> . guard_exp cost ':' bar_rule_action 

	            "if"	shift, and goto state <570>
	         "where"	shift, and goto state <571>
	             '|'	shift, and goto state <572>
	     where_or_if	goto state <578>
	       guard_exp	goto state <1394>
	       <default>	reduce using rule {290} (guard_exp)

<1364>	bar_rule	->	line_number top_pat <458> guard_exp cost . ':' bar_rule_action 

	             ':'	shift, and goto state <1395>

<1365>	rewrite_mode	->	. 	{ ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '!' "lexeme" "case" }
	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" '(' protocols ')' qualifiers_opt <477> '{' rewrite_indexings . case_or_bar_rules '}' 

	      "topdown:"	shift, and goto state <979>
	     "bottomup:"	shift, and goto state <980>
	       "before:"	shift, and goto state <981>
	     "preorder:"	shift, and goto state <982>
	    "postorder:"	shift, and goto state <983>
	case_or_bar_rules	goto state <1396>
	      case_rules	goto state <985>
	       bar_rules	goto state <986>
	     a_case_rule	goto state <987>
	      a_bar_rule	goto state <988>
	    rewrite_mode	goto state <989>
	       <default>	reduce using rule {590} (rewrite_mode)

<1366>	rewrite_mode	->	. 	{ ".(" "<<" '_' "{|" "(|" "[|" '{' '(' '[' '#' "true" "false" CHAR_TOK REAL_TOK INT_TOK META_QUOTE BIGINT_TOK QUARK_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '!' "lexeme" "case" }
	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" '(' protocols ')' qualifiers_opt <478> "of" rewrite_indexings . case_or_bar_rules "end" "rewrite" ';' 

	      "topdown:"	shift, and goto state <979>
	     "bottomup:"	shift, and goto state <980>
	       "before:"	shift, and goto state <981>
	     "preorder:"	shift, and goto state <982>
	    "postorder:"	shift, and goto state <983>
	case_or_bar_rules	goto state <1397>
	      case_rules	goto state <985>
	       bar_rules	goto state <986>
	     a_case_rule	goto state <987>
	      a_bar_rule	goto state <988>
	    rewrite_mode	goto state <989>
	       <default>	reduce using rule {590} (rewrite_mode)

<1367>	datatype_body	->	scope ':' . brace_body 

	             '{'	shift, and goto state <638>
	      brace_body	goto state <1398>

<1368>	selector	->	id '=' . app_exp 
	tick	->	. 	{ '{' }

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	            '\''	shift, and goto state <106>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	         app_exp	goto state <1399>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	       <default>	reduce using rule {244} (tick)

<1369>	selectors	->	selector "and" . selectors 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <1332>
	       selectors	goto state <1400>
	        selector	goto state <1334>

<1370>	bnf_rule	->	line_number id ty_opt ':' alt_productions . ';' 

	             ';'	shift, and goto state <1401>

<1371>	alt_productions	->	production . 	{ ';' }
	alt_productions	->	production . '|' alt_productions 

	             '|'	shift, and goto state <1402>
	       <default>	reduce using rule {550} (alt_productions)

<1372>	function_def	->	"function" cons_or_string '(' fun_args ')' "return" ty "is" defs "begin" stmt_list "end" . ';' 

	             ';'	shift, and goto state <1403>

<1373>	hashfun	->	"hash:" id . 

	       <default>	reduce using rule {698} (hashfun)

<1374>	eqfun	->	"equality:" . id 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <1404>

<1375>	node_def	->	id opt_of ty hashfun eqfun . 

	       <default>	reduce using rule {696} (node_def)

<1376>	node	->	id . 

	       <default>	reduce using rule {710} (node)

<1377>	edge_def	->	id opt_of node . "<->" node indexing 
	edge_def	->	id opt_of node . "<=>" node indexing 
	edge_def	->	id opt_of node . "<=>" '*' node indexing 
	edge_def	->	id opt_of node . "->" node indexing 

	            "->"	shift, and goto state <1405>
	           "<=>"	shift, and goto state <1406>
	           "<->"	shift, and goto state <1407>

<1378>	edge_defs	->	edge_def '|' edge_defs . 

	       <default>	reduce using rule {705} (edge_defs)

<1379>	edge_defs	->	edge_def "and" edge_defs . 

	       <default>	reduce using rule {704} (edge_defs)

<1380>	graph_class_decl	->	"graphtype" id inherit_list_opt qualifiers_opt '(' <480> node_spec <481> edge_spec ')' brace_body ';' . 

	       <default>	reduce using rule {689} (graph_class_decl)

<1381>	grs_pat	->	"if" '(' exp ')' . 

	       <default>	reduce using rule {733} (grs_pat)

<1382>	grs_pat	->	"forall" id '.' grs_simple_pat . 

	       <default>	reduce using rule {734} (grs_pat)

<1383>	grs_simple_pat	->	negate id_or_cons '(' pat_list1 . ')' 

	             ')'	shift, and goto state <1408>

<1384>	grs_simple_pat	->	id_or_cons '(' pat_list1 ')' . 

	       <default>	reduce using rule {739} (grs_simple_pat)

<1385>	grs_conclusion	->	'+' exp . 	{ "and" ';' ',' }
	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {746} (grs_conclusion)

<1386>	grs_conclusion	->	'-' exp . 	{ "and" ';' ',' }
	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {747} (grs_conclusion)

<1387>	grs_conclusion	->	negate id_or_cons . '(' exp_list ')' 

	             '('	shift, and goto state <1409>

<1388>	grs_conclusion	->	id_or_cons '(' . exp_list ')' 
	exp_list	->	. 	{ ')' }
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <122>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        exp_list	goto state <1410>
	       exp_list2	goto state <131>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	             ')'	reduce using rule {262} (exp_list)
	             '{'	reduce using rule {244} (tick)

<1389>	grs_rule	->	grs_pat implies grs_conclusions ';' . 

	       <default>	reduce using rule {731} (grs_rule)

<1390>	grs_conclusions	->	grs_conclusion ',' . grs_conclusions 

	             '~'	shift, and goto state <1250>
	             '!'	shift, and goto state <1251>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	             '{'	shift, and goto state <638>
	             '+'	shift, and goto state <1353>
	             '-'	shift, and goto state <1354>
	          negate	goto state <1355>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <1356>
	      brace_body	goto state <1357>
	 grs_conclusions	goto state <1411>
	  grs_conclusion	goto state <1359>

<1391>	grs_conclusions	->	grs_conclusion "and" . grs_conclusions 

	             '~'	shift, and goto state <1250>
	             '!'	shift, and goto state <1251>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	             '{'	shift, and goto state <638>
	             '+'	shift, and goto state <1353>
	             '-'	shift, and goto state <1354>
	          negate	goto state <1355>
	              id	goto state <181>
	            cons	goto state <182>
	      id_or_cons	goto state <1356>
	      brace_body	goto state <1357>
	 grs_conclusions	goto state <1412>
	  grs_conclusion	goto state <1359>

<1392>	setl_exp	->	exp . "with" exp 
	setl_exp	->	exp . "less" exp 
	setl_exp	->	exp . "with" ":=" exp 
	setl_exp	->	exp . "less" ":=" exp 
	cost	->	'\\' exp . 	{ ':' }
	exp	->	exp . '?' exp ':' exp 
	exp	->	exp . ">>=" exp 
	exp	->	exp . "++" 
	exp	->	exp . "--" 
	exp	->	exp . "<=" exp 
	exp	->	exp . "==" exp 
	exp	->	exp . "!=" exp 
	exp	->	exp . "||" exp 
	exp	->	exp . "&&" exp 
	exp	->	exp . "<<" exp 
	exp	->	exp . ">>" exp 
	exp	->	exp . "<<=" exp 
	exp	->	exp . "-=" exp 
	exp	->	exp . "*=" exp 
	exp	->	exp . "/=" exp 
	exp	->	exp . "%=" exp 
	exp	->	exp . "&=" exp 
	exp	->	exp . "|=" exp 
	exp	->	exp . "^=" exp 
	exp	->	exp . ">=" exp 
	exp	->	exp . '=' exp 
	exp	->	exp . ":=" exp 
	exp	->	exp . '<' exp 
	exp	->	exp . '>' exp 
	exp	->	exp . '|' exp 
	exp	->	exp . '&' exp 
	exp	->	exp . '^' exp 
	exp	->	exp . "+=" exp 
	exp	->	exp . '+' exp 
	exp	->	exp . '-' exp 
	exp	->	exp . '*' exp 
	exp	->	exp . '/' exp 
	exp	->	exp . '%' exp 

	             '*'	shift, and goto state <266>
	             '|'	shift, and goto state <267>
	            "&&"	shift, and goto state <268>
	            "||"	shift, and goto state <269>
	            "<<"	shift, and goto state <270>
	            ">>"	shift, and goto state <271>
	             '='	shift, and goto state <273>
	             '&'	shift, and goto state <274>
	             '<'	shift, and goto state <275>
	             '>'	shift, and goto state <276>
	             '+'	shift, and goto state <277>
	             '-'	shift, and goto state <278>
	             '/'	shift, and goto state <279>
	             '%'	shift, and goto state <280>
	            ":="	shift, and goto state <281>
	             '^'	shift, and goto state <282>
	            "+="	shift, and goto state <283>
	            "-="	shift, and goto state <284>
	            "*="	shift, and goto state <285>
	            "/="	shift, and goto state <286>
	            "%="	shift, and goto state <287>
	            "&="	shift, and goto state <288>
	            "|="	shift, and goto state <289>
	            "^="	shift, and goto state <290>
	            ">="	shift, and goto state <291>
	            "<="	shift, and goto state <292>
	            "=="	shift, and goto state <293>
	            "!="	shift, and goto state <294>
	           "<<="	shift, and goto state <295>
	           ">>="	shift, and goto state <296>
	            "++"	shift, and goto state <297>
	            "--"	shift, and goto state <298>
	             '?'	shift, and goto state <299>
	          "with"	shift, and goto state <300>
	          "less"	shift, and goto state <301>
	       <default>	reduce using rule {309} (cost)

<1393>	<456>	->	. 	{ "graphrewrite" "graphtype" "declare" "signature" "module" "procedure" "function" "fun" "postorder:" "preorder:" "before:" "bottomup:" "topdown:" "failrewrite" "cutrewrite" "attributegrammar" "instantiate" "refine" "datatype" ? "classof" ATTRIB_ID "begin" "end" ".[" "type" ".(" "{|" "(|" "[|" '}' '#' META_QUOTE BIGINT_TOK QUARK_TOK CONS_EXP POLY_DATATYPE "matchscan" "matchall" "match" "inference" "lexeme" "case" "syntax" "rewrite" }
	case_rule	->	case_ top_pat <455> guard_exp cost ':' . <456> decl_list 

	           <456>	goto state <1413>
	       <default>	reduce using rule {752} (<456>)

<1394>	cost	->	. 	{ ':' }
	bar_rule	->	line_number id_or_cons "->" top_pat <457> guard_exp . cost ':' bar_rule_action 

	            '\\'	shift, and goto state <1361>
	            cost	goto state <1414>
	       <default>	reduce using rule {308} (cost)

<1395>	bar_rule_action	->	. 	{ "postorder:" "preorder:" "before:" "bottomup:" "topdown:" "end" '}' '|' }
	bar_rule	->	line_number top_pat <458> guard_exp cost ':' . bar_rule_action 

	       "rewrite"	shift, and goto state <6>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <944>
	             '{'	shift, and goto state <638>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	        "return"	shift, and goto state <797>
	         "begin"	shift, and goto state <25>
	    "cutrewrite"	shift, and goto state <33>
	   "failrewrite"	shift, and goto state <34>
	       "declare"	shift, and goto state <40>
	        rewrite_	goto state <1415>
	              id	goto state <945>
	            cons	goto state <112>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	primitive_app_exp	goto state <946>
	   primitive_exp	goto state <947>
	        list_exp	goto state <948>
	 bar_rule_action	goto state <1416>
	replacement_exp_decl	goto state <1417>
	      return_exp	goto state <1418>
	 replacement_exp	goto state <1419>
	      brace_body	goto state <1420>
	replacement_decl	goto state <1421>
	   compound_stmt	goto state <1422>
	       <default>	reduce using rule {300} (bar_rule_action)

<1396>	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" '(' protocols ')' qualifiers_opt <477> '{' rewrite_indexings case_or_bar_rules . '}' 

	             '}'	shift, and goto state <1423>

<1397>	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" '(' protocols ')' qualifiers_opt <478> "of" rewrite_indexings case_or_bar_rules . "end" "rewrite" ';' 

	           "end"	shift, and goto state <1424>

<1398>	datatype_body	->	scope ':' brace_body . 

	       <default>	reduce using rule {365} (datatype_body)

<1399>	selector	->	id '=' app_exp . 	{ "law" "and" ';' '|' "where" }
	tick	->	. 	{ '{' }
	app_exp	->	app_exp . simple_exp 

	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	            '\''	shift, and goto state <106>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <302>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	         "where"	reduce using rule {440} (selector)
	             '|'	reduce using rule {440} (selector)
	             ';'	reduce using rule {440} (selector)
	           "and"	reduce using rule {440} (selector)
	           "law"	reduce using rule {440} (selector)
	             '{'	reduce using rule {244} (tick)

<1400>	selectors	->	selector "and" selectors . 

	       <default>	reduce using rule {439} (selectors)

<1401>	bnf_rule	->	line_number id ty_opt ':' alt_productions ';' . 

	       <default>	reduce using rule {537} (bnf_rule)

<1402>	<474>	->	. 	{ "prec:" ';' '?' '{' '(' CHAR_TOK REGEXP_TOK STRING_TOK CONS_TOK ID_TOK '|' }
	alt_productions	->	production '|' . alt_productions 

	 alt_productions	goto state <1425>
	      production	goto state <1371>
	           <474>	goto state <1057>
	       <default>	reduce using rule {770} (<474>)

<1403>	function_def	->	"function" cons_or_string '(' fun_args ')' "return" ty "is" defs "begin" stmt_list "end" ';' . 

	       <default>	reduce using rule {617} (function_def)

<1404>	eqfun	->	"equality:" id . 

	       <default>	reduce using rule {700} (eqfun)

<1405>	edge_def	->	id opt_of node "->" . node indexing 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <1376>
	            node	goto state <1426>

<1406>	edge_def	->	id opt_of node "<=>" . node indexing 
	edge_def	->	id opt_of node "<=>" . '*' node indexing 

	             '*'	shift, and goto state <1427>
	          ID_TOK	shift, and goto state <93>
	              id	goto state <1376>
	            node	goto state <1428>

<1407>	edge_def	->	id opt_of node "<->" . node indexing 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <1376>
	            node	goto state <1429>

<1408>	grs_simple_pat	->	negate id_or_cons '(' pat_list1 ')' . 

	       <default>	reduce using rule {740} (grs_simple_pat)

<1409>	grs_conclusion	->	negate id_or_cons '(' . exp_list ')' 
	exp_list	->	. 	{ ')' }
	tick	->	. 	{ '{' }

	             '*'	shift, and goto state <90>
	             '~'	shift, and goto state <91>
	             '!'	shift, and goto state <92>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	        CONS_EXP	shift, and goto state <14>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	      META_QUOTE	shift, and goto state <17>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <101>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	             '&'	shift, and goto state <102>
	             '-'	shift, and goto state <103>
	            "++"	shift, and goto state <104>
	            "--"	shift, and goto state <105>
	            '\''	shift, and goto state <106>
	         "setof"	shift, and goto state <107>
	           "arb"	shift, and goto state <108>
	           "dom"	shift, and goto state <109>
	           "ran"	shift, and goto state <110>
	              id	goto state <111>
	            cons	goto state <112>
	         cons_id	goto state <49>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	      meta_quote	goto state <52>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	             exp	goto state <122>
	         app_exp	goto state <123>
	   primitive_exp	goto state <124>
	      simple_exp	goto state <125>
	            tick	goto state <126>
	        list_exp	goto state <127>
	        cons_exp	goto state <128>
	        meta_exp	goto state <129>
	        exp_list	goto state <1430>
	       exp_list2	goto state <131>
	        setl_exp	goto state <132>
	set_comprehension	goto state <133>
	             ')'	reduce using rule {262} (exp_list)
	             '{'	reduce using rule {244} (tick)

<1410>	grs_conclusion	->	id_or_cons '(' exp_list . ')' 

	             ')'	shift, and goto state <1431>

<1411>	grs_conclusions	->	grs_conclusion ',' grs_conclusions . 

	       <default>	reduce using rule {743} (grs_conclusions)

<1412>	grs_conclusions	->	grs_conclusion "and" grs_conclusions . 

	       <default>	reduce using rule {742} (grs_conclusions)

<1413>	<463>	->	. 	{ "graphrewrite" "graphtype" "declare" "signature" "module" "procedure" "function" "fun" "failrewrite" "cutrewrite" "attributegrammar" "instantiate" "refine" "datatype" ? "classof" ATTRIB_ID "begin" ".[" "type" ".(" "{|" "(|" "[|" '#' META_QUOTE BIGINT_TOK QUARK_TOK CONS_EXP POLY_DATATYPE "matchscan" "matchall" "match" "inference" "lexeme" "syntax" "rewrite" }
	decl_list	->	. 	{ "postorder:" "preorder:" "before:" "bottomup:" "topdown:" "end" '}' "case" }
	case_rule	->	case_ top_pat <455> guard_exp cost ':' <456> . decl_list 

	       decl_list	goto state <1432>
	           <463>	goto state <4>
	       "rewrite"	reduce using rule {759} (<463>)
	        "syntax"	reduce using rule {759} (<463>)
	        "lexeme"	reduce using rule {759} (<463>)
	     "inference"	reduce using rule {759} (<463>)
	         "match"	reduce using rule {759} (<463>)
	      "matchall"	reduce using rule {759} (<463>)
	     "matchscan"	reduce using rule {759} (<463>)
	   POLY_DATATYPE	reduce using rule {759} (<463>)
	        CONS_EXP	reduce using rule {759} (<463>)
	       QUARK_TOK	reduce using rule {759} (<463>)
	      BIGINT_TOK	reduce using rule {759} (<463>)
	      META_QUOTE	reduce using rule {759} (<463>)
	             '#'	reduce using rule {759} (<463>)
	            "[|"	reduce using rule {759} (<463>)
	            "(|"	reduce using rule {759} (<463>)
	            "{|"	reduce using rule {759} (<463>)
	            ".("	reduce using rule {759} (<463>)
	          "type"	reduce using rule {759} (<463>)
	            ".["	reduce using rule {759} (<463>)
	         "begin"	reduce using rule {759} (<463>)
	       ATTRIB_ID	reduce using rule {759} (<463>)
	       "classof"	reduce using rule {759} (<463>)
	               ?	reduce using rule {759} (<463>)
	      "datatype"	reduce using rule {759} (<463>)
	        "refine"	reduce using rule {759} (<463>)
	   "instantiate"	reduce using rule {759} (<463>)
	"attributegrammar"	reduce using rule {759} (<463>)
	    "cutrewrite"	reduce using rule {759} (<463>)
	   "failrewrite"	reduce using rule {759} (<463>)
	           "fun"	reduce using rule {759} (<463>)
	      "function"	reduce using rule {759} (<463>)
	     "procedure"	reduce using rule {759} (<463>)
	        "module"	reduce using rule {759} (<463>)
	     "signature"	reduce using rule {759} (<463>)
	       "declare"	reduce using rule {759} (<463>)
	     "graphtype"	reduce using rule {759} (<463>)
	  "graphrewrite"	reduce using rule {759} (<463>)
	          "case"	reduce using rule {346} (decl_list)
	             '}'	reduce using rule {346} (decl_list)
	           "end"	reduce using rule {346} (decl_list)
	      "topdown:"	reduce using rule {346} (decl_list)
	     "bottomup:"	reduce using rule {346} (decl_list)
	       "before:"	reduce using rule {346} (decl_list)
	     "preorder:"	reduce using rule {346} (decl_list)
	    "postorder:"	reduce using rule {346} (decl_list)

<1414>	bar_rule	->	line_number id_or_cons "->" top_pat <457> guard_exp cost . ':' bar_rule_action 

	             ':'	shift, and goto state <1433>

<1415>	replacement_decl	->	rewrite_ . paren_exp 

	             '('	shift, and goto state <211>
	       paren_exp	goto state <1434>

<1416>	bar_rule	->	line_number top_pat <458> guard_exp cost ':' bar_rule_action . 

	       <default>	reduce using rule {293} (bar_rule)

<1417>	semi_opt	->	. 	{ "postorder:" "preorder:" "before:" "bottomup:" "topdown:" "end" '}' '|' }
	bar_rule_action	->	replacement_exp_decl . semi_opt 

	             ';'	shift, and goto state <1435>
	        semi_opt	goto state <1436>
	       <default>	reduce using rule {303} (semi_opt)

<1418>	bar_rule_action	->	return_exp . semi_opt 
	semi_opt	->	. 	{ "postorder:" "preorder:" "before:" "bottomup:" "topdown:" "end" '}' '|' }

	             ';'	shift, and goto state <1435>
	        semi_opt	goto state <1437>
	       <default>	reduce using rule {303} (semi_opt)

<1419>	replacement_exp_decl	->	replacement_exp . 

	       <default>	reduce using rule {301} (replacement_exp_decl)

<1420>	bar_rule_action	->	brace_body . 

	       <default>	reduce using rule {295} (bar_rule_action)

<1421>	semi_opt	->	. 	{ "postorder:" "preorder:" "before:" "bottomup:" "topdown:" "end" '}' '|' }
	bar_rule_action	->	replacement_decl . semi_opt 

	             ';'	shift, and goto state <1435>
	        semi_opt	goto state <1438>
	       <default>	reduce using rule {303} (semi_opt)

<1422>	bar_rule_action	->	compound_stmt . 

	       <default>	reduce using rule {299} (bar_rule_action)

<1423>	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" '(' protocols ')' qualifiers_opt <477> '{' rewrite_indexings case_or_bar_rules '}' . 

	       <default>	reduce using rule {576} (rewriting_decl)

<1424>	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" '(' protocols ')' qualifiers_opt <478> "of" rewrite_indexings case_or_bar_rules "end" . "rewrite" ';' 

	       "rewrite"	shift, and goto state <1439>

<1425>	alt_productions	->	production '|' alt_productions . 

	       <default>	reduce using rule {551} (alt_productions)

<1426>	indexing	->	. 	{ "and" ')' '|' }
	edge_def	->	id opt_of node "->" node . indexing 

	        "index:"	shift, and goto state <1440>
	        indexing	goto state <1441>
	       <default>	reduce using rule {711} (indexing)

<1427>	edge_def	->	id opt_of node "<=>" '*' . node indexing 

	          ID_TOK	shift, and goto state <93>
	              id	goto state <1376>
	            node	goto state <1442>

<1428>	edge_def	->	id opt_of node "<=>" node . indexing 
	indexing	->	. 	{ "and" ')' '|' }

	        "index:"	shift, and goto state <1440>
	        indexing	goto state <1443>
	       <default>	reduce using rule {711} (indexing)

<1429>	edge_def	->	id opt_of node "<->" node . indexing 
	indexing	->	. 	{ "and" ')' '|' }

	        "index:"	shift, and goto state <1440>
	        indexing	goto state <1444>
	       <default>	reduce using rule {711} (indexing)

<1430>	grs_conclusion	->	negate id_or_cons '(' exp_list . ')' 

	             ')'	shift, and goto state <1445>

<1431>	grs_conclusion	->	id_or_cons '(' exp_list ')' . 

	       <default>	reduce using rule {744} (grs_conclusion)

<1432>	case_rule	->	case_ top_pat <455> guard_exp cost ':' <456> decl_list . 

	       <default>	reduce using rule {289} (case_rule)

<1433>	bar_rule_action	->	. 	{ "postorder:" "preorder:" "before:" "bottomup:" "topdown:" "end" '}' '|' }
	bar_rule	->	line_number id_or_cons "->" top_pat <457> guard_exp cost ':' . bar_rule_action 

	       "rewrite"	shift, and goto state <6>
	          ID_TOK	shift, and goto state <93>
	        CONS_TOK	shift, and goto state <94>
	      STRING_TOK	shift, and goto state <95>
	       QUARK_TOK	shift, and goto state <15>
	      BIGINT_TOK	shift, and goto state <16>
	         INT_TOK	shift, and goto state <96>
	        REAL_TOK	shift, and goto state <97>
	        CHAR_TOK	shift, and goto state <98>
	         "false"	shift, and goto state <99>
	          "true"	shift, and goto state <100>
	             '#'	shift, and goto state <18>
	             '('	shift, and goto state <944>
	             '{'	shift, and goto state <638>
	            "[|"	shift, and goto state <19>
	            "(|"	shift, and goto state <20>
	            "{|"	shift, and goto state <21>
	            ".("	shift, and goto state <22>
	        "return"	shift, and goto state <797>
	         "begin"	shift, and goto state <25>
	    "cutrewrite"	shift, and goto state <33>
	   "failrewrite"	shift, and goto state <34>
	       "declare"	shift, and goto state <40>
	        rewrite_	goto state <1415>
	              id	goto state <945>
	            cons	goto state <112>
	          string	goto state <113>
	           quark	goto state <114>
	          bigint	goto state <115>
	         integer	goto state <116>
	            real	goto state <117>
	       character	goto state <118>
	         boolean	goto state <119>
	non_string_literal	goto state <120>
	         literal	goto state <121>
	primitive_app_exp	goto state <946>
	   primitive_exp	goto state <947>
	        list_exp	goto state <948>
	 bar_rule_action	goto state <1446>
	replacement_exp_decl	goto state <1417>
	      return_exp	goto state <1418>
	 replacement_exp	goto state <1419>
	      brace_body	goto state <1420>
	replacement_decl	goto state <1421>
	   compound_stmt	goto state <1422>
	       <default>	reduce using rule {300} (bar_rule_action)

<1434>	replacement_decl	->	rewrite_ paren_exp . 

	       <default>	reduce using rule {586} (replacement_decl)

<1435>	semi_opt	->	';' . 

	       <default>	reduce using rule {304} (semi_opt)

<1436>	bar_rule_action	->	replacement_exp_decl semi_opt . 

	       <default>	reduce using rule {297} (bar_rule_action)

<1437>	bar_rule_action	->	return_exp semi_opt . 

	       <default>	reduce using rule {298} (bar_rule_action)

<1438>	bar_rule_action	->	replacement_decl semi_opt . 

	       <default>	reduce using rule {296} (bar_rule_action)

<1439>	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" '(' protocols ')' qualifiers_opt <478> "of" rewrite_indexings case_or_bar_rules "end" "rewrite" . ';' 

	             ';'	shift, and goto state <1447>

<1440>	indexing	->	"index:" . index_types 

	           "dom"	shift, and goto state <1448>
	           "ran"	shift, and goto state <1449>
	     index_types	goto state <1450>
	      index_type	goto state <1451>

<1441>	edge_def	->	id opt_of node "->" node indexing . 

	       <default>	reduce using rule {706} (edge_def)

<1442>	edge_def	->	id opt_of node "<=>" '*' node . indexing 
	indexing	->	. 	{ "and" ')' '|' }

	        "index:"	shift, and goto state <1440>
	        indexing	goto state <1452>
	       <default>	reduce using rule {711} (indexing)

<1443>	edge_def	->	id opt_of node "<=>" node indexing . 

	       <default>	reduce using rule {708} (edge_def)

<1444>	edge_def	->	id opt_of node "<->" node indexing . 

	       <default>	reduce using rule {707} (edge_def)

<1445>	grs_conclusion	->	negate id_or_cons '(' exp_list ')' . 

	       <default>	reduce using rule {745} (grs_conclusion)

<1446>	bar_rule	->	line_number id_or_cons "->" top_pat <457> guard_exp cost ':' bar_rule_action . 

	       <default>	reduce using rule {292} (bar_rule)

<1447>	rewriting_decl	->	rewrite_ paren_exp opt_dest "type" '(' protocols ')' qualifiers_opt <478> "of" rewrite_indexings case_or_bar_rules "end" "rewrite" ';' . 

	       <default>	reduce using rule {577} (rewriting_decl)

<1448>	index_type	->	"dom" . 	{ "ran" "dom" "and" ',' ')' '|' }
	index_type	->	"dom" . "->" "ran" 
	index_type	->	"dom" . "<-" "ran" 
	index_type	->	"dom" . "<->" "ran" 

	            "->"	shift, and goto state <1453>
	            "<-"	shift, and goto state <1454>
	           "<->"	shift, and goto state <1455>
	       <default>	reduce using rule {716} (index_type)

<1449>	index_type	->	"ran" . 	{ "ran" "dom" "and" ',' ')' '|' }
	index_type	->	"ran" . "->" "dom" 

	            "->"	shift, and goto state <1456>
	       <default>	reduce using rule {717} (index_type)

<1450>	indexing	->	"index:" index_types . 

	       <default>	reduce using rule {712} (indexing)

<1451>	index_types	->	index_type . ',' index_types 
	index_types	->	index_type . 	{ "and" ')' '|' }
	index_types	->	index_type . index_types 

	             ','	shift, and goto state <1457>
	           "dom"	shift, and goto state <1448>
	           "ran"	shift, and goto state <1449>
	     index_types	goto state <1458>
	      index_type	goto state <1451>
	       <default>	reduce using rule {713} (index_types)

<1452>	edge_def	->	id opt_of node "<=>" '*' node indexing . 

	       <default>	reduce using rule {709} (edge_def)

<1453>	index_type	->	"dom" "->" . "ran" 

	           "ran"	shift, and goto state <1459>

<1454>	index_type	->	"dom" "<-" . "ran" 

	           "ran"	shift, and goto state <1460>

<1455>	index_type	->	"dom" "<->" . "ran" 

	           "ran"	shift, and goto state <1461>

<1456>	index_type	->	"ran" "->" . "dom" 

	           "dom"	shift, and goto state <1462>

<1457>	index_types	->	index_type ',' . index_types 

	           "dom"	shift, and goto state <1448>
	           "ran"	shift, and goto state <1449>
	     index_types	goto state <1463>
	      index_type	goto state <1451>

<1458>	index_types	->	index_type index_types . 

	       <default>	reduce using rule {714} (index_types)

<1459>	index_type	->	"dom" "->" "ran" . 

	       <default>	reduce using rule {718} (index_type)

<1460>	index_type	->	"dom"