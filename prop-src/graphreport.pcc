///////////////////////////////////////////////////////////////////////////////
//
//  This file generates a readable report of the graph type representation.
//
///////////////////////////////////////////////////////////////////////////////

#include <iostream>
#include "graphtype.ph"
#include "graphedges.ph"


///////////////////////////////////////////////////////////////////////////////
//
//  Print a report on a graph type definition
//
///////////////////////////////////////////////////////////////////////////////

void GraphTypeDef::print_report(CodeGen& f)
{
  for_each ( NodeDef *, n, node_defs)
    n->print_report(f);
  for_each ( EdgeDef *, e, edge_defs)
    e->print_report(f);
}

///////////////////////////////////////////////////////////////////////////////
//
//  Describe the node
//
///////////////////////////////////////////////////////////////////////////////

void NodeDef::print_report( CodeGen& f)
{
}

///////////////////////////////////////////////////////////////////////////////
//
//  Describe the edge
//
///////////////////////////////////////////////////////////////////////////////

void EdgeDef::print_report( CodeGen& f)
{
}

void MapEdge::print_report( CodeGen& f)
{  Super::print_report(f);
}

void MultiMapEdge::print_report( CodeGen& f)
{  Super::print_report(f);
}

void BijectionEdge::print_report( CodeGen& f)
{  Super::print_report(f);
}

void EquivRelationEdge::print_report( CodeGen& f)
{  Super::print_report(f);
}
