///////////////////////////////////////////////////////////////////////////////
//
//  Testing tuples
//
///////////////////////////////////////////////////////////////////////////////
#include <iostream.h>

const .[int,int]                  a = .(1,2);
const .[char,Quark,double] b = .('k',#"Church Rosser",3.0);

datatype List<a> = #[] | #[ a ... List<a> ];

ostream& operator << (ostream& f, List<.[int,int]> l)
{  f << '[';
   match while (l)
   {  #[ .(x,y) ... t ]:  
      { f << '(' << x << ',' << y << ')'; 
        if (t) f << ", ";
        l = t;
      }
   }
   f << ']';
   return f;
}

int main()
{
   List<.[int,int]> fib = #[ .(1,1),  .(2,2),  .(3,3),  .(4,5),  .(5,8), 
                             .(6,13), .(7,21), .(8,34), .(9,55), .(10,89)
                          ];
   cout << "Fibonacci numbers = " << fib << '\n';
   return 0;
}
