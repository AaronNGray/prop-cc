//////////////////////////////////////////////////////////////////////////////
//
//  Testing the list features. 
//
//////////////////////////////////////////////////////////////////////////////
#include <iostream.h>

//////////////////////////////////////////////////////////////////////////////
//  Defines a list type.
//////////////////////////////////////////////////////////////////////////////
datatype LIST = #[] 
              | #[ char * ... LIST ]
              ;

//////////////////////////////////////////////////////////////////////////////
//  Method to print a list.
//////////////////////////////////////////////////////////////////////////////
ostream& operator << (ostream& f, LIST l)
{  match (l) 
   {  #[]:        { return f; }
   |  #[x]:       { return f << x; }
   |  #[x ... y]: { return f << x << ", " << y; }
   }
}

//////////////////////////////////////////////////////////////////////////////
//  Try the new list constructor in expressions.
//////////////////////////////////////////////////////////////////////////////
int main()
{  LIST fruits  = #["apple", "orange", "pear"];
   LIST scums   = #["marketing", "lawyers", "Republicans"];
   LIST animals = #["weasels", "skunks" ... scums]; 
   cout << "Fruits        = " << fruits  << '\n';
   cout << "Animals       = " << animals << '\n';
   cout << "Mathematicans = " << #["Skolem", "Curry", "Thue", "Church"] << '\n';
   return 0;
}
